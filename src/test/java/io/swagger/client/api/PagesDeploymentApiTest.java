/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.DeploymentListResponse;
import io.swagger.client.model.DeploymentNewDeployment;
import io.swagger.client.model.DeploymentResponseDetails;
import io.swagger.client.model.DeploymentResponseLogs;
import io.swagger.client.model.InlineResponse4xx118;
import io.swagger.client.model.InlineResponse4xx119;
import io.swagger.client.model.InlineResponse4xx120;
import io.swagger.client.model.InlineResponse4xx121;
import io.swagger.client.model.InlineResponse4xx122;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for PagesDeploymentApi
 */
@Ignore
public class PagesDeploymentApiTest {

    private final PagesDeploymentApi api = new PagesDeploymentApi();

    /**
     * Create deployment
     *
     * Start a new deployment from production. The repo/account must have been authorized through the Pages UI dash before.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDeploymentCreateDeploymentTest() throws Exception {
        String branch = null;
        String projectName = null;
        String accountIdentifier = null;
        DeploymentNewDeployment response = api.pagesDeploymentCreateDeployment(branch, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete deployment
     *
     * Destroy a deployment.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDeploymentDeleteDeploymentTest() throws Exception {
        String deploymentIdentifier = null;
        String projectName = null;
        String accountIdentifier = null;
        Object response = api.pagesDeploymentDeleteDeployment(deploymentIdentifier, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get deployment info
     *
     * Fetch a deployment.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDeploymentGetDeploymentInfoTest() throws Exception {
        String deploymentIdentifier = null;
        String projectName = null;
        String accountIdentifier = null;
        DeploymentResponseDetails response = api.pagesDeploymentGetDeploymentInfo(deploymentIdentifier, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get deployment logs
     *
     * Fetch deploy logs.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDeploymentGetDeploymentLogsTest() throws Exception {
        String deploymentIdentifier = null;
        String projectName = null;
        String accountIdentifier = null;
        DeploymentResponseLogs response = api.pagesDeploymentGetDeploymentLogs(deploymentIdentifier, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get deployments
     *
     * Fetch a list of deployments from a project.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDeploymentGetDeploymentsTest() throws Exception {
        String projectName = null;
        String accountIdentifier = null;
        DeploymentListResponse response = api.pagesDeploymentGetDeployments(projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Retry deployment
     *
     * Retry a previous deployment.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDeploymentRetryDeploymentTest() throws Exception {
        String deploymentIdentifier = null;
        String projectName = null;
        String accountIdentifier = null;
        DeploymentNewDeployment response = api.pagesDeploymentRetryDeployment(deploymentIdentifier, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Rollback deployment
     *
     * Rollback the production deployment to a previous deploy. You can only rollback to succesful builds on production.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDeploymentRollbackDeploymentTest() throws Exception {
        String deploymentIdentifier = null;
        String projectName = null;
        String accountIdentifier = null;
        DeploymentResponseDetails response = api.pagesDeploymentRollbackDeployment(deploymentIdentifier, projectName, accountIdentifier);

        // TODO: test validations
    }
}
