/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse200106;
import io.swagger.client.model.InlineResponse4xx428;
import io.swagger.client.model.InlineResponse4xx429;
import io.swagger.client.model.InlineResponse4xx430;
import io.swagger.client.model.RatelimitResponseCollection;
import io.swagger.client.model.RatelimitResponseSingle;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for RateLimitsForAZoneApi
 */
@Ignore
public class RateLimitsForAZoneApiTest {

    private final RateLimitsForAZoneApi api = new RateLimitsForAZoneApi();

    /**
     * Create a rate limit
     *
     * Creates a new rate limit for a zone. Refer to the object definition for a list of required attributes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rateLimitsForAZoneCreateARateLimitTest() throws Exception {
        Object body = null;
        String zoneIdentifier = null;
        RatelimitResponseSingle response = api.rateLimitsForAZoneCreateARateLimit(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a rate limit
     *
     * Deletes an existing rate limit.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rateLimitsForAZoneDeleteARateLimitTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        InlineResponse200106 response = api.rateLimitsForAZoneDeleteARateLimit(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Get a rate limit
     *
     * Fetches the details of a rate limit.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rateLimitsForAZoneGetARateLimitTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        RatelimitResponseSingle response = api.rateLimitsForAZoneGetARateLimit(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * List rate limits
     *
     * Fetches the rate limits for a zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rateLimitsForAZoneListRateLimitsTest() throws Exception {
        String zoneIdentifier = null;
        RatelimitResponseCollection response = api.rateLimitsForAZoneListRateLimits(zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Update a rate limit
     *
     * Updates an existing rate limit.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rateLimitsForAZoneUpdateARateLimitTest() throws Exception {
        Object body = null;
        String id = null;
        String zoneIdentifier = null;
        RatelimitResponseSingle response = api.rateLimitsForAZoneUpdateARateLimit(body, id, zoneIdentifier);

        // TODO: test validations
    }
}
