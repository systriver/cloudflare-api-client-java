/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.GatewayRulesBody;
import io.swagger.client.model.InlineResponse4xx299;
import io.swagger.client.model.InlineResponse4xx300;
import io.swagger.client.model.InlineResponse4xx301;
import io.swagger.client.model.RulesComponentsSchemasEmptyResponse;
import io.swagger.client.model.RulesComponentsSchemasIdentifier;
import io.swagger.client.model.RulesComponentsSchemasResponseCollection;
import io.swagger.client.model.RulesComponentsSchemasSingleResponse;
import io.swagger.client.model.RulesUuidBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ZeroTrustGatewayRulesApi
 */
@Ignore
public class ZeroTrustGatewayRulesApiTest {

    private final ZeroTrustGatewayRulesApi api = new ZeroTrustGatewayRulesApi();

    /**
     * Create Zero Trust Gateway Rule
     *
     * Create a new Zero Trust Gateway Rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zeroTrustGatewayRulesCreateZeroTrustGatewayRuleTest() throws Exception {
        GatewayRulesBody body = null;
        RulesComponentsSchemasIdentifier identifier = null;
        RulesComponentsSchemasSingleResponse response = api.zeroTrustGatewayRulesCreateZeroTrustGatewayRule(body, identifier);

        // TODO: test validations
    }
    /**
     * Delete Zero Trust Gateway Rule
     *
     * Delete a Zero Trust Gateway Rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleTest() throws Exception {
        String uuid = null;
        RulesComponentsSchemasIdentifier identifier = null;
        RulesComponentsSchemasEmptyResponse response = api.zeroTrustGatewayRulesDeleteZeroTrustGatewayRule(uuid, identifier);

        // TODO: test validations
    }
    /**
     * List Zero Trust Gateway Rules
     *
     * List Zero Trust Gateway Rules for an account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zeroTrustGatewayRulesListZeroTrustGatewayRulesTest() throws Exception {
        RulesComponentsSchemasIdentifier identifier = null;
        RulesComponentsSchemasResponseCollection response = api.zeroTrustGatewayRulesListZeroTrustGatewayRules(identifier);

        // TODO: test validations
    }
    /**
     * Update Zero Trust Gateway Rule
     *
     * Update a configured Zero Trust Gateway Rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleTest() throws Exception {
        RulesUuidBody body = null;
        String uuid = null;
        RulesComponentsSchemasIdentifier identifier = null;
        RulesComponentsSchemasSingleResponse response = api.zeroTrustGatewayRulesUpdateZeroTrustGatewayRule(body, uuid, identifier);

        // TODO: test validations
    }
    /**
     * Zero Trust Gateway Rule Details
     *
     * Fetch a single Zero Trust Gateway Rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsTest() throws Exception {
        String uuid = null;
        RulesComponentsSchemasIdentifier identifier = null;
        RulesComponentsSchemasSingleResponse response = api.zeroTrustGatewayRulesZeroTrustGatewayRuleDetails(uuid, identifier);

        // TODO: test validations
    }
}
