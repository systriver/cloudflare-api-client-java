/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.HealthDetails;
import io.swagger.client.model.IdentifierPreviewBody3;
import io.swagger.client.model.InlineResponse4xx66;
import io.swagger.client.model.InlineResponse4xx68;
import io.swagger.client.model.InlineResponse4xx69;
import io.swagger.client.model.InlineResponse4xx70;
import io.swagger.client.model.InlineResponse4xx71;
import io.swagger.client.model.InlineResponse4xx72;
import io.swagger.client.model.LoadBalancersPoolsBody2;
import io.swagger.client.model.LoadBalancersPoolsBody3;
import io.swagger.client.model.PoolComponentsSchemasIdResponse;
import io.swagger.client.model.PoolComponentsSchemasIdentifier;
import io.swagger.client.model.PoolComponentsSchemasResponseCollection;
import io.swagger.client.model.PoolComponentsSchemasSingleResponse;
import io.swagger.client.model.PoolsIdentifierBody2;
import io.swagger.client.model.PoolsIdentifierBody3;
import io.swagger.client.model.PreviewResponse;
import io.swagger.client.model.SchemasReferencesResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for LoadBalancerPoolsApi
 */
@Ignore
public class LoadBalancerPoolsApiTest {

    private final LoadBalancerPoolsApi api = new LoadBalancerPoolsApi();

    /**
     * Create Pool
     *
     * Create a new pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsCreatePoolTest() throws Exception {
        LoadBalancersPoolsBody2 body = null;
        PoolComponentsSchemasSingleResponse response = api.loadBalancerPoolsCreatePool(body);

        // TODO: test validations
    }
    /**
     * Delete Pool
     *
     * Delete a configured pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsDeletePoolTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        PoolComponentsSchemasIdResponse response = api.loadBalancerPoolsDeletePool(identifier);

        // TODO: test validations
    }
    /**
     * List Pool References
     *
     * Get the list of resources that reference the provided pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsListPoolReferencesTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        SchemasReferencesResponse response = api.loadBalancerPoolsListPoolReferences(identifier);

        // TODO: test validations
    }
    /**
     * List Pools
     *
     * List configured pools.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsListPoolsTest() throws Exception {
        PoolComponentsSchemasResponseCollection response = api.loadBalancerPoolsListPools();

        // TODO: test validations
    }
    /**
     * Patch Pool
     *
     * Apply changes to an existing pool, overwriting the supplied properties.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsPatchPoolTest() throws Exception {
        PoolsIdentifierBody3 body = null;
        PoolComponentsSchemasIdentifier identifier = null;
        PoolComponentsSchemasSingleResponse response = api.loadBalancerPoolsPatchPool(body, identifier);

        // TODO: test validations
    }
    /**
     * Patch Pools
     *
     * Apply changes to a number of existing pools, overwriting the supplied properties. Pools are ordered by ascending &#x60;name&#x60;. Returns the list of affected pools. Supports the standard pagination query parameters, either &#x60;limit&#x60;/&#x60;offset&#x60; or &#x60;per_page&#x60;/&#x60;page&#x60;.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsPatchPoolsTest() throws Exception {
        LoadBalancersPoolsBody3 body = null;
        PoolComponentsSchemasResponseCollection response = api.loadBalancerPoolsPatchPools(body);

        // TODO: test validations
    }
    /**
     * Pool Details
     *
     * Fetch a single configured pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsPoolDetailsTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        PoolComponentsSchemasSingleResponse response = api.loadBalancerPoolsPoolDetails(identifier);

        // TODO: test validations
    }
    /**
     * Pool Health Details
     *
     * Fetch the latest pool health status for a single pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsPoolHealthDetailsTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        HealthDetails response = api.loadBalancerPoolsPoolHealthDetails(identifier);

        // TODO: test validations
    }
    /**
     * Preview Pool
     *
     * Preview pool health using provided monitor details. The returned preview_id can be used in the preview endpoint to retrieve the results.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsPreviewPoolTest() throws Exception {
        IdentifierPreviewBody3 body = null;
        PoolComponentsSchemasIdentifier identifier = null;
        PreviewResponse response = api.loadBalancerPoolsPreviewPool(body, identifier);

        // TODO: test validations
    }
    /**
     * Update Pool
     *
     * Modify a configured pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loadBalancerPoolsUpdatePoolTest() throws Exception {
        PoolsIdentifierBody2 body = null;
        PoolComponentsSchemasIdentifier identifier = null;
        PoolComponentsSchemasSingleResponse response = api.loadBalancerPoolsUpdatePool(body, identifier);

        // TODO: test validations
    }
}
