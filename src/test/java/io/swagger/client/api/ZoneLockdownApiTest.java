/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse200102;
import io.swagger.client.model.InlineResponse4xx388;
import io.swagger.client.model.InlineResponse4xx389;
import io.swagger.client.model.InlineResponse4xx390;
import io.swagger.client.model.ZonelockdownResponseCollection;
import io.swagger.client.model.ZonelockdownResponseSingle;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ZoneLockdownApi
 */
@Ignore
public class ZoneLockdownApiTest {

    private final ZoneLockdownApi api = new ZoneLockdownApi();

    /**
     * Create a Zone Lockdown rule
     *
     * Creates a new Zone Lockdown rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLockdownCreateAZoneLockdownRuleTest() throws Exception {
        Object body = null;
        String zoneIdentifier = null;
        ZonelockdownResponseSingle response = api.zoneLockdownCreateAZoneLockdownRule(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a Zone Lockdown rule
     *
     * Deletes an existing Zone Lockdown rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLockdownDeleteAZoneLockdownRuleTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        InlineResponse200102 response = api.zoneLockdownDeleteAZoneLockdownRule(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Get a Zone Lockdown rule
     *
     * Fetches the details of a Zone Lockdown rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLockdownGetAZoneLockdownRuleTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        ZonelockdownResponseSingle response = api.zoneLockdownGetAZoneLockdownRule(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * List Zone Lockdown rules
     *
     * Fetches Zone Lockdown rules. You can filter the results using several optional parameters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLockdownListZoneLockdownRulesTest() throws Exception {
        String zoneIdentifier = null;
        ZonelockdownResponseCollection response = api.zoneLockdownListZoneLockdownRules(zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Update a Zone Lockdown rule
     *
     * Updates an existing Zone Lockdown rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLockdownUpdateAZoneLockdownRuleTest() throws Exception {
        Object body = null;
        String id = null;
        String zoneIdentifier = null;
        ZonelockdownResponseSingle response = api.zoneLockdownUpdateAZoneLockdownRule(body, id, zoneIdentifier);

        // TODO: test validations
    }
}
