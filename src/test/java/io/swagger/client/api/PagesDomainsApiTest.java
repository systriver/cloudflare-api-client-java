/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.DomainResponseCollection;
import io.swagger.client.model.DomainResponseSingle;
import io.swagger.client.model.InlineResponse4xx118;
import io.swagger.client.model.InlineResponse4xx123;
import io.swagger.client.model.InlineResponse4xx124;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for PagesDomainsApi
 */
@Ignore
public class PagesDomainsApiTest {

    private final PagesDomainsApi api = new PagesDomainsApi();

    /**
     * Add domain
     *
     * Add a new domain for the Pages project.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDomainsAddDomainTest() throws Exception {
        Object body = null;
        String projectName = null;
        String accountIdentifier = null;
        DomainResponseSingle response = api.pagesDomainsAddDomain(body, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete domain
     *
     * Delete a domain.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDomainsDeleteDomainTest() throws Exception {
        String domainName = null;
        String projectName = null;
        String accountIdentifier = null;
        Object response = api.pagesDomainsDeleteDomain(domainName, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get domain
     *
     * Fetch a single domain.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDomainsGetDomainTest() throws Exception {
        String domainName = null;
        String projectName = null;
        String accountIdentifier = null;
        DomainResponseSingle response = api.pagesDomainsGetDomain(domainName, projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get domains
     *
     * Fetch a list of all domains.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDomainsGetDomainsTest() throws Exception {
        String projectName = null;
        String accountIdentifier = null;
        DomainResponseCollection response = api.pagesDomainsGetDomains(projectName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Patch domain
     *
     * Retry the validation status of a single domain.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pagesDomainsPatchDomainTest() throws Exception {
        String domainName = null;
        String projectName = null;
        String accountIdentifier = null;
        DomainResponseSingle response = api.pagesDomainsPatchDomain(domainName, projectName, accountIdentifier);

        // TODO: test validations
    }
}
