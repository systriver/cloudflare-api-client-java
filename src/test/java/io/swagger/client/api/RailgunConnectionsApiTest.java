/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ConnectionCollectionResponse;
import io.swagger.client.model.ConnectionSingleIdResponse;
import io.swagger.client.model.ConnectionSingleRequest;
import io.swagger.client.model.ConnectionSingleResponse;
import io.swagger.client.model.InlineResponse4xx133;
import io.swagger.client.model.InlineResponse4xx134;
import io.swagger.client.model.InlineResponse4xx135;
import io.swagger.client.model.SchemasConnection;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for RailgunConnectionsApi
 */
@Ignore
public class RailgunConnectionsApiTest {

    private final RailgunConnectionsApi api = new RailgunConnectionsApi();

    /**
     * Connection details
     *
     * Get a connection by ID.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void railgunConnectionsConnectionDetailsTest() throws Exception {
        String identifier = null;
        String railgunIdentifier = null;
        String accountIdentifier = null;
        ConnectionSingleResponse response = api.railgunConnectionsConnectionDetails(identifier, railgunIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Create connection
     *
     * Associates a zone to the Railgun.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void railgunConnectionsCreateConnectionTest() throws Exception {
        ConnectionSingleRequest body = null;
        String railgunIdentifier = null;
        String accountIdentifier = null;
        ConnectionSingleResponse response = api.railgunConnectionsCreateConnection(body, railgunIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete connection
     *
     * Disable and remove the connection to a zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void railgunConnectionsDeleteConnectionTest() throws Exception {
        String identifier = null;
        String railgunIdentifier = null;
        String accountIdentifier = null;
        ConnectionSingleIdResponse response = api.railgunConnectionsDeleteConnection(identifier, railgunIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Connections
     *
     * List connections associated with the Railgun.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void railgunConnectionsListConnectionsTest() throws Exception {
        String railgunIdentifier = null;
        String accountIdentifier = null;
        ConnectionCollectionResponse response = api.railgunConnectionsListConnections(railgunIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update connection
     *
     * Enable or disable a connection.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void railgunConnectionsUpdateConnectionTest() throws Exception {
        SchemasConnection body = null;
        String identifier = null;
        String railgunIdentifier = null;
        String accountIdentifier = null;
        ConnectionSingleResponse response = api.railgunConnectionsUpdateConnection(body, identifier, railgunIdentifier, accountIdentifier);

        // TODO: test validations
    }
}
