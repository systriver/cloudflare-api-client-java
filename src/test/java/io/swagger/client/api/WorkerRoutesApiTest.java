/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CloudflareClientAPIApiResponseSingleId;
import io.swagger.client.model.InlineResponse4xx44;
import io.swagger.client.model.InlineResponse4xx535;
import io.swagger.client.model.InlineResponse4xx536;
import io.swagger.client.model.RouteNoId;
import io.swagger.client.model.RouteResponseCollection;
import io.swagger.client.model.RouteResponseSingle;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for WorkerRoutesApi
 */
@Ignore
public class WorkerRoutesApiTest {

    private final WorkerRoutesApi api = new WorkerRoutesApi();

    /**
     * Create Route
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerRoutesCreateRouteTest() throws Exception {
        RouteNoId body = null;
        String zoneId = null;
        CloudflareClientAPIApiResponseSingleId response = api.workerRoutesCreateRoute(body, zoneId);

        // TODO: test validations
    }
    /**
     * Delete Route
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerRoutesDeleteRouteTest() throws Exception {
        String routeId = null;
        String zoneId = null;
        CloudflareClientAPIApiResponseSingleId response = api.workerRoutesDeleteRoute(routeId, zoneId);

        // TODO: test validations
    }
    /**
     * Get Route
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerRoutesGetRouteTest() throws Exception {
        String routeId = null;
        String zoneId = null;
        RouteResponseSingle response = api.workerRoutesGetRoute(routeId, zoneId);

        // TODO: test validations
    }
    /**
     * List Routes
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerRoutesListRoutesTest() throws Exception {
        String zoneId = null;
        RouteResponseCollection response = api.workerRoutesListRoutes(zoneId);

        // TODO: test validations
    }
    /**
     * Update Route
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerRoutesUpdateRouteTest() throws Exception {
        RouteNoId body = null;
        String routeId = null;
        String zoneId = null;
        RouteResponseSingle response = api.workerRoutesUpdateRoute(body, routeId, zoneId);

        // TODO: test validations
    }
}
