/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AppComponentsSchemasResponseCollection;
import io.swagger.client.model.AppsAppIdBody;
import io.swagger.client.model.InlineResponse200166;
import io.swagger.client.model.InlineResponse4xx358;
import io.swagger.client.model.InlineResponse4xx538;
import io.swagger.client.model.InlineResponse4xx539;
import io.swagger.client.model.InlineResponse4xx540;
import io.swagger.client.model.ResponseSingleOriginDns;
import io.swagger.client.model.SchemasResponseSingle;
import io.swagger.client.model.SpectrumAppsBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for SpectrumApplicationsApi
 */
@Ignore
public class SpectrumApplicationsApiTest {

    private final SpectrumApplicationsApi api = new SpectrumApplicationsApi();

    /**
     * Create Spectrum application using a name for the origin
     *
     * Creates a new Spectrum application from a configuration using a name for the origin.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginTest() throws Exception {
        SpectrumAppsBody body = null;
        String zone = null;
        ResponseSingleOriginDns response = api.spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOrigin(body, zone);

        // TODO: test validations
    }
    /**
     * Delete Spectrum application
     *
     * Deletes a previously existing application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void spectrumApplicationsDeleteSpectrumApplicationTest() throws Exception {
        String appId = null;
        String zone = null;
        InlineResponse200166 response = api.spectrumApplicationsDeleteSpectrumApplication(appId, zone);

        // TODO: test validations
    }
    /**
     * Get Spectrum application configuration
     *
     * Gets the application configuration of a specific application inside a zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void spectrumApplicationsGetSpectrumApplicationConfigurationTest() throws Exception {
        String appId = null;
        String zone = null;
        SchemasResponseSingle response = api.spectrumApplicationsGetSpectrumApplicationConfiguration(appId, zone);

        // TODO: test validations
    }
    /**
     * List Spectrum applications
     *
     * Retrieves a list of currently existing Spectrum applications inside a zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void spectrumApplicationsListSpectrumApplicationsTest() throws Exception {
        String zone = null;
        AppComponentsSchemasResponseCollection response = api.spectrumApplicationsListSpectrumApplications(zone);

        // TODO: test validations
    }
    /**
     * Update Spectrum application configuration using a name for the origin
     *
     * Updates a previously existing application&#x27;s configuration that uses a name for the origin.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void spectrumApplicationsUpdateSpectrumApplicationConfigurationUsingANameForTheOriginTest() throws Exception {
        AppsAppIdBody body = null;
        String appId = null;
        String zone = null;
        ResponseSingleOriginDns response = api.spectrumApplicationsUpdateSpectrumApplicationConfigurationUsingANameForTheOrigin(body, appId, zone);

        // TODO: test validations
    }
}
