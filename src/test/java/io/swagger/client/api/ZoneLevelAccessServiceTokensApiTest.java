/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AccessServiceTokensBody1;
import io.swagger.client.model.CreateResponse;
import io.swagger.client.model.InlineResponse4xx247;
import io.swagger.client.model.InlineResponse4xx248;
import io.swagger.client.model.InlineResponse4xx249;
import io.swagger.client.model.ServiceTokensComponentsSchemasResponseCollection;
import io.swagger.client.model.ServiceTokensComponentsSchemasSingleResponse;
import io.swagger.client.model.ServiceTokensUuidBody1;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ZoneLevelAccessServiceTokensApi
 */
@Ignore
public class ZoneLevelAccessServiceTokensApiTest {

    private final ZoneLevelAccessServiceTokensApi api = new ZoneLevelAccessServiceTokensApi();

    /**
     * Create a service token
     *
     * Generates a new service token. **Note:** This is the only time you can get the Client Secret. If you lose the Client Secret, you will have to create a new service token.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensCreateAServiceTokenTest() throws Exception {
        AccessServiceTokensBody1 body = null;
        String identifier = null;
        CreateResponse response = api.zoneLevelAccessServiceTokensCreateAServiceToken(body, identifier);

        // TODO: test validations
    }
    /**
     * Delete a service token
     *
     * Deletes a service token.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensDeleteAServiceTokenTest() throws Exception {
        String uuid = null;
        String identifier = null;
        ServiceTokensComponentsSchemasSingleResponse response = api.zoneLevelAccessServiceTokensDeleteAServiceToken(uuid, identifier);

        // TODO: test validations
    }
    /**
     * List service tokens
     *
     * Lists all service tokens.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensListServiceTokensTest() throws Exception {
        String identifier = null;
        ServiceTokensComponentsSchemasResponseCollection response = api.zoneLevelAccessServiceTokensListServiceTokens(identifier);

        // TODO: test validations
    }
    /**
     * Update a service token
     *
     * Updates a configured service token.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensUpdateAServiceTokenTest() throws Exception {
        ServiceTokensUuidBody1 body = null;
        String uuid = null;
        String identifier = null;
        ServiceTokensComponentsSchemasSingleResponse response = api.zoneLevelAccessServiceTokensUpdateAServiceToken(body, uuid, identifier);

        // TODO: test validations
    }
}
