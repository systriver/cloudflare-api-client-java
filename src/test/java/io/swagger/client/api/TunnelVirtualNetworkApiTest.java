/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse4xx187;
import io.swagger.client.model.InlineResponse4xx188;
import io.swagger.client.model.TeamnetVirtualNetworksBody;
import io.swagger.client.model.VirtualNetworksVnetIdBody;
import io.swagger.client.model.VnetResponseCollection;
import io.swagger.client.model.VnetResponseSingle;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TunnelVirtualNetworkApi
 */
@Ignore
public class TunnelVirtualNetworkApiTest {

    private final TunnelVirtualNetworkApi api = new TunnelVirtualNetworkApi();

    /**
     * Create a virtual network
     *
     * Adds a new virtual network to an account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tunnelVirtualNetworkCreateAVirtualNetworkTest() throws Exception {
        TeamnetVirtualNetworksBody body = null;
        String accountIdentifier = null;
        VnetResponseSingle response = api.tunnelVirtualNetworkCreateAVirtualNetwork(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a virtual network
     *
     * Deletes an existing virtual network.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tunnelVirtualNetworkDeleteAVirtualNetworkTest() throws Exception {
        String vnetId = null;
        String accountIdentifier = null;
        VnetResponseSingle response = api.tunnelVirtualNetworkDeleteAVirtualNetwork(vnetId, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List virtual networks
     *
     * Lists and filters virtual networks in an account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tunnelVirtualNetworkListVirtualNetworksTest() throws Exception {
        String accountIdentifier = null;
        VnetResponseCollection response = api.tunnelVirtualNetworkListVirtualNetworks(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update a virtual network
     *
     * Updates an existing virtual network.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void tunnelVirtualNetworkUpdateAVirtualNetworkTest() throws Exception {
        VirtualNetworksVnetIdBody body = null;
        String vnetId = null;
        String accountIdentifier = null;
        VnetResponseSingle response = api.tunnelVirtualNetworkUpdateAVirtualNetwork(body, vnetId, accountIdentifier);

        // TODO: test validations
    }
}
