/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ApiResponseCommon;
import io.swagger.client.model.InlineResponse4xx212;
import io.swagger.client.model.InlineResponse4xx213;
import io.swagger.client.model.TailResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for WorkerTailLogsApi
 */
@Ignore
public class WorkerTailLogsApiTest {

    private final WorkerTailLogsApi api = new WorkerTailLogsApi();

    /**
     * Delete Tail
     *
     * Deletes a tail from a Worker.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerTailLogsDeleteTailTest() throws Exception {
        String id = null;
        String scriptName = null;
        String accountIdentifier = null;
        ApiResponseCommon response = api.workerTailLogsDeleteTail(id, scriptName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Tails
     *
     * Get list of tails currently deployed on a worker.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerTailLogsListTailsTest() throws Exception {
        String scriptName = null;
        String accountIdentifier = null;
        TailResponse response = api.workerTailLogsListTails(scriptName, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Start Tail
     *
     * Starts a tail that receives logs and exception from a Worker.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void workerTailLogsStartTailTest() throws Exception {
        String scriptName = null;
        String accountIdentifier = null;
        TailResponse response = api.workerTailLogsStartTail(scriptName, accountIdentifier);

        // TODO: test validations
    }
}
