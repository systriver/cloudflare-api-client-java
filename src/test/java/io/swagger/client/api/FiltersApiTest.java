/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.FilterDeleteResponseCollection;
import io.swagger.client.model.FilterDeleteResponseSingle;
import io.swagger.client.model.InlineResponse4xx384;
import io.swagger.client.model.InlineResponse4xx385;
import io.swagger.client.model.InlineResponse4xx386;
import io.swagger.client.model.InlineResponse4xx387;
import io.swagger.client.model.SchemasFilterResponseCollection;
import io.swagger.client.model.SchemasFilterResponseSingle;
import io.swagger.client.model.ZoneIdentifierFiltersBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for FiltersApi
 */
@Ignore
public class FiltersApiTest {

    private final FiltersApi api = new FiltersApi();

    /**
     * Create filters
     *
     * Creates one or more filters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void filtersCreateFiltersTest() throws Exception {
        Object body = null;
        String zoneIdentifier = null;
        SchemasFilterResponseCollection response = api.filtersCreateFilters(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a filter
     *
     * Deletes an existing filter.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void filtersDeleteAFilterTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        FilterDeleteResponseSingle response = api.filtersDeleteAFilter(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete filters
     *
     * Deletes one or more existing filters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void filtersDeleteFiltersTest() throws Exception {
        ZoneIdentifierFiltersBody body = null;
        String zoneIdentifier = null;
        FilterDeleteResponseCollection response = api.filtersDeleteFilters(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Get a filter
     *
     * Fetches the details of a filter.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void filtersGetAFilterTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        SchemasFilterResponseSingle response = api.filtersGetAFilter(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * List filters
     *
     * Fetches filters in a zone. You can filter the results using several optional parameters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void filtersListFiltersTest() throws Exception {
        String zoneIdentifier = null;
        SchemasFilterResponseCollection response = api.filtersListFilters(zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Update a filter
     *
     * Updates an existing filter.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void filtersUpdateAFilterTest() throws Exception {
        Object body = null;
        String id = null;
        String zoneIdentifier = null;
        SchemasFilterResponseSingle response = api.filtersUpdateAFilter(body, id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Update filters
     *
     * Updates one or more existing filters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void filtersUpdateFiltersTest() throws Exception {
        Object body = null;
        String zoneIdentifier = null;
        SchemasFilterResponseCollection response = api.filtersUpdateFilters(body, zoneIdentifier);

        // TODO: test validations
    }
}
