/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.HealthDetails;
import io.swagger.client.model.IdentifierPreviewBody1;
import io.swagger.client.model.InlineResponse4xx66;
import io.swagger.client.model.InlineResponse4xx68;
import io.swagger.client.model.InlineResponse4xx69;
import io.swagger.client.model.InlineResponse4xx70;
import io.swagger.client.model.InlineResponse4xx71;
import io.swagger.client.model.InlineResponse4xx72;
import io.swagger.client.model.LoadBalancersPoolsBody;
import io.swagger.client.model.LoadBalancersPoolsBody1;
import io.swagger.client.model.PoolComponentsSchemasIdResponse;
import io.swagger.client.model.PoolComponentsSchemasIdentifier;
import io.swagger.client.model.PoolComponentsSchemasResponseCollection;
import io.swagger.client.model.PoolComponentsSchemasSingleResponse;
import io.swagger.client.model.PoolsIdentifierBody;
import io.swagger.client.model.PoolsIdentifierBody1;
import io.swagger.client.model.PreviewResponse;
import io.swagger.client.model.SchemasReferencesResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AccountLoadBalancerPoolsApi
 */
@Ignore
public class AccountLoadBalancerPoolsApiTest {

    private final AccountLoadBalancerPoolsApi api = new AccountLoadBalancerPoolsApi();

    /**
     * Create Pool
     *
     * Create a new pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsCreatePoolTest() throws Exception {
        LoadBalancersPoolsBody body = null;
        String accountIdentifier = null;
        PoolComponentsSchemasSingleResponse response = api.accountLoadBalancerPoolsCreatePool(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete Pool
     *
     * Delete a configured pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsDeletePoolTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        String accountIdentifier = null;
        PoolComponentsSchemasIdResponse response = api.accountLoadBalancerPoolsDeletePool(identifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Pool References
     *
     * Get the list of resources that reference the provided pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsListPoolReferencesTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        String accountIdentifier = null;
        SchemasReferencesResponse response = api.accountLoadBalancerPoolsListPoolReferences(identifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Pools
     *
     * List configured pools.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsListPoolsTest() throws Exception {
        String accountIdentifier = null;
        PoolComponentsSchemasResponseCollection response = api.accountLoadBalancerPoolsListPools(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Patch Pool
     *
     * Apply changes to an existing pool, overwriting the supplied properties.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsPatchPoolTest() throws Exception {
        PoolsIdentifierBody1 body = null;
        PoolComponentsSchemasIdentifier identifier = null;
        String accountIdentifier = null;
        PoolComponentsSchemasSingleResponse response = api.accountLoadBalancerPoolsPatchPool(body, identifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Patch Pools
     *
     * Apply changes to a number of existing pools, overwriting the supplied properties. Pools are ordered by ascending &#x60;name&#x60;. Returns the list of affected pools. Supports the standard pagination query parameters, either &#x60;limit&#x60;/&#x60;offset&#x60; or &#x60;per_page&#x60;/&#x60;page&#x60;.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsPatchPoolsTest() throws Exception {
        LoadBalancersPoolsBody1 body = null;
        String accountIdentifier = null;
        PoolComponentsSchemasResponseCollection response = api.accountLoadBalancerPoolsPatchPools(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Pool Details
     *
     * Fetch a single configured pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsPoolDetailsTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        String accountIdentifier = null;
        PoolComponentsSchemasSingleResponse response = api.accountLoadBalancerPoolsPoolDetails(identifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Pool Health Details
     *
     * Fetch the latest pool health status for a single pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsPoolHealthDetailsTest() throws Exception {
        PoolComponentsSchemasIdentifier identifier = null;
        String accountIdentifier = null;
        HealthDetails response = api.accountLoadBalancerPoolsPoolHealthDetails(identifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Preview Pool
     *
     * Preview pool health using provided monitor details. The returned preview_id can be used in the preview endpoint to retrieve the results.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsPreviewPoolTest() throws Exception {
        IdentifierPreviewBody1 body = null;
        PoolComponentsSchemasIdentifier identifier = null;
        String accountIdentifier = null;
        PreviewResponse response = api.accountLoadBalancerPoolsPreviewPool(body, identifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update Pool
     *
     * Modify a configured pool.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountLoadBalancerPoolsUpdatePoolTest() throws Exception {
        PoolsIdentifierBody body = null;
        PoolComponentsSchemasIdentifier identifier = null;
        String accountIdentifier = null;
        PoolComponentsSchemasSingleResponse response = api.accountLoadBalancerPoolsUpdatePool(body, identifier, accountIdentifier);

        // TODO: test validations
    }
}
