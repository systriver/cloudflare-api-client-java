/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CloudflareClientAPIIdResponse;
import io.swagger.client.model.DnsSecondarySecondaryZone;
import io.swagger.client.model.DnsSecondarySecondaryZoneComponentsSchemasIdentifier;
import io.swagger.client.model.ForceResponse;
import io.swagger.client.model.InlineResponse4xx345;
import io.swagger.client.model.InlineResponse4xx346;
import io.swagger.client.model.InlineResponse4xx347;
import io.swagger.client.model.SingleResponseIncoming;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for SecondaryDnsSecondaryZoneApi
 */
@Ignore
public class SecondaryDnsSecondaryZoneApiTest {

    private final SecondaryDnsSecondaryZoneApi api = new SecondaryDnsSecondaryZoneApi();

    /**
     * Create Secondary Zone Configuration
     *
     * Create secondary zone configuration for incoming zone transfers.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneCreateSecondaryZoneConfigurationTest() throws Exception {
        DnsSecondarySecondaryZone body = null;
        DnsSecondarySecondaryZoneComponentsSchemasIdentifier identifier = null;
        SingleResponseIncoming response = api.secondaryDnsSecondaryZoneCreateSecondaryZoneConfiguration(body, identifier);

        // TODO: test validations
    }
    /**
     * Delete Secondary Zone Configuration
     *
     * Delete secondary zone configuration for incoming zone transfers.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneDeleteSecondaryZoneConfigurationTest() throws Exception {
        DnsSecondarySecondaryZoneComponentsSchemasIdentifier identifier = null;
        CloudflareClientAPIIdResponse response = api.secondaryDnsSecondaryZoneDeleteSecondaryZoneConfiguration(identifier);

        // TODO: test validations
    }
    /**
     * Force AXFR
     *
     * Sends AXFR zone transfer request to primary nameserver(s).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneForceAxfrTest() throws Exception {
        DnsSecondarySecondaryZoneComponentsSchemasIdentifier identifier = null;
        ForceResponse response = api.secondaryDnsSecondaryZoneForceAxfr(identifier);

        // TODO: test validations
    }
    /**
     * Secondary Zone Configuration Details
     *
     * Get secondary zone configuration for incoming zone transfers.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneSecondaryZoneConfigurationDetailsTest() throws Exception {
        DnsSecondarySecondaryZoneComponentsSchemasIdentifier identifier = null;
        SingleResponseIncoming response = api.secondaryDnsSecondaryZoneSecondaryZoneConfigurationDetails(identifier);

        // TODO: test validations
    }
    /**
     * Update Secondary Zone Configuration
     *
     * Update secondary zone configuration for incoming zone transfers.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneUpdateSecondaryZoneConfigurationTest() throws Exception {
        DnsSecondarySecondaryZone body = null;
        DnsSecondarySecondaryZoneComponentsSchemasIdentifier identifier = null;
        SingleResponseIncoming response = api.secondaryDnsSecondaryZoneUpdateSecondaryZoneConfiguration(body, identifier);

        // TODO: test validations
    }
}
