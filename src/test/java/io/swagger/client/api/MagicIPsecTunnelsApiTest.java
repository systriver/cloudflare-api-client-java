/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse4xx100;
import io.swagger.client.model.InlineResponse4xx95;
import io.swagger.client.model.InlineResponse4xx96;
import io.swagger.client.model.InlineResponse4xx97;
import io.swagger.client.model.InlineResponse4xx98;
import io.swagger.client.model.InlineResponse4xx99;
import io.swagger.client.model.PskGenerationResponse;
import io.swagger.client.model.SchemasModifiedTunnelsCollectionResponse;
import io.swagger.client.model.SchemasTunnelDeletedResponse;
import io.swagger.client.model.SchemasTunnelModifiedResponse;
import io.swagger.client.model.SchemasTunnelSingleResponse;
import io.swagger.client.model.SchemasTunnelUpdateRequest;
import io.swagger.client.model.SchemasTunnelsCollectionResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for MagicIPsecTunnelsApi
 */
@Ignore
public class MagicIPsecTunnelsApiTest {

    private final MagicIPsecTunnelsApi api = new MagicIPsecTunnelsApi();

    /**
     * Create IPsec tunnels
     *
     * Creates new IPsec tunnels associated with an account. Use &#x60;?validate_only&#x3D;true&#x60; as an optional query parameter to only run validation without persisting changes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicIPsecTunnelsCreateIPsecTunnelsTest() throws Exception {
        Object body = null;
        String accountIdentifier = null;
        SchemasTunnelsCollectionResponse response = api.magicIPsecTunnelsCreateIPsecTunnels(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete IPsec Tunnel
     *
     * Disables and removes a specific static IPsec Tunnel associated with an account. Use &#x60;?validate_only&#x3D;true&#x60; as an optional query parameter to only run validation without persisting changes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicIPsecTunnelsDeleteIPsecTunnelTest() throws Exception {
        String tunnelIdentifier = null;
        String accountIdentifier = null;
        SchemasTunnelDeletedResponse response = api.magicIPsecTunnelsDeleteIPsecTunnel(tunnelIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Generate Pre Shared Key (PSK) for IPsec tunnels
     *
     * Generates a Pre Shared Key for a specific IPsec tunnel used in the IKE session. Use &#x60;?validate_only&#x3D;true&#x60; as an optional query parameter to only run validation without persisting changes. After a PSK is generated, the PSK is immediately persisted to Cloudflare&#x27;s edge and cannot be retrieved later. Note the PSK in a safe place.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicIPsecTunnelsGeneratePreSharedKeyPskForIPsecTunnelsTest() throws Exception {
        String tunnelIdentifier = null;
        String accountIdentifier = null;
        PskGenerationResponse response = api.magicIPsecTunnelsGeneratePreSharedKeyPskForIPsecTunnels(tunnelIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List IPsec tunnel details
     *
     * Lists details for a specific IPsec tunnel.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicIPsecTunnelsListIPsecTunnelDetailsTest() throws Exception {
        String tunnelIdentifier = null;
        String accountIdentifier = null;
        SchemasTunnelSingleResponse response = api.magicIPsecTunnelsListIPsecTunnelDetails(tunnelIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List IPsec tunnels
     *
     * Lists IPsec tunnels associated with an account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicIPsecTunnelsListIPsecTunnelsTest() throws Exception {
        String accountIdentifier = null;
        SchemasTunnelsCollectionResponse response = api.magicIPsecTunnelsListIPsecTunnels(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update IPsec Tunnel
     *
     * Updates a specific IPsec tunnel associated with an account. Use &#x60;?validate_only&#x3D;true&#x60; as an optional query parameter to only run validation without persisting changes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicIPsecTunnelsUpdateIPsecTunnelTest() throws Exception {
        SchemasTunnelUpdateRequest body = null;
        String tunnelIdentifier = null;
        String accountIdentifier = null;
        SchemasTunnelModifiedResponse response = api.magicIPsecTunnelsUpdateIPsecTunnel(body, tunnelIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update multiple IPsec tunnels
     *
     * Update multiple IPsec tunnels associated with an account. Use &#x60;?validate_only&#x3D;true&#x60; as an optional query parameter to only run validation without persisting changes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicIPsecTunnelsUpdateMultipleIPsecTunnelsTest() throws Exception {
        Object body = null;
        String accountIdentifier = null;
        SchemasModifiedTunnelsCollectionResponse response = api.magicIPsecTunnelsUpdateMultipleIPsecTunnels(body, accountIdentifier);

        // TODO: test validations
    }
}
