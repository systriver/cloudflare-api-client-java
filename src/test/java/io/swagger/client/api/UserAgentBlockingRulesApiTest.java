/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.FirewalluablockResponseCollection;
import io.swagger.client.model.FirewalluablockResponseSingle;
import io.swagger.client.model.InlineResponse200103;
import io.swagger.client.model.InlineResponse4xx395;
import io.swagger.client.model.InlineResponse4xx396;
import io.swagger.client.model.InlineResponse4xx397;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for UserAgentBlockingRulesApi
 */
@Ignore
public class UserAgentBlockingRulesApiTest {

    private final UserAgentBlockingRulesApi api = new UserAgentBlockingRulesApi();

    /**
     * Create a User Agent Blocking rule
     *
     * Creates a new User Agent Blocking rule in a zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userAgentBlockingRulesCreateAUserAgentBlockingRuleTest() throws Exception {
        Object body = null;
        String zoneIdentifier = null;
        FirewalluablockResponseSingle response = api.userAgentBlockingRulesCreateAUserAgentBlockingRule(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a User Agent Blocking rule
     *
     * Deletes an existing User Agent Blocking rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userAgentBlockingRulesDeleteAUserAgentBlockingRuleTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        InlineResponse200103 response = api.userAgentBlockingRulesDeleteAUserAgentBlockingRule(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Get a User Agent Blocking rule
     *
     * Fetches the details of a User Agent Blocking rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userAgentBlockingRulesGetAUserAgentBlockingRuleTest() throws Exception {
        String id = null;
        String zoneIdentifier = null;
        FirewalluablockResponseSingle response = api.userAgentBlockingRulesGetAUserAgentBlockingRule(id, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * List User Agent Blocking rules
     *
     * Fetches User Agent Blocking rules in a zone. You can filter the results using several optional parameters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userAgentBlockingRulesListUserAgentBlockingRulesTest() throws Exception {
        String zoneIdentifier = null;
        FirewalluablockResponseCollection response = api.userAgentBlockingRulesListUserAgentBlockingRules(zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Update a User Agent Blocking rule
     *
     * Updates an existing User Agent Blocking rule.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userAgentBlockingRulesUpdateAUserAgentBlockingRuleTest() throws Exception {
        Object body = null;
        String id = null;
        String zoneIdentifier = null;
        FirewalluablockResponseSingle response = api.userAgentBlockingRulesUpdateAUserAgentBlockingRule(body, id, zoneIdentifier);

        // TODO: test validations
    }
}
