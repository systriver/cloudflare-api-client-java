/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.DestinationExistsBody;
import io.swagger.client.model.DestinationExistsResponse;
import io.swagger.client.model.GetOwnershipResponse;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse4xx77;
import io.swagger.client.model.InlineResponse4xx78;
import io.swagger.client.model.InlineResponse4xx79;
import io.swagger.client.model.InlineResponse4xx80;
import io.swagger.client.model.InlineResponse4xx81;
import io.swagger.client.model.InlineResponse4xx82;
import io.swagger.client.model.InlineResponse4xx83;
import io.swagger.client.model.InlineResponse4xx84;
import io.swagger.client.model.JobsJobIdentifierBody;
import io.swagger.client.model.LogpushFieldResponseCollection;
import io.swagger.client.model.LogpushJobResponseCollection;
import io.swagger.client.model.LogpushJobResponseSingle;
import io.swagger.client.model.LogpushJobsBody;
import io.swagger.client.model.LogpushOwnershipBody;
import io.swagger.client.model.OwnershipValidateBody;
import io.swagger.client.model.ValidateOriginBody;
import io.swagger.client.model.ValidateOwnershipResponse;
import io.swagger.client.model.ValidateResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for LogpushJobsForAnAccountApi
 */
@Ignore
public class LogpushJobsForAnAccountApiTest {

    private final LogpushJobsForAnAccountApi api = new LogpushJobsForAnAccountApi();

    /**
     * Delete Logpush job
     *
     * Deletes a Logpush job.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAccountsAccountIdentifierLogpushJobsJobIdentifierTest() throws Exception {
        Integer jobIdentifier = null;
        String accountIdentifier = null;
        InlineResponse2004 response = api.deleteAccountsAccountIdentifierLogpushJobsJobIdentifier(jobIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Check destination exists
     *
     * Checks if there is an existing job with a destination.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAccountsAccountIdentifierLogpushValidateDestinationExistsTest() throws Exception {
        DestinationExistsBody body = null;
        String accountIdentifier = null;
        DestinationExistsResponse response = api.deleteAccountsAccountIdentifierLogpushValidateDestinationExists(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List fields
     *
     * Lists all fields available for a dataset. The response result is an object with key-value pairs, where keys are field names, and values are descriptions.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccountsAccountIdentifierLogpushDatasetsDatasetFieldsTest() throws Exception {
        String dataset = null;
        String accountIdentifier = null;
        LogpushFieldResponseCollection response = api.getAccountsAccountIdentifierLogpushDatasetsDatasetFields(dataset, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Logpush jobs for a dataset
     *
     * Lists Logpush jobs for an account for a dataset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccountsAccountIdentifierLogpushDatasetsDatasetJobsTest() throws Exception {
        String dataset = null;
        String accountIdentifier = null;
        LogpushJobResponseCollection response = api.getAccountsAccountIdentifierLogpushDatasetsDatasetJobs(dataset, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Logpush jobs
     *
     * Lists Logpush jobs for an account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccountsAccountIdentifierLogpushJobsTest() throws Exception {
        String accountIdentifier = null;
        LogpushJobResponseCollection response = api.getAccountsAccountIdentifierLogpushJobs(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get Logpush job details
     *
     * Gets the details of a Logpush job.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccountsAccountIdentifierLogpushJobsJobIdentifierTest() throws Exception {
        Integer jobIdentifier = null;
        String accountIdentifier = null;
        LogpushJobResponseSingle response = api.getAccountsAccountIdentifierLogpushJobsJobIdentifier(jobIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Create Logpush job
     *
     * Creates a new Logpush job for an account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postAccountsAccountIdentifierLogpushJobsTest() throws Exception {
        LogpushJobsBody body = null;
        String accountIdentifier = null;
        LogpushJobResponseSingle response = api.postAccountsAccountIdentifierLogpushJobs(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get ownership challenge
     *
     * Gets a new ownership challenge sent to your destination.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postAccountsAccountIdentifierLogpushOwnershipTest() throws Exception {
        LogpushOwnershipBody body = null;
        String accountIdentifier = null;
        GetOwnershipResponse response = api.postAccountsAccountIdentifierLogpushOwnership(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Validate ownership challenge
     *
     * Validates ownership challenge of the destination.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postAccountsAccountIdentifierLogpushOwnershipValidateTest() throws Exception {
        OwnershipValidateBody body = null;
        String accountIdentifier = null;
        ValidateOwnershipResponse response = api.postAccountsAccountIdentifierLogpushOwnershipValidate(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Validate origin
     *
     * Validates logpull origin with logpull_options.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postAccountsAccountIdentifierLogpushValidateOriginTest() throws Exception {
        ValidateOriginBody body = null;
        String accountIdentifier = null;
        ValidateResponse response = api.postAccountsAccountIdentifierLogpushValidateOrigin(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update Logpush job
     *
     * Updates a Logpush job.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void putAccountsAccountIdentifierLogpushJobsJobIdentifierTest() throws Exception {
        JobsJobIdentifierBody body = null;
        Integer jobIdentifier = null;
        String accountIdentifier = null;
        LogpushJobResponseSingle response = api.putAccountsAccountIdentifierLogpushJobsJobIdentifier(body, jobIdentifier, accountIdentifier);

        // TODO: test validations
    }
}
