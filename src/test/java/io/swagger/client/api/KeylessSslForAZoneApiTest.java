/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse4xx409;
import io.swagger.client.model.InlineResponse4xx410;
import io.swagger.client.model.InlineResponse4xx411;
import io.swagger.client.model.KeylessCertificatesIdentifierBody;
import io.swagger.client.model.KeylessResponseCollection;
import io.swagger.client.model.KeylessResponseSingle;
import io.swagger.client.model.KeylessResponseSingleId;
import io.swagger.client.model.ZoneIdentifierKeylessCertificatesBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for KeylessSslForAZoneApi
 */
@Ignore
public class KeylessSslForAZoneApiTest {

    private final KeylessSslForAZoneApi api = new KeylessSslForAZoneApi();

    /**
     * Create Keyless SSL Configuration
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void keylessSslForAZoneCreateKeylessSslConfigurationTest() throws Exception {
        ZoneIdentifierKeylessCertificatesBody body = null;
        String zoneIdentifier = null;
        KeylessResponseSingle response = api.keylessSslForAZoneCreateKeylessSslConfiguration(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete Keyless SSL Configuration
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void keylessSslForAZoneDeleteKeylessSslConfigurationTest() throws Exception {
        String identifier = null;
        String zoneIdentifier = null;
        KeylessResponseSingleId response = api.keylessSslForAZoneDeleteKeylessSslConfiguration(identifier, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Edit Keyless SSL Configuration
     *
     * This will update attributes of a Keyless SSL. Consists of one or more of the following:  host,name,port,certificate,enabled.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void keylessSslForAZoneEditKeylessSslConfigurationTest() throws Exception {
        KeylessCertificatesIdentifierBody body = null;
        String identifier = null;
        String zoneIdentifier = null;
        KeylessResponseSingle response = api.keylessSslForAZoneEditKeylessSslConfiguration(body, identifier, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Get Keyless SSL Configuration
     *
     * Get details for one Keyless SSL configuration.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void keylessSslForAZoneGetKeylessSslConfigurationTest() throws Exception {
        String identifier = null;
        String zoneIdentifier = null;
        KeylessResponseSingle response = api.keylessSslForAZoneGetKeylessSslConfiguration(identifier, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * List Keyless SSL Configurations
     *
     * List all Keyless SSL configurations for a given zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void keylessSslForAZoneListKeylessSslConfigurationsTest() throws Exception {
        String zoneIdentifier = null;
        KeylessResponseCollection response = api.keylessSslForAZoneListKeylessSslConfigurations(zoneIdentifier);

        // TODO: test validations
    }
}
