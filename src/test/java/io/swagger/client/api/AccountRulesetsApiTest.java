/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CreateRuleset;
import io.swagger.client.model.CreateUpdateRule;
import io.swagger.client.model.InlineResponse4xx217;
import io.swagger.client.model.InlineResponse4xx218;
import io.swagger.client.model.RulesetResponse;
import io.swagger.client.model.RulesetsResponse;
import io.swagger.client.model.UpdateRuleset;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AccountRulesetsApi
 */
@Ignore
public class AccountRulesetsApiTest {

    private final AccountRulesetsApi api = new AccountRulesetsApi();

    /**
     * Create an account ruleset
     *
     * Creates a ruleset at the account level.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsCreateAnAccountRulesetTest() throws Exception {
        CreateRuleset body = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsCreateAnAccountRuleset(body, accountId);

        // TODO: test validations
    }
    /**
     * Create an account ruleset rule
     *
     * Adds a new rule to an account ruleset. The rule will be added to the end of the existing list of rules in the ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsCreateAnAccountRulesetRuleTest() throws Exception {
        CreateUpdateRule body = null;
        String rulesetId = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsCreateAnAccountRulesetRule(body, rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * Delete an account ruleset
     *
     * Deletes all versions of an existing account ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsDeleteAnAccountRulesetTest() throws Exception {
        String rulesetId = null;
        String accountId = null;
        api.accountRulesetsDeleteAnAccountRuleset(rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * Delete an account ruleset rule
     *
     * Deletes an existing rule from an account ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsDeleteAnAccountRulesetRuleTest() throws Exception {
        String ruleId = null;
        String rulesetId = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsDeleteAnAccountRulesetRule(ruleId, rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * Delete an account ruleset version
     *
     * Deletes an existing version of an account ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsDeleteAnAccountRulesetVersionTest() throws Exception {
        String rulesetVersion = null;
        String rulesetId = null;
        String accountId = null;
        api.accountRulesetsDeleteAnAccountRulesetVersion(rulesetVersion, rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * Get an account entry point ruleset
     *
     * Fetches the latest version of the account entry point ruleset for a given phase.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsGetAnAccountEntryPointRulesetTest() throws Exception {
        String rulesetPhase = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsGetAnAccountEntryPointRuleset(rulesetPhase, accountId);

        // TODO: test validations
    }
    /**
     * Get an account entry point ruleset version
     *
     * Fetches a specific version of an account entry point ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsGetAnAccountEntryPointRulesetVersionTest() throws Exception {
        String rulesetVersion = null;
        String rulesetPhase = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsGetAnAccountEntryPointRulesetVersion(rulesetVersion, rulesetPhase, accountId);

        // TODO: test validations
    }
    /**
     * Get an account ruleset
     *
     * Fetches the latest version of an account ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsGetAnAccountRulesetTest() throws Exception {
        String rulesetId = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsGetAnAccountRuleset(rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * Get an account ruleset version
     *
     * Fetches a specific version of an account ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsGetAnAccountRulesetVersionTest() throws Exception {
        String rulesetVersion = null;
        String rulesetId = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsGetAnAccountRulesetVersion(rulesetVersion, rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * List account rulesets
     *
     * Fetches all rulesets at the account level.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsListAccountRulesetsTest() throws Exception {
        String accountId = null;
        RulesetsResponse response = api.accountRulesetsListAccountRulesets(accountId);

        // TODO: test validations
    }
    /**
     * List an account entry point ruleset&#x27;s versions
     *
     * Fetches the versions of an account entry point ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsListAnAccountEntryPointRulesetSVersionsTest() throws Exception {
        String rulesetPhase = null;
        String accountId = null;
        RulesetsResponse response = api.accountRulesetsListAnAccountEntryPointRulesetSVersions(rulesetPhase, accountId);

        // TODO: test validations
    }
    /**
     * List an account ruleset&#x27;s versions
     *
     * Fetches the versions of an account ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsListAnAccountRulesetSVersionsTest() throws Exception {
        String rulesetId = null;
        String accountId = null;
        RulesetsResponse response = api.accountRulesetsListAnAccountRulesetSVersions(rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * List an account ruleset version&#x27;s rules by tag
     *
     * Fetches the rules of a managed account ruleset version for a given tag.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsListAnAccountRulesetVersionSRulesByTagTest() throws Exception {
        String ruleTag = null;
        String rulesetVersion = null;
        String rulesetId = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsListAnAccountRulesetVersionSRulesByTag(ruleTag, rulesetVersion, rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * Update an account entry point ruleset
     *
     * Updates an account entry point ruleset, creating a new version.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsUpdateAnAccountEntryPointRulesetTest() throws Exception {
        UpdateRuleset body = null;
        String rulesetPhase = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsUpdateAnAccountEntryPointRuleset(body, rulesetPhase, accountId);

        // TODO: test validations
    }
    /**
     * Update an account ruleset
     *
     * Updates an account ruleset, creating a new version.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsUpdateAnAccountRulesetTest() throws Exception {
        UpdateRuleset body = null;
        String rulesetId = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsUpdateAnAccountRuleset(body, rulesetId, accountId);

        // TODO: test validations
    }
    /**
     * Update an account ruleset rule
     *
     * Updates an existing rule in an account ruleset.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accountRulesetsUpdateAnAccountRulesetRuleTest() throws Exception {
        CreateUpdateRule body = null;
        String ruleId = null;
        String rulesetId = null;
        String accountId = null;
        RulesetResponse response = api.accountRulesetsUpdateAnAccountRulesetRule(body, ruleId, rulesetId, accountId);

        // TODO: test validations
    }
}
