/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ApiResponseCollection;
import io.swagger.client.model.DestinationsWebhooksBody;
import io.swagger.client.model.InlineResponse4xx1;
import io.swagger.client.model.InlineResponse4xx255;
import io.swagger.client.model.InlineResponse4xx256;
import io.swagger.client.model.InlineResponse4xx257;
import io.swagger.client.model.WebhooksComponentsSchemasIdResponse;
import io.swagger.client.model.WebhooksComponentsSchemasResponseCollection;
import io.swagger.client.model.WebhooksComponentsSchemasSingleResponse;
import io.swagger.client.model.WebhooksUuidBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for NotificationWebhooksApi
 */
@Ignore
public class NotificationWebhooksApiTest {

    private final NotificationWebhooksApi api = new NotificationWebhooksApi();

    /**
     * Create a webhook
     *
     * Creates a new webhook destination.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificationWebhooksCreateAWebhookTest() throws Exception {
        DestinationsWebhooksBody body = null;
        String identifier = null;
        WebhooksComponentsSchemasIdResponse response = api.notificationWebhooksCreateAWebhook(body, identifier);

        // TODO: test validations
    }
    /**
     * Delete a webhook
     *
     * Delete a configured webhook destination.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificationWebhooksDeleteAWebhookTest() throws Exception {
        String uuid = null;
        String identifier = null;
        ApiResponseCollection response = api.notificationWebhooksDeleteAWebhook(uuid, identifier);

        // TODO: test validations
    }
    /**
     * Get a webhook
     *
     * Get details for a single webhooks destination.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificationWebhooksGetAWebhookTest() throws Exception {
        String uuid = null;
        String identifier = null;
        WebhooksComponentsSchemasSingleResponse response = api.notificationWebhooksGetAWebhook(uuid, identifier);

        // TODO: test validations
    }
    /**
     * List webhooks
     *
     * Gets a list of all configured webhook destinations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificationWebhooksListWebhooksTest() throws Exception {
        String identifier = null;
        WebhooksComponentsSchemasResponseCollection response = api.notificationWebhooksListWebhooks(identifier);

        // TODO: test validations
    }
    /**
     * Update a webhook
     *
     * Update a webhook destination.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificationWebhooksUpdateAWebhookTest() throws Exception {
        WebhooksUuidBody body = null;
        String uuid = null;
        String identifier = null;
        WebhooksComponentsSchemasIdResponse response = api.notificationWebhooksUpdateAWebhook(body, uuid, identifier);

        // TODO: test validations
    }
}
