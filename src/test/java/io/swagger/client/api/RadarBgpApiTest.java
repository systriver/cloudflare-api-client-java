/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse20037;
import io.swagger.client.model.InlineResponse20043;
import io.swagger.client.model.InlineResponse20044;
import io.swagger.client.model.InlineResponse20045;
import org.threeten.bp.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for RadarBgpApi
 */
@Ignore
public class RadarBgpApiTest {

    private final RadarBgpApi api = new RadarBgpApi();

    /**
     * Get BGP route leak events
     *
     * Get the BGP route leak events.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetBGPRouteLeakEventsTest() throws Exception {
        Integer page = null;
        Integer perPage = null;
        Integer leakAsn = null;
        Integer involvedAsn = null;
        String dateRange = null;
        OffsetDateTime dateStart = null;
        OffsetDateTime dateEnd = null;
        String sortBy = null;
        String sortOrder = null;
        String format = null;
        InlineResponse20043 response = api.radarGetBGPRouteLeakEvents(page, perPage, leakAsn, involvedAsn, dateRange, dateStart, dateEnd, sortBy, sortOrder, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems
     *
     * Get the top autonomous systems (AS) by BGP updates (announcements only). Values are a percentage out of the total updates.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetBGPTopASesTest() throws Exception {
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> prefix = null;
        List<String> updateType = null;
        String format = null;
        InlineResponse20044 response = api.radarGetBGPTopASes(limit, name, dateRange, dateStart, dateEnd, asn, prefix, updateType, format);

        // TODO: test validations
    }
    /**
     * Get top prefixes
     *
     * Get the top network prefixes by BGP updates. Values are a percentage out of the total BGP updates.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetBGPTopPrefixesTest() throws Exception {
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> updateType = null;
        String format = null;
        InlineResponse20045 response = api.radarGetBGPTopPrefixes(limit, name, dateRange, dateStart, dateEnd, asn, updateType, format);

        // TODO: test validations
    }
    /**
     * Get BGP time series
     *
     * Gets BGP updates change over time. Raw values are returned. When requesting updates of an autonomous system (AS), only BGP updates of type announcement are returned.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetBgpTimeseriesTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        String prefix = null;
        List<String> updateType = null;
        List<String> asn = null;
        String format = null;
        InlineResponse20037 response = api.radarGetBgpTimeseries(aggInterval, name, dateRange, dateStart, dateEnd, prefix, updateType, asn, format);

        // TODO: test validations
    }
}
