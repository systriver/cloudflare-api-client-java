/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse20050;
import io.swagger.client.model.InlineResponse20051;
import io.swagger.client.model.InlineResponse20052;
import io.swagger.client.model.InlineResponse20053;
import io.swagger.client.model.InlineResponse20054;
import io.swagger.client.model.InlineResponse20055;
import io.swagger.client.model.InlineResponse20056;
import io.swagger.client.model.InlineResponse20057;
import io.swagger.client.model.InlineResponse20058;
import io.swagger.client.model.InlineResponse20059;
import io.swagger.client.model.InlineResponse404;
import org.threeten.bp.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for RadarEmailApi
 */
@Ignore
public class RadarEmailApiTest {

    private final RadarEmailApi api = new RadarEmailApi();

    /**
     * Get a summary of ARC validations
     *
     * Percentage distribution of emails classified per Arc validation.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityArcSummaryTest() throws Exception {
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20050 response = api.radarGetEmailSecurityArcSummary(name, dateRange, dateStart, dateEnd, asn, location, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a time series of ARC validations
     *
     * Percentage distribution of emails classified per Arc validation over time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityArcTimeseriesGroupTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20054 response = api.radarGetEmailSecurityArcTimeseriesGroup(aggInterval, name, dateRange, dateStart, dateEnd, asn, location, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a summary of DKIM validations
     *
     * Percentage distribution of emails classified per DKIM validation.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityDkimSummaryTest() throws Exception {
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20050 response = api.radarGetEmailSecurityDkimSummary(name, dateRange, dateStart, dateEnd, asn, location, arc, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a time series of DKIM validations validations
     *
     * Percentage distribution of emails classified per DKIM validation over time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityDkimTimeseriesGroupTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20054 response = api.radarGetEmailSecurityDkimTimeseriesGroup(aggInterval, name, dateRange, dateStart, dateEnd, asn, location, arc, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a summary of DMARC validations
     *
     * Percentage distribution of emails classified per DMARC validation.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityDmarcSummaryTest() throws Exception {
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20050 response = api.radarGetEmailSecurityDmarcSummary(name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, spf, format);

        // TODO: test validations
    }
    /**
     * Get a time series of DMARC validations
     *
     * Percentage distribution of emails classified per DMARC validation over time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityDmarcTimeseriesGroupTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20054 response = api.radarGetEmailSecurityDmarcTimeseriesGroup(aggInterval, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, spf, format);

        // TODO: test validations
    }
    /**
     * Get a summary of MALICIOUS validations
     *
     * Percentage distribution of emails classified as MALICIOUS.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityMaliciousSummaryTest() throws Exception {
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20051 response = api.radarGetEmailSecurityMaliciousSummary(name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a time series of MALICIOUS validations
     *
     * Percentage distribution of emails classified as MALICIOUS over time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityMaliciousTimeseriesGroupTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20055 response = api.radarGetEmailSecurityMaliciousTimeseriesGroup(aggInterval, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a summary of SPAM validations
     *
     * Percentage distribution of emails classified as SPAM.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecuritySpamSummaryTest() throws Exception {
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20052 response = api.radarGetEmailSecuritySpamSummary(name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a time series of SPAM validations
     *
     * Percentage distribution of emails classified as SPAM over time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecuritySpamTimeseriesGroupTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20056 response = api.radarGetEmailSecuritySpamTimeseriesGroup(aggInterval, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a summary of SPF validations
     *
     * Percentage distribution of emails classified per SPF validation.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecuritySpfSummaryTest() throws Exception {
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        String format = null;
        InlineResponse20050 response = api.radarGetEmailSecuritySpfSummary(name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, format);

        // TODO: test validations
    }
    /**
     * Get a time series of SPF validations
     *
     * Percentage distribution of emails classified per SPF validation over time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecuritySpfTimeseriesGroupTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        String format = null;
        InlineResponse20054 response = api.radarGetEmailSecuritySpfTimeseriesGroup(aggInterval, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, format);

        // TODO: test validations
    }
    /**
     * Get a summary of Threat Categories
     *
     * Percentage distribution of emails classified in Threat Categories.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityThreatCategorySummaryTest() throws Exception {
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20053 response = api.radarGetEmailSecurityThreatCategorySummary(name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get a time series of Threat Categories
     *
     * Percentage distribution of emails classified in Threat Categories over time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityThreatCategoryTimeseriesGroupTest() throws Exception {
        String aggInterval = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20057 response = api.radarGetEmailSecurityThreatCategoryTimeseriesGroup(aggInterval, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by HTTP requests
     *
     * Get the top autonomous systems (AS) by HTTP traffic. Values are a percentage out of the total traffic.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopASesTest() throws Exception {
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20058 response = api.radarGetEmailSecurityTopASes(limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by ARC validations
     *
     * Get the top autonomous systems (AS), by emails classified, of ARC validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopASesByArcTest() throws Exception {
        String arc = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20058 response = api.radarGetEmailSecurityTopASesByArc(arc, limit, name, dateRange, dateStart, dateEnd, asn, location, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by DKIM validations
     *
     * Get the top autonomous systems (AS), by emails classified, of DKIM validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopASesByDkimTest() throws Exception {
        String dkim = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20058 response = api.radarGetEmailSecurityTopASesByDkim(dkim, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by DMARC validations
     *
     * Get the top autonomous systems (AS), by emails classified, of DMARC validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopASesByDmarcTest() throws Exception {
        String dmarc = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20058 response = api.radarGetEmailSecurityTopASesByDmarc(dmarc, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, spf, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by Malicious validations
     *
     * Get the top autonomous systems (AS), by emails classified, of Malicious validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopASesByMaliciousTest() throws Exception {
        String malicious = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20058 response = api.radarGetEmailSecurityTopASesByMalicious(malicious, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by Spam validations
     *
     * Get the top autonomous systems (AS), by emails classified, of Spam validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopASesBySpamTest() throws Exception {
        String spam = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20058 response = api.radarGetEmailSecurityTopASesBySpam(spam, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by SPF validations
     *
     * Get the top autonomous systems (AS), by emails classified, of SPF validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopASesBySpfTest() throws Exception {
        String spf = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        String format = null;
        InlineResponse20058 response = api.radarGetEmailSecurityTopASesBySpf(spf, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, format);

        // TODO: test validations
    }
    /**
     * Get top autonomous systems by HTTP requests
     *
     * Get the top locations by HTTP traffic. Values are a percentage out of the total traffic.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopLocationsTest() throws Exception {
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20059 response = api.radarGetEmailSecurityTopLocations(limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top locations by ARC validations
     *
     * Get the locations, by emails classified, of ARC validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopLocationsByArcTest() throws Exception {
        String arc = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20059 response = api.radarGetEmailSecurityTopLocationsByArc(arc, limit, name, dateRange, dateStart, dateEnd, asn, location, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top locations by DKIM validations
     *
     * Get the locations, by emails classified, of DKIM validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopLocationsByDkimTest() throws Exception {
        String dkim = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20059 response = api.radarGetEmailSecurityTopLocationsByDkim(dkim, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top locations by DMARC validations
     *
     * Get the locations, by emails classified, of DMARC validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopLocationsByDmarcTest() throws Exception {
        String dmarc = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20059 response = api.radarGetEmailSecurityTopLocationsByDmarc(dmarc, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, spf, format);

        // TODO: test validations
    }
    /**
     * Get top locations by Malicious validations
     *
     * Get the locations, by emails classified, of Malicious validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopLocationsByMaliciousTest() throws Exception {
        String malicious = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20059 response = api.radarGetEmailSecurityTopLocationsByMalicious(malicious, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top locations by Spam validations
     *
     * Get the locations, by emails classified, of Spam validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopLocationsBySpamTest() throws Exception {
        String spam = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        List<String> spf = null;
        String format = null;
        InlineResponse20059 response = api.radarGetEmailSecurityTopLocationsBySpam(spam, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, spf, format);

        // TODO: test validations
    }
    /**
     * Get top locations by SPF validations
     *
     * Get the locations, by emails classified, of SPF validations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void radarGetEmailSecurityTopLocationsBySpfTest() throws Exception {
        String spf = null;
        Integer limit = null;
        List<String> name = null;
        List<String> dateRange = null;
        List<OffsetDateTime> dateStart = null;
        List<OffsetDateTime> dateEnd = null;
        List<String> asn = null;
        List<String> location = null;
        List<String> arc = null;
        List<String> dkim = null;
        List<String> dmarc = null;
        String format = null;
        InlineResponse20059 response = api.radarGetEmailSecurityTopLocationsBySpf(spf, limit, name, dateRange, dateStart, dateEnd, asn, location, arc, dkim, dmarc, format);

        // TODO: test validations
    }
}
