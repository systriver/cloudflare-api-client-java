/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CloudflareClientAPILiveInputResponseSingle;
import io.swagger.client.model.CreateInputRequest;
import io.swagger.client.model.CreateOutputRequest;
import io.swagger.client.model.InlineResponse4xx168;
import io.swagger.client.model.InlineResponse4xx169;
import io.swagger.client.model.InlineResponse4xx170;
import io.swagger.client.model.InlineResponse4xx171;
import io.swagger.client.model.LiveInputResponseCollection;
import io.swagger.client.model.OutputResponseCollection;
import io.swagger.client.model.OutputResponseSingle;
import io.swagger.client.model.UpdateInputRequest;
import io.swagger.client.model.UpdateOutputRequest;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for StreamLiveInputsApi
 */
@Ignore
public class StreamLiveInputsApiTest {

    private final StreamLiveInputsApi api = new StreamLiveInputsApi();

    /**
     * Create a live input
     *
     * Creates a live input, and returns credentials that you or your users can use to stream live video to Cloudflare Stream.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsCreateALiveInputTest() throws Exception {
        CreateInputRequest body = null;
        String accountIdentifier = null;
        CloudflareClientAPILiveInputResponseSingle response = api.streamLiveInputsCreateALiveInput(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Create a new output, connected to a live input
     *
     * Creates a new output that can be used to simulcast or restream live video to other RTMP or SRT destinations. Outputs are always linked to a specific live input — one live input can have many outputs.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsCreateANewOutputConnectedToALiveInputTest() throws Exception {
        CreateOutputRequest body = null;
        String liveInputIdentifier = null;
        String accountIdentifier = null;
        OutputResponseSingle response = api.streamLiveInputsCreateANewOutputConnectedToALiveInput(body, liveInputIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a live input
     *
     * Prevents a live input from being streamed to and makes the live input inaccessible to any future API calls.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsDeleteALiveInputTest() throws Exception {
        String liveInputIdentifier = null;
        String accountIdentifier = null;
        api.streamLiveInputsDeleteALiveInput(liveInputIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete an output
     *
     * Deletes an output and removes it from the associated live input.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsDeleteAnOutputTest() throws Exception {
        String outputIdentifier = null;
        String liveInputIdentifier = null;
        String accountIdentifier = null;
        api.streamLiveInputsDeleteAnOutput(outputIdentifier, liveInputIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List all outputs associated with a specified live input
     *
     * Retrieves all outputs associated with a specified live input.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsListAllOutputsAssociatedWithASpecifiedLiveInputTest() throws Exception {
        String liveInputIdentifier = null;
        String accountIdentifier = null;
        OutputResponseCollection response = api.streamLiveInputsListAllOutputsAssociatedWithASpecifiedLiveInput(liveInputIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List live inputs
     *
     * Lists the live inputs created for an account. To get the credentials needed to stream to a specific live input, request a single live input.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsListLiveInputsTest() throws Exception {
        String accountIdentifier = null;
        LiveInputResponseCollection response = api.streamLiveInputsListLiveInputs(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Retrieve a live input
     *
     * Retrieves details of an existing live input.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsRetrieveALiveInputTest() throws Exception {
        String liveInputIdentifier = null;
        String accountIdentifier = null;
        CloudflareClientAPILiveInputResponseSingle response = api.streamLiveInputsRetrieveALiveInput(liveInputIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update a live input
     *
     * Updates a specified live input.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsUpdateALiveInputTest() throws Exception {
        UpdateInputRequest body = null;
        String liveInputIdentifier = null;
        String accountIdentifier = null;
        CloudflareClientAPILiveInputResponseSingle response = api.streamLiveInputsUpdateALiveInput(body, liveInputIdentifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update an output
     *
     * Updates the state of an output.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void streamLiveInputsUpdateAnOutputTest() throws Exception {
        UpdateOutputRequest body = null;
        String outputIdentifier = null;
        String liveInputIdentifier = null;
        String accountIdentifier = null;
        OutputResponseSingle response = api.streamLiveInputsUpdateAnOutput(body, outputIdentifier, liveInputIdentifier, accountIdentifier);

        // TODO: test validations
    }
}
