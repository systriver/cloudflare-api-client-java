/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CertificateResponseCollection;
import io.swagger.client.model.CertificateResponseIdOnly;
import io.swagger.client.model.CertificateResponseSingle;
import io.swagger.client.model.CustomCertificatesIdentifierBody;
import io.swagger.client.model.CustomCertificatesPrioritizeBody;
import io.swagger.client.model.InlineResponse4xx365;
import io.swagger.client.model.InlineResponse4xx366;
import io.swagger.client.model.InlineResponse4xx367;
import io.swagger.client.model.ZoneIdentifierCustomCertificatesBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for CustomSslForAZoneApi
 */
@Ignore
public class CustomSslForAZoneApiTest {

    private final CustomSslForAZoneApi api = new CustomSslForAZoneApi();

    /**
     * Create SSL Configuration
     *
     * Upload a new SSL certificate for a zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void customSslForAZoneCreateSslConfigurationTest() throws Exception {
        ZoneIdentifierCustomCertificatesBody body = null;
        String zoneIdentifier = null;
        CertificateResponseSingle response = api.customSslForAZoneCreateSslConfiguration(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete SSL Configuration
     *
     * Remove a SSL certificate from a zone.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void customSslForAZoneDeleteSslConfigurationTest() throws Exception {
        String identifier = null;
        String zoneIdentifier = null;
        CertificateResponseIdOnly response = api.customSslForAZoneDeleteSslConfiguration(identifier, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Edit SSL Configuration
     *
     * Upload a new private key and/or PEM/CRT for the SSL certificate. Note: PATCHing a configuration for sni_custom certificates will result in a new resource id being returned, and the previous one being deleted.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void customSslForAZoneEditSslConfigurationTest() throws Exception {
        CustomCertificatesIdentifierBody body = null;
        String identifier = null;
        String zoneIdentifier = null;
        CertificateResponseSingle response = api.customSslForAZoneEditSslConfiguration(body, identifier, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * List SSL Configurations
     *
     * List, search, and filter all of your custom SSL certificates. The higher priority will break ties across overlapping &#x27;legacy_custom&#x27; certificates, but &#x27;legacy_custom&#x27; certificates will always supercede &#x27;sni_custom&#x27; certificates.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void customSslForAZoneListSslConfigurationsTest() throws Exception {
        String zoneIdentifier = null;
        CertificateResponseCollection response = api.customSslForAZoneListSslConfigurations(zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Re-prioritize SSL Certificates
     *
     * If a zone has multiple SSL certificates, you can set the order in which they should be used during a request. The higher priority will break ties across overlapping &#x27;legacy_custom&#x27; certificates.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void customSslForAZoneRePrioritizeSslCertificatesTest() throws Exception {
        CustomCertificatesPrioritizeBody body = null;
        String zoneIdentifier = null;
        CertificateResponseCollection response = api.customSslForAZoneRePrioritizeSslCertificates(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * SSL Configuration Details
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void customSslForAZoneSslConfigurationDetailsTest() throws Exception {
        String identifier = null;
        String zoneIdentifier = null;
        CertificateResponseSingle response = api.customSslForAZoneSslConfigurationDetails(identifier, zoneIdentifier);

        // TODO: test validations
    }
}
