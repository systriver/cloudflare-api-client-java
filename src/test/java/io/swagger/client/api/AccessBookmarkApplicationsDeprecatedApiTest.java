/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.BookmarksComponentsSchemasIdResponse;
import io.swagger.client.model.BookmarksComponentsSchemasIdentifier;
import io.swagger.client.model.BookmarksComponentsSchemasResponseCollection;
import io.swagger.client.model.BookmarksComponentsSchemasSingleResponse;
import io.swagger.client.model.InlineResponse4xx231;
import io.swagger.client.model.InlineResponse4xx232;
import io.swagger.client.model.InlineResponse4xx233;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AccessBookmarkApplicationsDeprecatedApi
 */
@Ignore
public class AccessBookmarkApplicationsDeprecatedApiTest {

    private final AccessBookmarkApplicationsDeprecatedApi api = new AccessBookmarkApplicationsDeprecatedApi();

    /**
     * Create a Bookmark application
     *
     * Create a new Bookmark application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accessBookmarkApplicationsDeprecatedCreateABookmarkApplicationTest() throws Exception {
        String uuid = null;
        BookmarksComponentsSchemasIdentifier identifier = null;
        BookmarksComponentsSchemasSingleResponse response = api.accessBookmarkApplicationsDeprecatedCreateABookmarkApplication(uuid, identifier);

        // TODO: test validations
    }
    /**
     * Delete a Bookmark application
     *
     * Deletes a Bookmark application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accessBookmarkApplicationsDeprecatedDeleteABookmarkApplicationTest() throws Exception {
        String uuid = null;
        BookmarksComponentsSchemasIdentifier identifier = null;
        BookmarksComponentsSchemasIdResponse response = api.accessBookmarkApplicationsDeprecatedDeleteABookmarkApplication(uuid, identifier);

        // TODO: test validations
    }
    /**
     * Get a Bookmark application
     *
     * Fetches a single Bookmark application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accessBookmarkApplicationsDeprecatedGetABookmarkApplicationTest() throws Exception {
        String uuid = null;
        BookmarksComponentsSchemasIdentifier identifier = null;
        BookmarksComponentsSchemasSingleResponse response = api.accessBookmarkApplicationsDeprecatedGetABookmarkApplication(uuid, identifier);

        // TODO: test validations
    }
    /**
     * List Bookmark applications
     *
     * Lists Bookmark applications.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accessBookmarkApplicationsDeprecatedListBookmarkApplicationsTest() throws Exception {
        BookmarksComponentsSchemasIdentifier identifier = null;
        BookmarksComponentsSchemasResponseCollection response = api.accessBookmarkApplicationsDeprecatedListBookmarkApplications(identifier);

        // TODO: test validations
    }
    /**
     * Update a Bookmark application
     *
     * Updates a configured Bookmark application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void accessBookmarkApplicationsDeprecatedUpdateABookmarkApplicationTest() throws Exception {
        String uuid = null;
        BookmarksComponentsSchemasIdentifier identifier = null;
        BookmarksComponentsSchemasSingleResponse response = api.accessBookmarkApplicationsDeprecatedUpdateABookmarkApplication(uuid, identifier);

        // TODO: test validations
    }
}
