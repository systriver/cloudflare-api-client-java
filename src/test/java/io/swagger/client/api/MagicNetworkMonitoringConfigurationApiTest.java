/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ConfigComponentsSchemasAccountIdentifier;
import io.swagger.client.model.InlineResponse4xx107;
import io.swagger.client.model.MnmConfigSingleResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for MagicNetworkMonitoringConfigurationApi
 */
@Ignore
public class MagicNetworkMonitoringConfigurationApiTest {

    private final MagicNetworkMonitoringConfigurationApi api = new MagicNetworkMonitoringConfigurationApi();

    /**
     * Create account configuration
     *
     * Create a new network monitoring configuration.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationCreateAccountConfigurationTest() throws Exception {
        ConfigComponentsSchemasAccountIdentifier accountIdentifier = null;
        MnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationCreateAccountConfiguration(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete account configuration
     *
     * Delete an existing network monitoring configuration.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationDeleteAccountConfigurationTest() throws Exception {
        ConfigComponentsSchemasAccountIdentifier accountIdentifier = null;
        MnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationDeleteAccountConfiguration(accountIdentifier);

        // TODO: test validations
    }
    /**
     * List account configuration
     *
     * Lists default sampling and router IPs for account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationListAccountConfigurationTest() throws Exception {
        ConfigComponentsSchemasAccountIdentifier accountIdentifier = null;
        MnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationListAccountConfiguration(accountIdentifier);

        // TODO: test validations
    }
    /**
     * List rules and account configuration
     *
     * Lists default sampling, router IPs, and rules for account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationListRulesAndAccountConfigurationTest() throws Exception {
        ConfigComponentsSchemasAccountIdentifier accountIdentifier = null;
        MnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationListRulesAndAccountConfiguration(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update account configuration fields
     *
     * Update fields in an existing network monitoring configuration.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationUpdateAccountConfigurationFieldsTest() throws Exception {
        ConfigComponentsSchemasAccountIdentifier accountIdentifier = null;
        MnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationUpdateAccountConfigurationFields(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update an entire account configuration
     *
     * Update an existing network monitoring configuration, requires the entire configuration to be updated at once.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationUpdateAnEntireAccountConfigurationTest() throws Exception {
        ConfigComponentsSchemasAccountIdentifier accountIdentifier = null;
        MnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationUpdateAnEntireAccountConfiguration(accountIdentifier);

        // TODO: test validations
    }
}
