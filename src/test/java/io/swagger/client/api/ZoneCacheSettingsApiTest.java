/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CacheCacheReserveBody;
import io.swagger.client.model.CacheVariantsBody;
import io.swagger.client.model.InlineResponse20097;
import io.swagger.client.model.InlineResponse20098;
import io.swagger.client.model.InlineResponse20099;
import io.swagger.client.model.InlineResponse4xx362;
import io.swagger.client.model.InlineResponse4xx363;
import io.swagger.client.model.InlineResponse4xx364;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ZoneCacheSettingsApi
 */
@Ignore
public class ZoneCacheSettingsApiTest {

    private final ZoneCacheSettingsApi api = new ZoneCacheSettingsApi();

    /**
     * Change Cache Reserve setting
     *
     * Increase cache lifetimes by automatically storing all cacheable files into Cloudflare&#x27;s persistent object storage buckets. Requires Cache Reserve subscription. Note: using Tiered Cache with Cache Reserve is highly recommended to reduce Reserve operations costs. See the [developer docs](https://developers.cloudflare.com/cache/about/cache-reserve) for more information.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneCacheSettingsChangeCacheReserveSettingTest() throws Exception {
        CacheCacheReserveBody body = null;
        String zoneIdentifier = null;
        InlineResponse20097 response = api.zoneCacheSettingsChangeCacheReserveSetting(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Change variants setting
     *
     * Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the &#x27;Vary: Accept&#x27; response header. If the origin server sends &#x27;Vary: Accept&#x27; but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneCacheSettingsChangeVariantsSettingTest() throws Exception {
        CacheVariantsBody body = null;
        String zoneIdentifier = null;
        InlineResponse20098 response = api.zoneCacheSettingsChangeVariantsSetting(body, zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Delete variants setting
     *
     * Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the &#x27;Vary: Accept&#x27; response header. If the origin server sends &#x27;Vary: Accept&#x27; but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneCacheSettingsDeleteVariantsSettingTest() throws Exception {
        String zoneIdentifier = null;
        InlineResponse20099 response = api.zoneCacheSettingsDeleteVariantsSetting(zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Get Cache Reserve setting
     *
     * Increase cache lifetimes by automatically storing all cacheable files into Cloudflare&#x27;s persistent object storage buckets. Requires Cache Reserve subscription. Note: using Tiered Cache with Cache Reserve is highly recommended to reduce Reserve operations costs. See the [developer docs](https://developers.cloudflare.com/cache/about/cache-reserve) for more information.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneCacheSettingsGetCacheReserveSettingTest() throws Exception {
        String zoneIdentifier = null;
        InlineResponse20097 response = api.zoneCacheSettingsGetCacheReserveSetting(zoneIdentifier);

        // TODO: test validations
    }
    /**
     * Get variants setting
     *
     * Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the &#x27;Vary: Accept&#x27; response header. If the origin server sends &#x27;Vary: Accept&#x27; but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void zoneCacheSettingsGetVariantsSettingTest() throws Exception {
        String zoneIdentifier = null;
        InlineResponse20098 response = api.zoneCacheSettingsGetVariantsSetting(zoneIdentifier);

        // TODO: test validations
    }
}
