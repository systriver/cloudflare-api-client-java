/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse20017;
import io.swagger.client.model.InlineResponse20018;
import io.swagger.client.model.InlineResponse20019;
import io.swagger.client.model.InlineResponse20020;
import io.swagger.client.model.InlineResponse20021;
import io.swagger.client.model.InlineResponse20022;
import io.swagger.client.model.InlineResponse20023;
import io.swagger.client.model.InlineResponse20024;
import io.swagger.client.model.InlineResponse4xx201;
import io.swagger.client.model.InlineResponse4xx202;
import io.swagger.client.model.InlineResponse4xx203;
import io.swagger.client.model.InlineResponse4xx204;
import io.swagger.client.model.InlineResponse4xx205;
import io.swagger.client.model.InlineResponse4xx206;
import io.swagger.client.model.InlineResponse4xx207;
import io.swagger.client.model.InlineResponse4xx208;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for QueueApi
 */
@Ignore
public class QueueApiTest {

    private final QueueApi api = new QueueApi();

    /**
     * Create Queue
     *
     * Creates a new queue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueCreateQueueTest() throws Exception {
        Object body = null;
        String accountIdentifier = null;
        InlineResponse20018 response = api.queueCreateQueue(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Create Queue Consumer
     *
     * Creates a new consumer for a queue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueCreateQueueConsumerTest() throws Exception {
        Object body = null;
        String name = null;
        String accountIdentifier = null;
        InlineResponse20023 response = api.queueCreateQueueConsumer(body, name, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete Queue
     *
     * Deletes a queue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueDeleteQueueTest() throws Exception {
        String name = null;
        String accountIdentifier = null;
        InlineResponse20021 response = api.queueDeleteQueue(name, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete Queue Consumer
     *
     * Deletes the consumer for a queue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueDeleteQueueConsumerTest() throws Exception {
        String consumerName = null;
        String name = null;
        String accountIdentifier = null;
        InlineResponse20021 response = api.queueDeleteQueueConsumer(consumerName, name, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Queue Consumers
     *
     * Returns the consumers for a queue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueListQueueConsumersTest() throws Exception {
        String name = null;
        String accountIdentifier = null;
        InlineResponse20022 response = api.queueListQueueConsumers(name, accountIdentifier);

        // TODO: test validations
    }
    /**
     * List Queues
     *
     * Returns the queues owned by an account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueListQueuesTest() throws Exception {
        String accountIdentifier = null;
        InlineResponse20017 response = api.queueListQueues(accountIdentifier);

        // TODO: test validations
    }
    /**
     * Queue Details
     *
     * Get information about a specific queue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueQueueDetailsTest() throws Exception {
        String name = null;
        String accountIdentifier = null;
        InlineResponse20019 response = api.queueQueueDetails(name, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update Queue
     *
     * Updates a queue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueUpdateQueueTest() throws Exception {
        Object body = null;
        String name = null;
        String accountIdentifier = null;
        InlineResponse20020 response = api.queueUpdateQueue(body, name, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Update Queue Consumer
     *
     * Updates the consumer for a queue, or creates one if it does not exist.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void queueUpdateQueueConsumerTest() throws Exception {
        Object body = null;
        String consumerName = null;
        String name = null;
        String accountIdentifier = null;
        InlineResponse20024 response = api.queueUpdateQueueConsumer(body, consumerName, name, accountIdentifier);

        // TODO: test validations
    }
}
