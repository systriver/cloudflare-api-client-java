/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.AccessOrganizationsBody2;
import io.swagger.client.model.AccessOrganizationsBody3;
import io.swagger.client.model.CloudflareClientAPISchemasEmptyResponse;
import io.swagger.client.model.InlineResponse4xx223;
import io.swagger.client.model.InlineResponse4xx224;
import io.swagger.client.model.OrganizationsComponentsSchemasIdentifier;
import io.swagger.client.model.OrganizationsComponentsSchemasSingleResponse;
import io.swagger.client.model.OrganizationsRevokeUserBody1;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZoneLevelZeroTrustOrganizationApi {
    private ApiClient apiClient;

    public ZoneLevelZeroTrustOrganizationApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ZoneLevelZeroTrustOrganizationApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganization
     * @param body  (required)
     * @param identifier  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationCall(AccessOrganizationsBody3 body, OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/zones/{identifier}/access/organizations"
            .replaceAll("\\{" + "identifier" + "\\}", apiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_email", "api_key", "api_token" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationValidateBeforeCall(AccessOrganizationsBody3 body, OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganization(Async)");
        }
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganization(Async)");
        }
        
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationCall(body, identifier, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create your Zero Trust organization
     * Sets up a Zero Trust organization for your account.
     * @param body  (required)
     * @param identifier  (required)
     * @return OrganizationsComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganizationsComponentsSchemasSingleResponse zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganization(AccessOrganizationsBody3 body, OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        ApiResponse<OrganizationsComponentsSchemasSingleResponse> resp = zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationWithHttpInfo(body, identifier);
        return resp.getData();
    }

    /**
     * Create your Zero Trust organization
     * Sets up a Zero Trust organization for your account.
     * @param body  (required)
     * @param identifier  (required)
     * @return ApiResponse&lt;OrganizationsComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganizationsComponentsSchemasSingleResponse> zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationWithHttpInfo(AccessOrganizationsBody3 body, OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationValidateBeforeCall(body, identifier, null, null);
        Type localVarReturnType = new TypeToken<OrganizationsComponentsSchemasSingleResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create your Zero Trust organization (asynchronously)
     * Sets up a Zero Trust organization for your account.
     * @param body  (required)
     * @param identifier  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationAsync(AccessOrganizationsBody3 body, OrganizationsComponentsSchemasIdentifier identifier, final ApiCallback<OrganizationsComponentsSchemasSingleResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationValidateBeforeCall(body, identifier, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganizationsComponentsSchemasSingleResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganization
     * @param identifier  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationCall(OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/zones/{identifier}/access/organizations"
            .replaceAll("\\{" + "identifier" + "\\}", apiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_email", "api_key", "api_token" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationValidateBeforeCall(OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganization(Async)");
        }
        
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationCall(identifier, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get your Zero Trust organization
     * Returns the configuration for your Zero Trust organization.
     * @param identifier  (required)
     * @return OrganizationsComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganizationsComponentsSchemasSingleResponse zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganization(OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        ApiResponse<OrganizationsComponentsSchemasSingleResponse> resp = zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationWithHttpInfo(identifier);
        return resp.getData();
    }

    /**
     * Get your Zero Trust organization
     * Returns the configuration for your Zero Trust organization.
     * @param identifier  (required)
     * @return ApiResponse&lt;OrganizationsComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganizationsComponentsSchemasSingleResponse> zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationWithHttpInfo(OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationValidateBeforeCall(identifier, null, null);
        Type localVarReturnType = new TypeToken<OrganizationsComponentsSchemasSingleResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get your Zero Trust organization (asynchronously)
     * Returns the configuration for your Zero Trust organization.
     * @param identifier  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationAsync(OrganizationsComponentsSchemasIdentifier identifier, final ApiCallback<OrganizationsComponentsSchemasSingleResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationValidateBeforeCall(identifier, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganizationsComponentsSchemasSingleResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUser
     * @param body  (required)
     * @param identifier  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserCall(OrganizationsRevokeUserBody1 body, OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/zones/{identifier}/access/organizations/revoke_user"
            .replaceAll("\\{" + "identifier" + "\\}", apiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_email", "api_key", "api_token" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserValidateBeforeCall(OrganizationsRevokeUserBody1 body, OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUser(Async)");
        }
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUser(Async)");
        }
        
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserCall(body, identifier, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Revoke all Access tokens for a user
     * Revokes a user&#x27;s access across all applications.
     * @param body  (required)
     * @param identifier  (required)
     * @return CloudflareClientAPISchemasEmptyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CloudflareClientAPISchemasEmptyResponse zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUser(OrganizationsRevokeUserBody1 body, OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        ApiResponse<CloudflareClientAPISchemasEmptyResponse> resp = zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserWithHttpInfo(body, identifier);
        return resp.getData();
    }

    /**
     * Revoke all Access tokens for a user
     * Revokes a user&#x27;s access across all applications.
     * @param body  (required)
     * @param identifier  (required)
     * @return ApiResponse&lt;CloudflareClientAPISchemasEmptyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CloudflareClientAPISchemasEmptyResponse> zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserWithHttpInfo(OrganizationsRevokeUserBody1 body, OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserValidateBeforeCall(body, identifier, null, null);
        Type localVarReturnType = new TypeToken<CloudflareClientAPISchemasEmptyResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Revoke all Access tokens for a user (asynchronously)
     * Revokes a user&#x27;s access across all applications.
     * @param body  (required)
     * @param identifier  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserAsync(OrganizationsRevokeUserBody1 body, OrganizationsComponentsSchemasIdentifier identifier, final ApiCallback<CloudflareClientAPISchemasEmptyResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserValidateBeforeCall(body, identifier, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CloudflareClientAPISchemasEmptyResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganization
     * @param body  (required)
     * @param identifier  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationCall(AccessOrganizationsBody2 body, OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/zones/{identifier}/access/organizations"
            .replaceAll("\\{" + "identifier" + "\\}", apiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_email", "api_key", "api_token" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationValidateBeforeCall(AccessOrganizationsBody2 body, OrganizationsComponentsSchemasIdentifier identifier, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganization(Async)");
        }
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganization(Async)");
        }
        
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationCall(body, identifier, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update your Zero Trust organization
     * Updates the configuration for your Zero Trust organization.
     * @param body  (required)
     * @param identifier  (required)
     * @return OrganizationsComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrganizationsComponentsSchemasSingleResponse zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganization(AccessOrganizationsBody2 body, OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        ApiResponse<OrganizationsComponentsSchemasSingleResponse> resp = zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationWithHttpInfo(body, identifier);
        return resp.getData();
    }

    /**
     * Update your Zero Trust organization
     * Updates the configuration for your Zero Trust organization.
     * @param body  (required)
     * @param identifier  (required)
     * @return ApiResponse&lt;OrganizationsComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrganizationsComponentsSchemasSingleResponse> zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationWithHttpInfo(AccessOrganizationsBody2 body, OrganizationsComponentsSchemasIdentifier identifier) throws ApiException {
        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationValidateBeforeCall(body, identifier, null, null);
        Type localVarReturnType = new TypeToken<OrganizationsComponentsSchemasSingleResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Update your Zero Trust organization (asynchronously)
     * Updates the configuration for your Zero Trust organization.
     * @param body  (required)
     * @param identifier  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationAsync(AccessOrganizationsBody2 body, OrganizationsComponentsSchemasIdentifier identifier, final ApiCallback<OrganizationsComponentsSchemasSingleResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationValidateBeforeCall(body, identifier, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrganizationsComponentsSchemasSingleResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
