/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ItemRedirect;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Item
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Item implements OneOfitem {
  @SerializedName("comment")
  private String comment = null;

  @SerializedName("created_on")
  private String createdOn = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("modified_on")
  private String modifiedOn = null;

  @SerializedName("redirect")
  private ItemRedirect redirect = null;

  public Item comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(description = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

   /**
   * The RFC 3339 timestamp of when the item was created.
   * @return createdOn
  **/
  @Schema(example = "2020-01-01T08:00:00Z", description = "The RFC 3339 timestamp of when the item was created.")
  public String getCreatedOn() {
    return createdOn;
  }

  public Item hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public Item id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Item ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

   /**
   * The RFC 3339 timestamp of when the item was last modified.
   * @return modifiedOn
  **/
  @Schema(example = "2020-01-10T14:00:00Z", description = "The RFC 3339 timestamp of when the item was last modified.")
  public String getModifiedOn() {
    return modifiedOn;
  }

  public Item redirect(ItemRedirect redirect) {
    this.redirect = redirect;
    return this;
  }

   /**
   * Get redirect
   * @return redirect
  **/
  @Schema(description = "")
  public ItemRedirect getRedirect() {
    return redirect;
  }

  public void setRedirect(ItemRedirect redirect) {
    this.redirect = redirect;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.comment, item.comment) &&
        Objects.equals(this.createdOn, item.createdOn) &&
        Objects.equals(this.hostname, item.hostname) &&
        Objects.equals(this.id, item.id) &&
        Objects.equals(this.ip, item.ip) &&
        Objects.equals(this.modifiedOn, item.modifiedOn) &&
        Objects.equals(this.redirect, item.redirect);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comment, createdOn, hostname, id, ip, modifiedOn, redirect);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    redirect: ").append(toIndentedString(redirect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
