/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HotlinkProtectionValue;
import io.swagger.client.model.SchemasBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it&#x27;s not another site requesting them. People will still be able to download and view images from your page, but other sites won&#x27;t be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).
 */
@Schema(description = "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class HotlinkProtection extends SchemasBase implements Setting {
  @SerializedName("id")
  private String hotlinkProtectionId = null;

  @SerializedName("value")
  private HotlinkProtectionValue hotlinkProtectionValue = null;

  public HotlinkProtection hotlinkProtectionId(String hotlinkProtectionId) {
    this.hotlinkProtectionId = hotlinkProtectionId;
    return this;
  }

   /**
   * ID of the zone setting.
   * @return hotlinkProtectionId
  **/
  @Schema(example = "hotlink_protection", description = "ID of the zone setting.")
  public String getHotlinkProtectionId() {
    return hotlinkProtectionId;
  }

  public void setHotlinkProtectionId(String hotlinkProtectionId) {
    this.hotlinkProtectionId = hotlinkProtectionId;
  }

  public HotlinkProtection hotlinkProtectionValue(HotlinkProtectionValue hotlinkProtectionValue) {
    this.hotlinkProtectionValue = hotlinkProtectionValue;
    return this;
  }

   /**
   * Get hotlinkProtectionValue
   * @return hotlinkProtectionValue
  **/
  @Schema(description = "")
  public HotlinkProtectionValue getHotlinkProtectionValue() {
    return hotlinkProtectionValue;
  }

  public void setHotlinkProtectionValue(HotlinkProtectionValue hotlinkProtectionValue) {
    this.hotlinkProtectionValue = hotlinkProtectionValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HotlinkProtection hotlinkProtection = (HotlinkProtection) o;
    return Objects.equals(this.hotlinkProtectionId, hotlinkProtection.hotlinkProtectionId) &&
        Objects.equals(this.hotlinkProtectionValue, hotlinkProtection.hotlinkProtectionValue) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hotlinkProtectionId, hotlinkProtectionValue, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HotlinkProtection {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    hotlinkProtectionId: ").append(toIndentedString(hotlinkProtectionId)).append("\n");
    sb.append("    hotlinkProtectionValue: ").append(toIndentedString(hotlinkProtectionValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
