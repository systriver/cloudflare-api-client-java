/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SchemasBase;
import io.swagger.client.model.WafValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will &#x27;challenge&#x27; the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare&#x27;s WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).
 */
@Schema(description = "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Waf extends SchemasBase implements Setting {
  @SerializedName("id")
  private String wafId = null;

  @SerializedName("value")
  private WafValue wafValue = null;

  public Waf wafId(String wafId) {
    this.wafId = wafId;
    return this;
  }

   /**
   * ID of the zone setting.
   * @return wafId
  **/
  @Schema(example = "waf", description = "ID of the zone setting.")
  public String getWafId() {
    return wafId;
  }

  public void setWafId(String wafId) {
    this.wafId = wafId;
  }

  public Waf wafValue(WafValue wafValue) {
    this.wafValue = wafValue;
    return this;
  }

   /**
   * Get wafValue
   * @return wafValue
  **/
  @Schema(description = "")
  public WafValue getWafValue() {
    return wafValue;
  }

  public void setWafValue(WafValue wafValue) {
    this.wafValue = wafValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Waf waf = (Waf) o;
    return Objects.equals(this.wafId, waf.wafId) &&
        Objects.equals(this.wafValue, waf.wafValue) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(wafId, wafValue, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Waf {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    wafId: ").append(toIndentedString(wafId)).append("\n");
    sb.append("    wafValue: ").append(toIndentedString(wafValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
