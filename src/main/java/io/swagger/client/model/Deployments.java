/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DeploymentsDeploymentTrigger;
import io.swagger.client.model.Stage;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Deployments
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Deployments implements OneOfprojectsCanonicalDeployment, OneOfprojectsLatestDeployment {
  @SerializedName("aliases")
  private List<Object> aliases = null;

  @SerializedName("build_config")
  private Object buildConfig = null;

  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("deployment_trigger")
  private DeploymentsDeploymentTrigger deploymentTrigger = null;

  @SerializedName("env_vars")
  private Object envVars = null;

  @SerializedName("environment")
  private String environment = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("is_skipped")
  private Boolean isSkipped = null;

  @SerializedName("latest_stage")
  private Object latestStage = null;

  @SerializedName("modified_on")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("project_id")
  private String projectId = null;

  @SerializedName("project_name")
  private String projectName = null;

  @SerializedName("short_id")
  private String shortId = null;

  @SerializedName("source")
  private Object source = null;

  @SerializedName("stages")
  private List<Stage> stages = null;

  @SerializedName("url")
  private String url = null;

   /**
   * A list of alias URLs pointing to this deployment.
   * @return aliases
  **/
  @Schema(example = "[\"https://branchname.projectname.pages.dev\"]", description = "A list of alias URLs pointing to this deployment.")
  public List<Object> getAliases() {
    return aliases;
  }

   /**
   * Get buildConfig
   * @return buildConfig
  **/
  @Schema(description = "")
  public Object getBuildConfig() {
    return buildConfig;
  }

   /**
   * When the deployment was created.
   * @return createdOn
  **/
  @Schema(example = "2021-03-09T00:55:03.923456Z", description = "When the deployment was created.")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public Deployments deploymentTrigger(DeploymentsDeploymentTrigger deploymentTrigger) {
    this.deploymentTrigger = deploymentTrigger;
    return this;
  }

   /**
   * Get deploymentTrigger
   * @return deploymentTrigger
  **/
  @Schema(description = "")
  public DeploymentsDeploymentTrigger getDeploymentTrigger() {
    return deploymentTrigger;
  }

  public void setDeploymentTrigger(DeploymentsDeploymentTrigger deploymentTrigger) {
    this.deploymentTrigger = deploymentTrigger;
  }

   /**
   * A dict of env variables to build this deploy.
   * @return envVars
  **/
  @Schema(example = "{\"BUILD_VERSION\":{\"value\":\"3.3\"},\"ENV\":{\"value\":\"STAGING\"}}", description = "A dict of env variables to build this deploy.")
  public Object getEnvVars() {
    return envVars;
  }

   /**
   * Type of deploy.
   * @return environment
  **/
  @Schema(example = "preview", description = "Type of deploy.")
  public String getEnvironment() {
    return environment;
  }

   /**
   * Id of the deployment.
   * @return id
  **/
  @Schema(example = "f64788e9-fccd-4d4a-a28a-cb84f88f6", description = "Id of the deployment.")
  public String getId() {
    return id;
  }

   /**
   * If the deployment has been skipped.
   * @return isSkipped
  **/
  @Schema(example = "true", description = "If the deployment has been skipped.")
  public Boolean isIsSkipped() {
    return isSkipped;
  }

   /**
   * Get latestStage
   * @return latestStage
  **/
  @Schema(description = "")
  public Object getLatestStage() {
    return latestStage;
  }

   /**
   * When the deployment was last modified.
   * @return modifiedOn
  **/
  @Schema(description = "When the deployment was last modified.")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

   /**
   * Id of the project.
   * @return projectId
  **/
  @Schema(example = "7b162ea7-7367-4d67-bcde-1160995d5", description = "Id of the project.")
  public String getProjectId() {
    return projectId;
  }

   /**
   * Name of the project.
   * @return projectName
  **/
  @Schema(example = "ninjakittens", description = "Name of the project.")
  public String getProjectName() {
    return projectName;
  }

   /**
   * Short Id (8 character) of the deployment.
   * @return shortId
  **/
  @Schema(example = "f64788e9", description = "Short Id (8 character) of the deployment.")
  public String getShortId() {
    return shortId;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public Object getSource() {
    return source;
  }

   /**
   * List of past stages.
   * @return stages
  **/
  @Schema(example = "[{\"ended_on\":\"2021-06-03T15:39:03.134378Z\",\"name\":\"queued\",\"started_on\":\"2021-06-03T15:38:15.608194Z\",\"status\":\"active\"},{\"ended_on\":null,\"name\":\"initialize\",\"started_on\":null,\"status\":\"idle\"},{\"ended_on\":null,\"name\":\"clone_repo\",\"started_on\":null,\"status\":\"idle\"},{\"ended_on\":null,\"name\":\"build\",\"started_on\":null,\"status\":\"idle\"},{\"ended_on\":null,\"name\":\"deploy\",\"started_on\":null,\"status\":\"idle\"}]", description = "List of past stages.")
  public List<Stage> getStages() {
    return stages;
  }

   /**
   * The live URL to view this deployment.
   * @return url
  **/
  @Schema(example = "https://f64788e9.ninjakittens.pages.dev", description = "The live URL to view this deployment.")
  public String getUrl() {
    return url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Deployments deployments = (Deployments) o;
    return Objects.equals(this.aliases, deployments.aliases) &&
        Objects.equals(this.buildConfig, deployments.buildConfig) &&
        Objects.equals(this.createdOn, deployments.createdOn) &&
        Objects.equals(this.deploymentTrigger, deployments.deploymentTrigger) &&
        Objects.equals(this.envVars, deployments.envVars) &&
        Objects.equals(this.environment, deployments.environment) &&
        Objects.equals(this.id, deployments.id) &&
        Objects.equals(this.isSkipped, deployments.isSkipped) &&
        Objects.equals(this.latestStage, deployments.latestStage) &&
        Objects.equals(this.modifiedOn, deployments.modifiedOn) &&
        Objects.equals(this.projectId, deployments.projectId) &&
        Objects.equals(this.projectName, deployments.projectName) &&
        Objects.equals(this.shortId, deployments.shortId) &&
        Objects.equals(this.source, deployments.source) &&
        Objects.equals(this.stages, deployments.stages) &&
        Objects.equals(this.url, deployments.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aliases, buildConfig, createdOn, deploymentTrigger, envVars, environment, id, isSkipped, latestStage, modifiedOn, projectId, projectName, shortId, source, stages, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Deployments {\n");
    
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    buildConfig: ").append(toIndentedString(buildConfig)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    deploymentTrigger: ").append(toIndentedString(deploymentTrigger)).append("\n");
    sb.append("    envVars: ").append(toIndentedString(envVars)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isSkipped: ").append(toIndentedString(isSkipped)).append("\n");
    sb.append("    latestStage: ").append(toIndentedString(latestStage)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    shortId: ").append(toIndentedString(shortId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
