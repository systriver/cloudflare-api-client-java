/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * FallbackDomain
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class FallbackDomain {
  @SerializedName("description")
  private String description = null;

  @SerializedName("dns_server")
  private List<Object> dnsServer = null;

  @SerializedName("suffix")
  private String suffix = null;

  public FallbackDomain description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the fallback domain, displayed in the client UI.
   * @return description
  **/
  @Schema(example = "Domain bypass for local development", description = "A description of the fallback domain, displayed in the client UI.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FallbackDomain dnsServer(List<Object> dnsServer) {
    this.dnsServer = dnsServer;
    return this;
  }

  public FallbackDomain addDnsServerItem(Object dnsServerItem) {
    if (this.dnsServer == null) {
      this.dnsServer = new ArrayList<Object>();
    }
    this.dnsServer.add(dnsServerItem);
    return this;
  }

   /**
   * A list of IP addresses to handle domain resolution.
   * @return dnsServer
  **/
  @Schema(description = "A list of IP addresses to handle domain resolution.")
  public List<Object> getDnsServer() {
    return dnsServer;
  }

  public void setDnsServer(List<Object> dnsServer) {
    this.dnsServer = dnsServer;
  }

  public FallbackDomain suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

   /**
   * The domain suffix to match when resolving locally.
   * @return suffix
  **/
  @Schema(example = "example.com", required = true, description = "The domain suffix to match when resolving locally.")
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FallbackDomain fallbackDomain = (FallbackDomain) o;
    return Objects.equals(this.description, fallbackDomain.description) &&
        Objects.equals(this.dnsServer, fallbackDomain.dnsServer) &&
        Objects.equals(this.suffix, fallbackDomain.suffix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, dnsServer, suffix);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FallbackDomain {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dnsServer: ").append(toIndentedString(dnsServer)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
