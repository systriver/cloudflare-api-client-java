/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MediaState;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Specifies a detailed status for a video. If the &#x60;state&#x60; is &#x60;inprogress&#x60; or &#x60;error&#x60;, the &#x60;step&#x60; field returns &#x60;encoding&#x60; or &#x60;manifest&#x60;. If the &#x60;state&#x60; is &#x60;inprogress&#x60;, &#x60;pctComplete&#x60; returns a number between 0 and 100 to indicate the approximate percent of completion. If the &#x60;state&#x60; is &#x60;error&#x60;, &#x60;errorReasonCode&#x60; and &#x60;errorReasonText&#x60; provide additional details.
 */
@Schema(description = "Specifies a detailed status for a video. If the `state` is `inprogress` or `error`, the `step` field returns `encoding` or `manifest`. If the `state` is `inprogress`, `pctComplete` returns a number between 0 and 100 to indicate the approximate percent of completion. If the `state` is `error`, `errorReasonCode` and `errorReasonText` provide additional details.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class MediaStatus {
  @SerializedName("errorReasonCode")
  private String errorReasonCode = null;

  @SerializedName("errorReasonText")
  private String errorReasonText = null;

  @SerializedName("pctComplete")
  private String pctComplete = null;

  @SerializedName("state")
  private MediaState state = null;

  public MediaStatus errorReasonCode(String errorReasonCode) {
    this.errorReasonCode = errorReasonCode;
    return this;
  }

   /**
   * Get errorReasonCode
   * @return errorReasonCode
  **/
  @Schema(description = "")
  public String getErrorReasonCode() {
    return errorReasonCode;
  }

  public void setErrorReasonCode(String errorReasonCode) {
    this.errorReasonCode = errorReasonCode;
  }

  public MediaStatus errorReasonText(String errorReasonText) {
    this.errorReasonText = errorReasonText;
    return this;
  }

   /**
   * Get errorReasonText
   * @return errorReasonText
  **/
  @Schema(description = "")
  public String getErrorReasonText() {
    return errorReasonText;
  }

  public void setErrorReasonText(String errorReasonText) {
    this.errorReasonText = errorReasonText;
  }

  public MediaStatus pctComplete(String pctComplete) {
    this.pctComplete = pctComplete;
    return this;
  }

   /**
   * Get pctComplete
   * @return pctComplete
  **/
  @Schema(description = "")
  public String getPctComplete() {
    return pctComplete;
  }

  public void setPctComplete(String pctComplete) {
    this.pctComplete = pctComplete;
  }

  public MediaStatus state(MediaState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public MediaState getState() {
    return state;
  }

  public void setState(MediaState state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaStatus mediaStatus = (MediaStatus) o;
    return Objects.equals(this.errorReasonCode, mediaStatus.errorReasonCode) &&
        Objects.equals(this.errorReasonText, mediaStatus.errorReasonText) &&
        Objects.equals(this.pctComplete, mediaStatus.pctComplete) &&
        Objects.equals(this.state, mediaStatus.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorReasonCode, errorReasonText, pctComplete, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaStatus {\n");
    
    sb.append("    errorReasonCode: ").append(toIndentedString(errorReasonCode)).append("\n");
    sb.append("    errorReasonText: ").append(toIndentedString(errorReasonText)).append("\n");
    sb.append("    pctComplete: ").append(toIndentedString(pctComplete)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
