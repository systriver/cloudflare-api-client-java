/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DevelopmentModeValue;
import io.swagger.client.model.SchemasBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare&#x27;s accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.
 */
@Schema(description = "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class DevelopmentMode extends SchemasBase implements Setting {
  @SerializedName("id")
  private String developmentModeId = null;

  @SerializedName("time_remaining")
  private BigDecimal timeRemaining = null;

  @SerializedName("value")
  private DevelopmentModeValue developmentModeValue = null;

  public DevelopmentMode developmentModeId(String developmentModeId) {
    this.developmentModeId = developmentModeId;
    return this;
  }

   /**
   * ID of the zone setting.
   * @return developmentModeId
  **/
  @Schema(example = "development_mode", description = "ID of the zone setting.")
  public String getDevelopmentModeId() {
    return developmentModeId;
  }

  public void setDevelopmentModeId(String developmentModeId) {
    this.developmentModeId = developmentModeId;
  }

   /**
   * Value of the zone setting. Notes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.
   * @return timeRemaining
  **/
  @Schema(example = "3600", description = "Value of the zone setting. Notes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.")
  public BigDecimal getTimeRemaining() {
    return timeRemaining;
  }

  public DevelopmentMode developmentModeValue(DevelopmentModeValue developmentModeValue) {
    this.developmentModeValue = developmentModeValue;
    return this;
  }

   /**
   * Get developmentModeValue
   * @return developmentModeValue
  **/
  @Schema(description = "")
  public DevelopmentModeValue getDevelopmentModeValue() {
    return developmentModeValue;
  }

  public void setDevelopmentModeValue(DevelopmentModeValue developmentModeValue) {
    this.developmentModeValue = developmentModeValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DevelopmentMode developmentMode = (DevelopmentMode) o;
    return Objects.equals(this.developmentModeId, developmentMode.developmentModeId) &&
        Objects.equals(this.timeRemaining, developmentMode.timeRemaining) &&
        Objects.equals(this.developmentModeValue, developmentMode.developmentModeValue) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(developmentModeId, timeRemaining, developmentModeValue, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DevelopmentMode {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    developmentModeId: ").append(toIndentedString(developmentModeId)).append("\n");
    sb.append("    timeRemaining: ").append(toIndentedString(timeRemaining)).append("\n");
    sb.append("    developmentModeValue: ").append(toIndentedString(developmentModeValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
