/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MnmRuleIpPrefixes;
import io.swagger.client.model.SchemasRuleIdentifier;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * MnmRule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class MnmRule {
  @SerializedName("automatic_advertisement")
  private Boolean automaticAdvertisement = null;

  @SerializedName("bandwidth_threshold")
  private BigDecimal bandwidthThreshold = null;

  @SerializedName("duration")
  private String duration = null;

  @SerializedName("id")
  private SchemasRuleIdentifier id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("packet_threshold")
  private BigDecimal packetThreshold = null;

  @SerializedName("prefixes")
  private MnmRuleIpPrefixes prefixes = null;

  public MnmRule automaticAdvertisement(Boolean automaticAdvertisement) {
    this.automaticAdvertisement = automaticAdvertisement;
    return this;
  }

   /**
   * Get automaticAdvertisement
   * @return automaticAdvertisement
  **/
  @Schema(required = true, description = "")
  public Boolean getAutomaticAdvertisement() {
    return automaticAdvertisement;
  }

  public void setAutomaticAdvertisement(Boolean automaticAdvertisement) {
    this.automaticAdvertisement = automaticAdvertisement;
  }

  public MnmRule bandwidthThreshold(BigDecimal bandwidthThreshold) {
    this.bandwidthThreshold = bandwidthThreshold;
    return this;
  }

   /**
   * Get bandwidthThreshold
   * @return bandwidthThreshold
  **/
  @Schema(description = "")
  public BigDecimal getBandwidthThreshold() {
    return bandwidthThreshold;
  }

  public void setBandwidthThreshold(BigDecimal bandwidthThreshold) {
    this.bandwidthThreshold = bandwidthThreshold;
  }

  public MnmRule duration(String duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(required = true, description = "")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }

  public MnmRule id(SchemasRuleIdentifier id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public SchemasRuleIdentifier getId() {
    return id;
  }

  public void setId(SchemasRuleIdentifier id) {
    this.id = id;
  }

  public MnmRule name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MnmRule packetThreshold(BigDecimal packetThreshold) {
    this.packetThreshold = packetThreshold;
    return this;
  }

   /**
   * Get packetThreshold
   * @return packetThreshold
  **/
  @Schema(description = "")
  public BigDecimal getPacketThreshold() {
    return packetThreshold;
  }

  public void setPacketThreshold(BigDecimal packetThreshold) {
    this.packetThreshold = packetThreshold;
  }

  public MnmRule prefixes(MnmRuleIpPrefixes prefixes) {
    this.prefixes = prefixes;
    return this;
  }

   /**
   * Get prefixes
   * @return prefixes
  **/
  @Schema(required = true, description = "")
  public MnmRuleIpPrefixes getPrefixes() {
    return prefixes;
  }

  public void setPrefixes(MnmRuleIpPrefixes prefixes) {
    this.prefixes = prefixes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MnmRule mnmRule = (MnmRule) o;
    return Objects.equals(this.automaticAdvertisement, mnmRule.automaticAdvertisement) &&
        Objects.equals(this.bandwidthThreshold, mnmRule.bandwidthThreshold) &&
        Objects.equals(this.duration, mnmRule.duration) &&
        Objects.equals(this.id, mnmRule.id) &&
        Objects.equals(this.name, mnmRule.name) &&
        Objects.equals(this.packetThreshold, mnmRule.packetThreshold) &&
        Objects.equals(this.prefixes, mnmRule.prefixes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automaticAdvertisement, bandwidthThreshold, duration, id, name, packetThreshold, prefixes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MnmRule {\n");
    
    sb.append("    automaticAdvertisement: ").append(toIndentedString(automaticAdvertisement)).append("\n");
    sb.append("    bandwidthThreshold: ").append(toIndentedString(bandwidthThreshold)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packetThreshold: ").append(toIndentedString(packetThreshold)).append("\n");
    sb.append("    prefixes: ").append(toIndentedString(prefixes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
