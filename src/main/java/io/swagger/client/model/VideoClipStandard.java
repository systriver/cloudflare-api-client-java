/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AllowedOrigins;
import io.swagger.client.model.WatermarkAtUpload;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * VideoClipStandard
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class VideoClipStandard {
  @SerializedName("allowedOrigins")
  private AllowedOrigins allowedOrigins = null;

  @SerializedName("clippedFromVideoUID")
  private String clippedFromVideoUID = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("endTimeSeconds")
  private Integer endTimeSeconds = null;

  @SerializedName("maxDurationSeconds")
  private Integer maxDurationSeconds = null;

  @SerializedName("requireSignedURLs")
  private Boolean requireSignedURLs = null;

  @SerializedName("startTimeSeconds")
  private Integer startTimeSeconds = null;

  @SerializedName("thumbnailTimestampPct")
  private BigDecimal thumbnailTimestampPct = null;

  @SerializedName("watermark")
  private WatermarkAtUpload watermark = null;

  public VideoClipStandard allowedOrigins(AllowedOrigins allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
    return this;
  }

   /**
   * Get allowedOrigins
   * @return allowedOrigins
  **/
  @Schema(description = "")
  public AllowedOrigins getAllowedOrigins() {
    return allowedOrigins;
  }

  public void setAllowedOrigins(AllowedOrigins allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
  }

  public VideoClipStandard clippedFromVideoUID(String clippedFromVideoUID) {
    this.clippedFromVideoUID = clippedFromVideoUID;
    return this;
  }

   /**
   * Get clippedFromVideoUID
   * @return clippedFromVideoUID
  **/
  @Schema(required = true, description = "")
  public String getClippedFromVideoUID() {
    return clippedFromVideoUID;
  }

  public void setClippedFromVideoUID(String clippedFromVideoUID) {
    this.clippedFromVideoUID = clippedFromVideoUID;
  }

  public VideoClipStandard creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @Schema(description = "")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public VideoClipStandard endTimeSeconds(Integer endTimeSeconds) {
    this.endTimeSeconds = endTimeSeconds;
    return this;
  }

   /**
   * Get endTimeSeconds
   * @return endTimeSeconds
  **/
  @Schema(required = true, description = "")
  public Integer getEndTimeSeconds() {
    return endTimeSeconds;
  }

  public void setEndTimeSeconds(Integer endTimeSeconds) {
    this.endTimeSeconds = endTimeSeconds;
  }

  public VideoClipStandard maxDurationSeconds(Integer maxDurationSeconds) {
    this.maxDurationSeconds = maxDurationSeconds;
    return this;
  }

   /**
   * Get maxDurationSeconds
   * @return maxDurationSeconds
  **/
  @Schema(description = "")
  public Integer getMaxDurationSeconds() {
    return maxDurationSeconds;
  }

  public void setMaxDurationSeconds(Integer maxDurationSeconds) {
    this.maxDurationSeconds = maxDurationSeconds;
  }

  public VideoClipStandard requireSignedURLs(Boolean requireSignedURLs) {
    this.requireSignedURLs = requireSignedURLs;
    return this;
  }

   /**
   * Get requireSignedURLs
   * @return requireSignedURLs
  **/
  @Schema(description = "")
  public Boolean getRequireSignedURLs() {
    return requireSignedURLs;
  }

  public void setRequireSignedURLs(Boolean requireSignedURLs) {
    this.requireSignedURLs = requireSignedURLs;
  }

  public VideoClipStandard startTimeSeconds(Integer startTimeSeconds) {
    this.startTimeSeconds = startTimeSeconds;
    return this;
  }

   /**
   * Get startTimeSeconds
   * @return startTimeSeconds
  **/
  @Schema(required = true, description = "")
  public Integer getStartTimeSeconds() {
    return startTimeSeconds;
  }

  public void setStartTimeSeconds(Integer startTimeSeconds) {
    this.startTimeSeconds = startTimeSeconds;
  }

  public VideoClipStandard thumbnailTimestampPct(BigDecimal thumbnailTimestampPct) {
    this.thumbnailTimestampPct = thumbnailTimestampPct;
    return this;
  }

   /**
   * Get thumbnailTimestampPct
   * @return thumbnailTimestampPct
  **/
  @Schema(description = "")
  public BigDecimal getThumbnailTimestampPct() {
    return thumbnailTimestampPct;
  }

  public void setThumbnailTimestampPct(BigDecimal thumbnailTimestampPct) {
    this.thumbnailTimestampPct = thumbnailTimestampPct;
  }

  public VideoClipStandard watermark(WatermarkAtUpload watermark) {
    this.watermark = watermark;
    return this;
  }

   /**
   * Get watermark
   * @return watermark
  **/
  @Schema(description = "")
  public WatermarkAtUpload getWatermark() {
    return watermark;
  }

  public void setWatermark(WatermarkAtUpload watermark) {
    this.watermark = watermark;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoClipStandard videoClipStandard = (VideoClipStandard) o;
    return Objects.equals(this.allowedOrigins, videoClipStandard.allowedOrigins) &&
        Objects.equals(this.clippedFromVideoUID, videoClipStandard.clippedFromVideoUID) &&
        Objects.equals(this.creator, videoClipStandard.creator) &&
        Objects.equals(this.endTimeSeconds, videoClipStandard.endTimeSeconds) &&
        Objects.equals(this.maxDurationSeconds, videoClipStandard.maxDurationSeconds) &&
        Objects.equals(this.requireSignedURLs, videoClipStandard.requireSignedURLs) &&
        Objects.equals(this.startTimeSeconds, videoClipStandard.startTimeSeconds) &&
        Objects.equals(this.thumbnailTimestampPct, videoClipStandard.thumbnailTimestampPct) &&
        Objects.equals(this.watermark, videoClipStandard.watermark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedOrigins, clippedFromVideoUID, creator, endTimeSeconds, maxDurationSeconds, requireSignedURLs, startTimeSeconds, thumbnailTimestampPct, watermark);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoClipStandard {\n");
    
    sb.append("    allowedOrigins: ").append(toIndentedString(allowedOrigins)).append("\n");
    sb.append("    clippedFromVideoUID: ").append(toIndentedString(clippedFromVideoUID)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    endTimeSeconds: ").append(toIndentedString(endTimeSeconds)).append("\n");
    sb.append("    maxDurationSeconds: ").append(toIndentedString(maxDurationSeconds)).append("\n");
    sb.append("    requireSignedURLs: ").append(toIndentedString(requireSignedURLs)).append("\n");
    sb.append("    startTimeSeconds: ").append(toIndentedString(startTimeSeconds)).append("\n");
    sb.append("    thumbnailTimestampPct: ").append(toIndentedString(thumbnailTimestampPct)).append("\n");
    sb.append("    watermark: ").append(toIndentedString(watermark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
