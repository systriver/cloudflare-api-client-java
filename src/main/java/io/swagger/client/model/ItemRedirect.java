/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The definition of the redirect.
 */
@Schema(description = "The definition of the redirect.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class ItemRedirect {
  @SerializedName("include_subdomains")
  private Boolean includeSubdomains = false;

  @SerializedName("preserve_path_suffix")
  private Boolean preservePathSuffix = true;

  @SerializedName("preserve_query_string")
  private Boolean preserveQueryString = false;

  @SerializedName("source_url")
  private String sourceUrl = null;

  /**
   * Gets or Sets statusCode
   */
  @JsonAdapter(StatusCodeEnum.Adapter.class)
  public enum StatusCodeEnum {
    NUMBER_301(301),
    NUMBER_302(302),
    NUMBER_307(307),
    NUMBER_308(308);

    private Integer value;

    StatusCodeEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusCodeEnum fromValue(Integer input) {
      for (StatusCodeEnum b : StatusCodeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusCodeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusCodeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextInt();
        return StatusCodeEnum.fromValue((Integer)(value));
      }
    }
  }  @SerializedName("status_code")
  private StatusCodeEnum statusCode = StatusCodeEnum.NUMBER_301;

  @SerializedName("subpath_matching")
  private Boolean subpathMatching = false;

  @SerializedName("target_url")
  private String targetUrl = null;

  public ItemRedirect includeSubdomains(Boolean includeSubdomains) {
    this.includeSubdomains = includeSubdomains;
    return this;
  }

   /**
   * Get includeSubdomains
   * @return includeSubdomains
  **/
  @Schema(description = "")
  public Boolean isIncludeSubdomains() {
    return includeSubdomains;
  }

  public void setIncludeSubdomains(Boolean includeSubdomains) {
    this.includeSubdomains = includeSubdomains;
  }

  public ItemRedirect preservePathSuffix(Boolean preservePathSuffix) {
    this.preservePathSuffix = preservePathSuffix;
    return this;
  }

   /**
   * Get preservePathSuffix
   * @return preservePathSuffix
  **/
  @Schema(description = "")
  public Boolean isPreservePathSuffix() {
    return preservePathSuffix;
  }

  public void setPreservePathSuffix(Boolean preservePathSuffix) {
    this.preservePathSuffix = preservePathSuffix;
  }

  public ItemRedirect preserveQueryString(Boolean preserveQueryString) {
    this.preserveQueryString = preserveQueryString;
    return this;
  }

   /**
   * Get preserveQueryString
   * @return preserveQueryString
  **/
  @Schema(description = "")
  public Boolean isPreserveQueryString() {
    return preserveQueryString;
  }

  public void setPreserveQueryString(Boolean preserveQueryString) {
    this.preserveQueryString = preserveQueryString;
  }

  public ItemRedirect sourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
    return this;
  }

   /**
   * Get sourceUrl
   * @return sourceUrl
  **/
  @Schema(example = "example.com/arch", required = true, description = "")
  public String getSourceUrl() {
    return sourceUrl;
  }

  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }

  public ItemRedirect statusCode(StatusCodeEnum statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * Get statusCode
   * @return statusCode
  **/
  @Schema(description = "")
  public StatusCodeEnum getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(StatusCodeEnum statusCode) {
    this.statusCode = statusCode;
  }

  public ItemRedirect subpathMatching(Boolean subpathMatching) {
    this.subpathMatching = subpathMatching;
    return this;
  }

   /**
   * Get subpathMatching
   * @return subpathMatching
  **/
  @Schema(description = "")
  public Boolean isSubpathMatching() {
    return subpathMatching;
  }

  public void setSubpathMatching(Boolean subpathMatching) {
    this.subpathMatching = subpathMatching;
  }

  public ItemRedirect targetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
    return this;
  }

   /**
   * Get targetUrl
   * @return targetUrl
  **/
  @Schema(example = "https://archlinux.org/", required = true, description = "")
  public String getTargetUrl() {
    return targetUrl;
  }

  public void setTargetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemRedirect itemRedirect = (ItemRedirect) o;
    return Objects.equals(this.includeSubdomains, itemRedirect.includeSubdomains) &&
        Objects.equals(this.preservePathSuffix, itemRedirect.preservePathSuffix) &&
        Objects.equals(this.preserveQueryString, itemRedirect.preserveQueryString) &&
        Objects.equals(this.sourceUrl, itemRedirect.sourceUrl) &&
        Objects.equals(this.statusCode, itemRedirect.statusCode) &&
        Objects.equals(this.subpathMatching, itemRedirect.subpathMatching) &&
        Objects.equals(this.targetUrl, itemRedirect.targetUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeSubdomains, preservePathSuffix, preserveQueryString, sourceUrl, statusCode, subpathMatching, targetUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemRedirect {\n");
    
    sb.append("    includeSubdomains: ").append(toIndentedString(includeSubdomains)).append("\n");
    sb.append("    preservePathSuffix: ").append(toIndentedString(preservePathSuffix)).append("\n");
    sb.append("    preserveQueryString: ").append(toIndentedString(preserveQueryString)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    subpathMatching: ").append(toIndentedString(subpathMatching)).append("\n");
    sb.append("    targetUrl: ").append(toIndentedString(targetUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
