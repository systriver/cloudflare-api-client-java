/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Bandwidth;
import io.swagger.client.model.Pageviews;
import io.swagger.client.model.SchemasRequests;
import io.swagger.client.model.Since;
import io.swagger.client.model.Threats;
import io.swagger.client.model.Uniques;
import io.swagger.client.model.Until;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TimeseriesInner
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class TimeseriesInner {
  @SerializedName("bandwidth")
  private Bandwidth bandwidth = null;

  @SerializedName("pageviews")
  private Pageviews pageviews = null;

  @SerializedName("requests")
  private SchemasRequests requests = null;

  @SerializedName("since")
  private Since since = null;

  @SerializedName("threats")
  private Threats threats = null;

  @SerializedName("uniques")
  private Uniques uniques = null;

  @SerializedName("until")
  private Until until = null;

  public TimeseriesInner bandwidth(Bandwidth bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @Schema(description = "")
  public Bandwidth getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(Bandwidth bandwidth) {
    this.bandwidth = bandwidth;
  }

  public TimeseriesInner pageviews(Pageviews pageviews) {
    this.pageviews = pageviews;
    return this;
  }

   /**
   * Get pageviews
   * @return pageviews
  **/
  @Schema(description = "")
  public Pageviews getPageviews() {
    return pageviews;
  }

  public void setPageviews(Pageviews pageviews) {
    this.pageviews = pageviews;
  }

  public TimeseriesInner requests(SchemasRequests requests) {
    this.requests = requests;
    return this;
  }

   /**
   * Get requests
   * @return requests
  **/
  @Schema(description = "")
  public SchemasRequests getRequests() {
    return requests;
  }

  public void setRequests(SchemasRequests requests) {
    this.requests = requests;
  }

  public TimeseriesInner since(Since since) {
    this.since = since;
    return this;
  }

   /**
   * Get since
   * @return since
  **/
  @Schema(description = "")
  public Since getSince() {
    return since;
  }

  public void setSince(Since since) {
    this.since = since;
  }

  public TimeseriesInner threats(Threats threats) {
    this.threats = threats;
    return this;
  }

   /**
   * Get threats
   * @return threats
  **/
  @Schema(description = "")
  public Threats getThreats() {
    return threats;
  }

  public void setThreats(Threats threats) {
    this.threats = threats;
  }

  public TimeseriesInner uniques(Uniques uniques) {
    this.uniques = uniques;
    return this;
  }

   /**
   * Get uniques
   * @return uniques
  **/
  @Schema(description = "")
  public Uniques getUniques() {
    return uniques;
  }

  public void setUniques(Uniques uniques) {
    this.uniques = uniques;
  }

  public TimeseriesInner until(Until until) {
    this.until = until;
    return this;
  }

   /**
   * Get until
   * @return until
  **/
  @Schema(description = "")
  public Until getUntil() {
    return until;
  }

  public void setUntil(Until until) {
    this.until = until;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeseriesInner timeseriesInner = (TimeseriesInner) o;
    return Objects.equals(this.bandwidth, timeseriesInner.bandwidth) &&
        Objects.equals(this.pageviews, timeseriesInner.pageviews) &&
        Objects.equals(this.requests, timeseriesInner.requests) &&
        Objects.equals(this.since, timeseriesInner.since) &&
        Objects.equals(this.threats, timeseriesInner.threats) &&
        Objects.equals(this.uniques, timeseriesInner.uniques) &&
        Objects.equals(this.until, timeseriesInner.until);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidth, pageviews, requests, since, threats, uniques, until);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeseriesInner {\n");
    
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    pageviews: ").append(toIndentedString(pageviews)).append("\n");
    sb.append("    requests: ").append(toIndentedString(requests)).append("\n");
    sb.append("    since: ").append(toIndentedString(since)).append("\n");
    sb.append("    threats: ").append(toIndentedString(threats)).append("\n");
    sb.append("    uniques: ").append(toIndentedString(uniques)).append("\n");
    sb.append("    until: ").append(toIndentedString(until)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
