/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CloudflareClientAPIGroups;
import io.swagger.client.model.RewriteAction;
import io.swagger.client.model.SchemasRules;
import io.swagger.client.model.Urls;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Override
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Override {
  @SerializedName("description")
  private String description = null;

  @SerializedName("groups")
  private CloudflareClientAPIGroups groups = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("paused")
  private Boolean paused = null;

  @SerializedName("priority")
  private BigDecimal priority = null;

  @SerializedName("rewrite_action")
  private RewriteAction rewriteAction = null;

  @SerializedName("rules")
  private SchemasRules rules = null;

  @SerializedName("urls")
  private Urls urls = null;

  public Override description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Override groups(CloudflareClientAPIGroups groups) {
    this.groups = groups;
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @Schema(description = "")
  public CloudflareClientAPIGroups getGroups() {
    return groups;
  }

  public void setGroups(CloudflareClientAPIGroups groups) {
    this.groups = groups;
  }

  public Override id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Override paused(Boolean paused) {
    this.paused = paused;
    return this;
  }

   /**
   * Get paused
   * @return paused
  **/
  @Schema(description = "")
  public Boolean getPaused() {
    return paused;
  }

  public void setPaused(Boolean paused) {
    this.paused = paused;
  }

  public Override priority(BigDecimal priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public BigDecimal getPriority() {
    return priority;
  }

  public void setPriority(BigDecimal priority) {
    this.priority = priority;
  }

  public Override rewriteAction(RewriteAction rewriteAction) {
    this.rewriteAction = rewriteAction;
    return this;
  }

   /**
   * Get rewriteAction
   * @return rewriteAction
  **/
  @Schema(description = "")
  public RewriteAction getRewriteAction() {
    return rewriteAction;
  }

  public void setRewriteAction(RewriteAction rewriteAction) {
    this.rewriteAction = rewriteAction;
  }

  public Override rules(SchemasRules rules) {
    this.rules = rules;
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @Schema(description = "")
  public SchemasRules getRules() {
    return rules;
  }

  public void setRules(SchemasRules rules) {
    this.rules = rules;
  }

  public Override urls(Urls urls) {
    this.urls = urls;
    return this;
  }

   /**
   * Get urls
   * @return urls
  **/
  @Schema(description = "")
  public Urls getUrls() {
    return urls;
  }

  public void setUrls(Urls urls) {
    this.urls = urls;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Override override = (Override) o;
    return Objects.equals(this.description, override.description) &&
        Objects.equals(this.groups, override.groups) &&
        Objects.equals(this.id, override.id) &&
        Objects.equals(this.paused, override.paused) &&
        Objects.equals(this.priority, override.priority) &&
        Objects.equals(this.rewriteAction, override.rewriteAction) &&
        Objects.equals(this.rules, override.rules) &&
        Objects.equals(this.urls, override.urls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, groups, id, paused, priority, rewriteAction, rules, urls);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Override {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    rewriteAction: ").append(toIndentedString(rewriteAction)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
