/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The language of the default page template. If no default_template_language is provided, then &#x60;en-US&#x60; (English) will be used.
 */
@JsonAdapter(DefaultTemplateLanguage.Adapter.class)
public enum DefaultTemplateLanguage {
  EN_US("en-US"),
  ES_ES("es-ES"),
  DE_DE("de-DE"),
  FR_FR("fr-FR"),
  IT_IT("it-IT"),
  JA_JP("ja-JP"),
  KO_KR("ko-KR"),
  PT_BR("pt-BR"),
  ZH_CN("zh-CN"),
  ZH_TW("zh-TW"),
  NL_NL("nl-NL"),
  PL_PL("pl-PL"),
  ID_ID("id-ID"),
  TR_TR("tr-TR"),
  AR_EG("ar-EG"),
  RU_RU("ru-RU"),
  FA_IR("fa-IR");

  private String value;

  DefaultTemplateLanguage(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DefaultTemplateLanguage fromValue(String input) {
    for (DefaultTemplateLanguage b : DefaultTemplateLanguage.values()) {
      if (b.value.equals(input)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<DefaultTemplateLanguage> {
    @Override
    public void write(final JsonWriter jsonWriter, final DefaultTemplateLanguage enumeration) throws IOException {
      jsonWriter.value(String.valueOf(enumeration.getValue()));
    }

    @Override
    public DefaultTemplateLanguage read(final JsonReader jsonReader) throws IOException {
      Object value = jsonReader.nextString();
      return DefaultTemplateLanguage.fromValue((String)(value));
    }
  }
}
