/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * A list of Cloudflare regions. WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, SAS: Southern Asia, SEAS: South East Asia, NEAS: North East Asia).
 */
@JsonAdapter(RegionCode.Adapter.class)
public enum RegionCode {
  WNAM("WNAM"),
  ENAM("ENAM"),
  WEU("WEU"),
  EEU("EEU"),
  NSAM("NSAM"),
  SSAM("SSAM"),
  OC("OC"),
  ME("ME"),
  NAF("NAF"),
  SAF("SAF"),
  SAS("SAS"),
  SEAS("SEAS"),
  NEAS("NEAS");

  private String value;

  RegionCode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static RegionCode fromValue(String input) {
    for (RegionCode b : RegionCode.values()) {
      if (b.value.equals(input)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<RegionCode> {
    @Override
    public void write(final JsonWriter jsonWriter, final RegionCode enumeration) throws IOException {
      jsonWriter.value(String.valueOf(enumeration.getValue()));
    }

    @Override
    public RegionCode read(final JsonReader jsonReader) throws IOException {
      Object value = jsonReader.nextString();
      return RegionCode.fromValue((String)(value));
    }
  }
}
