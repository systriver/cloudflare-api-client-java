/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BundleMethod;
import io.swagger.client.model.CustomCertificateComponentsSchemasStatus;
import io.swagger.client.model.GeoRestrictions;
import io.swagger.client.model.Hosts;
import io.swagger.client.model.KeylessCertificate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * CustomCertificate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class CustomCertificate {
  @SerializedName("bundle_method")
  private BundleMethod bundleMethod = null;

  @SerializedName("expires_on")
  private OffsetDateTime expiresOn = null;

  @SerializedName("geo_restrictions")
  private GeoRestrictions geoRestrictions = null;

  @SerializedName("hosts")
  private Hosts hosts = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("issuer")
  private String issuer = null;

  @SerializedName("keyless_server")
  private KeylessCertificate keylessServer = null;

  @SerializedName("modified_on")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("policy")
  private String policy = null;

  @SerializedName("priority")
  private BigDecimal priority = null;

  @SerializedName("signature")
  private String signature = null;

  @SerializedName("status")
  private CustomCertificateComponentsSchemasStatus status = null;

  @SerializedName("uploaded_on")
  private OffsetDateTime uploadedOn = null;

  @SerializedName("zone_id")
  private String zoneId = null;

  public CustomCertificate bundleMethod(BundleMethod bundleMethod) {
    this.bundleMethod = bundleMethod;
    return this;
  }

   /**
   * Get bundleMethod
   * @return bundleMethod
  **/
  @Schema(required = true, description = "")
  public BundleMethod getBundleMethod() {
    return bundleMethod;
  }

  public void setBundleMethod(BundleMethod bundleMethod) {
    this.bundleMethod = bundleMethod;
  }

  public CustomCertificate expiresOn(OffsetDateTime expiresOn) {
    this.expiresOn = expiresOn;
    return this;
  }

   /**
   * Get expiresOn
   * @return expiresOn
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getExpiresOn() {
    return expiresOn;
  }

  public void setExpiresOn(OffsetDateTime expiresOn) {
    this.expiresOn = expiresOn;
  }

  public CustomCertificate geoRestrictions(GeoRestrictions geoRestrictions) {
    this.geoRestrictions = geoRestrictions;
    return this;
  }

   /**
   * Get geoRestrictions
   * @return geoRestrictions
  **/
  @Schema(description = "")
  public GeoRestrictions getGeoRestrictions() {
    return geoRestrictions;
  }

  public void setGeoRestrictions(GeoRestrictions geoRestrictions) {
    this.geoRestrictions = geoRestrictions;
  }

  public CustomCertificate hosts(Hosts hosts) {
    this.hosts = hosts;
    return this;
  }

   /**
   * Get hosts
   * @return hosts
  **/
  @Schema(required = true, description = "")
  public Hosts getHosts() {
    return hosts;
  }

  public void setHosts(Hosts hosts) {
    this.hosts = hosts;
  }

  public CustomCertificate id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CustomCertificate issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @Schema(required = true, description = "")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public CustomCertificate keylessServer(KeylessCertificate keylessServer) {
    this.keylessServer = keylessServer;
    return this;
  }

   /**
   * Get keylessServer
   * @return keylessServer
  **/
  @Schema(description = "")
  public KeylessCertificate getKeylessServer() {
    return keylessServer;
  }

  public void setKeylessServer(KeylessCertificate keylessServer) {
    this.keylessServer = keylessServer;
  }

  public CustomCertificate modifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public CustomCertificate policy(String policy) {
    this.policy = policy;
    return this;
  }

   /**
   * Get policy
   * @return policy
  **/
  @Schema(description = "")
  public String getPolicy() {
    return policy;
  }

  public void setPolicy(String policy) {
    this.policy = policy;
  }

  public CustomCertificate priority(BigDecimal priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(required = true, description = "")
  public BigDecimal getPriority() {
    return priority;
  }

  public void setPriority(BigDecimal priority) {
    this.priority = priority;
  }

  public CustomCertificate signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @Schema(required = true, description = "")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }

  public CustomCertificate status(CustomCertificateComponentsSchemasStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public CustomCertificateComponentsSchemasStatus getStatus() {
    return status;
  }

  public void setStatus(CustomCertificateComponentsSchemasStatus status) {
    this.status = status;
  }

  public CustomCertificate uploadedOn(OffsetDateTime uploadedOn) {
    this.uploadedOn = uploadedOn;
    return this;
  }

   /**
   * Get uploadedOn
   * @return uploadedOn
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getUploadedOn() {
    return uploadedOn;
  }

  public void setUploadedOn(OffsetDateTime uploadedOn) {
    this.uploadedOn = uploadedOn;
  }

  public CustomCertificate zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(required = true, description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomCertificate customCertificate = (CustomCertificate) o;
    return Objects.equals(this.bundleMethod, customCertificate.bundleMethod) &&
        Objects.equals(this.expiresOn, customCertificate.expiresOn) &&
        Objects.equals(this.geoRestrictions, customCertificate.geoRestrictions) &&
        Objects.equals(this.hosts, customCertificate.hosts) &&
        Objects.equals(this.id, customCertificate.id) &&
        Objects.equals(this.issuer, customCertificate.issuer) &&
        Objects.equals(this.keylessServer, customCertificate.keylessServer) &&
        Objects.equals(this.modifiedOn, customCertificate.modifiedOn) &&
        Objects.equals(this.policy, customCertificate.policy) &&
        Objects.equals(this.priority, customCertificate.priority) &&
        Objects.equals(this.signature, customCertificate.signature) &&
        Objects.equals(this.status, customCertificate.status) &&
        Objects.equals(this.uploadedOn, customCertificate.uploadedOn) &&
        Objects.equals(this.zoneId, customCertificate.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bundleMethod, expiresOn, geoRestrictions, hosts, id, issuer, keylessServer, modifiedOn, policy, priority, signature, status, uploadedOn, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomCertificate {\n");
    
    sb.append("    bundleMethod: ").append(toIndentedString(bundleMethod)).append("\n");
    sb.append("    expiresOn: ").append(toIndentedString(expiresOn)).append("\n");
    sb.append("    geoRestrictions: ").append(toIndentedString(geoRestrictions)).append("\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    keylessServer: ").append(toIndentedString(keylessServer)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    uploadedOn: ").append(toIndentedString(uploadedOn)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
