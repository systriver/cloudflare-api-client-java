/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AllowedOrigins;
import io.swagger.client.model.Input;
import io.swagger.client.model.MediaMetadata;
import io.swagger.client.model.MediaStatus;
import io.swagger.client.model.Playback;
import io.swagger.client.model.Watermarks;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * Videos
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Videos {
  @SerializedName("allowedOrigins")
  private AllowedOrigins allowedOrigins = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("input")
  private Input input = null;

  @SerializedName("liveInput")
  private String liveInput = null;

  @SerializedName("maxDurationSeconds")
  private Integer maxDurationSeconds = null;

  @SerializedName("meta")
  private MediaMetadata meta = null;

  @SerializedName("modified")
  private OffsetDateTime modified = null;

  @SerializedName("playback")
  private Playback playback = null;

  @SerializedName("preview")
  private String preview = null;

  @SerializedName("readyToStream")
  private Boolean readyToStream = null;

  @SerializedName("requireSignedURLs")
  private Boolean requireSignedURLs = null;

  @SerializedName("size")
  private BigDecimal size = null;

  @SerializedName("status")
  private MediaStatus status = null;

  @SerializedName("thumbnail")
  private String thumbnail = null;

  @SerializedName("thumbnailTimestampPct")
  private BigDecimal thumbnailTimestampPct = null;

  @SerializedName("uid")
  private String uid = null;

  @SerializedName("uploadExpiry")
  private OffsetDateTime uploadExpiry = null;

  @SerializedName("uploaded")
  private OffsetDateTime uploaded = null;

  @SerializedName("watermark")
  private Watermarks watermark = null;

  public Videos allowedOrigins(AllowedOrigins allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
    return this;
  }

   /**
   * Get allowedOrigins
   * @return allowedOrigins
  **/
  @Schema(description = "")
  public AllowedOrigins getAllowedOrigins() {
    return allowedOrigins;
  }

  public void setAllowedOrigins(AllowedOrigins allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
  }

  public Videos created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Videos creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @Schema(description = "")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public Videos duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public Videos input(Input input) {
    this.input = input;
    return this;
  }

   /**
   * Get input
   * @return input
  **/
  @Schema(description = "")
  public Input getInput() {
    return input;
  }

  public void setInput(Input input) {
    this.input = input;
  }

  public Videos liveInput(String liveInput) {
    this.liveInput = liveInput;
    return this;
  }

   /**
   * Get liveInput
   * @return liveInput
  **/
  @Schema(description = "")
  public String getLiveInput() {
    return liveInput;
  }

  public void setLiveInput(String liveInput) {
    this.liveInput = liveInput;
  }

  public Videos maxDurationSeconds(Integer maxDurationSeconds) {
    this.maxDurationSeconds = maxDurationSeconds;
    return this;
  }

   /**
   * Get maxDurationSeconds
   * @return maxDurationSeconds
  **/
  @Schema(description = "")
  public Integer getMaxDurationSeconds() {
    return maxDurationSeconds;
  }

  public void setMaxDurationSeconds(Integer maxDurationSeconds) {
    this.maxDurationSeconds = maxDurationSeconds;
  }

  public Videos meta(MediaMetadata meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @Schema(description = "")
  public MediaMetadata getMeta() {
    return meta;
  }

  public void setMeta(MediaMetadata meta) {
    this.meta = meta;
  }

  public Videos modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @Schema(description = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public Videos playback(Playback playback) {
    this.playback = playback;
    return this;
  }

   /**
   * Get playback
   * @return playback
  **/
  @Schema(description = "")
  public Playback getPlayback() {
    return playback;
  }

  public void setPlayback(Playback playback) {
    this.playback = playback;
  }

  public Videos preview(String preview) {
    this.preview = preview;
    return this;
  }

   /**
   * Get preview
   * @return preview
  **/
  @Schema(description = "")
  public String getPreview() {
    return preview;
  }

  public void setPreview(String preview) {
    this.preview = preview;
  }

  public Videos readyToStream(Boolean readyToStream) {
    this.readyToStream = readyToStream;
    return this;
  }

   /**
   * Get readyToStream
   * @return readyToStream
  **/
  @Schema(description = "")
  public Boolean getReadyToStream() {
    return readyToStream;
  }

  public void setReadyToStream(Boolean readyToStream) {
    this.readyToStream = readyToStream;
  }

  public Videos requireSignedURLs(Boolean requireSignedURLs) {
    this.requireSignedURLs = requireSignedURLs;
    return this;
  }

   /**
   * Get requireSignedURLs
   * @return requireSignedURLs
  **/
  @Schema(description = "")
  public Boolean getRequireSignedURLs() {
    return requireSignedURLs;
  }

  public void setRequireSignedURLs(Boolean requireSignedURLs) {
    this.requireSignedURLs = requireSignedURLs;
  }

  public Videos size(BigDecimal size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public BigDecimal getSize() {
    return size;
  }

  public void setSize(BigDecimal size) {
    this.size = size;
  }

  public Videos status(MediaStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public MediaStatus getStatus() {
    return status;
  }

  public void setStatus(MediaStatus status) {
    this.status = status;
  }

  public Videos thumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * Get thumbnail
   * @return thumbnail
  **/
  @Schema(description = "")
  public String getThumbnail() {
    return thumbnail;
  }

  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }

  public Videos thumbnailTimestampPct(BigDecimal thumbnailTimestampPct) {
    this.thumbnailTimestampPct = thumbnailTimestampPct;
    return this;
  }

   /**
   * Get thumbnailTimestampPct
   * @return thumbnailTimestampPct
  **/
  @Schema(description = "")
  public BigDecimal getThumbnailTimestampPct() {
    return thumbnailTimestampPct;
  }

  public void setThumbnailTimestampPct(BigDecimal thumbnailTimestampPct) {
    this.thumbnailTimestampPct = thumbnailTimestampPct;
  }

  public Videos uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public Videos uploadExpiry(OffsetDateTime uploadExpiry) {
    this.uploadExpiry = uploadExpiry;
    return this;
  }

   /**
   * Get uploadExpiry
   * @return uploadExpiry
  **/
  @Schema(description = "")
  public OffsetDateTime getUploadExpiry() {
    return uploadExpiry;
  }

  public void setUploadExpiry(OffsetDateTime uploadExpiry) {
    this.uploadExpiry = uploadExpiry;
  }

  public Videos uploaded(OffsetDateTime uploaded) {
    this.uploaded = uploaded;
    return this;
  }

   /**
   * Get uploaded
   * @return uploaded
  **/
  @Schema(description = "")
  public OffsetDateTime getUploaded() {
    return uploaded;
  }

  public void setUploaded(OffsetDateTime uploaded) {
    this.uploaded = uploaded;
  }

  public Videos watermark(Watermarks watermark) {
    this.watermark = watermark;
    return this;
  }

   /**
   * Get watermark
   * @return watermark
  **/
  @Schema(description = "")
  public Watermarks getWatermark() {
    return watermark;
  }

  public void setWatermark(Watermarks watermark) {
    this.watermark = watermark;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Videos videos = (Videos) o;
    return Objects.equals(this.allowedOrigins, videos.allowedOrigins) &&
        Objects.equals(this.created, videos.created) &&
        Objects.equals(this.creator, videos.creator) &&
        Objects.equals(this.duration, videos.duration) &&
        Objects.equals(this.input, videos.input) &&
        Objects.equals(this.liveInput, videos.liveInput) &&
        Objects.equals(this.maxDurationSeconds, videos.maxDurationSeconds) &&
        Objects.equals(this.meta, videos.meta) &&
        Objects.equals(this.modified, videos.modified) &&
        Objects.equals(this.playback, videos.playback) &&
        Objects.equals(this.preview, videos.preview) &&
        Objects.equals(this.readyToStream, videos.readyToStream) &&
        Objects.equals(this.requireSignedURLs, videos.requireSignedURLs) &&
        Objects.equals(this.size, videos.size) &&
        Objects.equals(this.status, videos.status) &&
        Objects.equals(this.thumbnail, videos.thumbnail) &&
        Objects.equals(this.thumbnailTimestampPct, videos.thumbnailTimestampPct) &&
        Objects.equals(this.uid, videos.uid) &&
        Objects.equals(this.uploadExpiry, videos.uploadExpiry) &&
        Objects.equals(this.uploaded, videos.uploaded) &&
        Objects.equals(this.watermark, videos.watermark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedOrigins, created, creator, duration, input, liveInput, maxDurationSeconds, meta, modified, playback, preview, readyToStream, requireSignedURLs, size, status, thumbnail, thumbnailTimestampPct, uid, uploadExpiry, uploaded, watermark);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Videos {\n");
    
    sb.append("    allowedOrigins: ").append(toIndentedString(allowedOrigins)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    liveInput: ").append(toIndentedString(liveInput)).append("\n");
    sb.append("    maxDurationSeconds: ").append(toIndentedString(maxDurationSeconds)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    playback: ").append(toIndentedString(playback)).append("\n");
    sb.append("    preview: ").append(toIndentedString(preview)).append("\n");
    sb.append("    readyToStream: ").append(toIndentedString(readyToStream)).append("\n");
    sb.append("    requireSignedURLs: ").append(toIndentedString(requireSignedURLs)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    thumbnailTimestampPct: ").append(toIndentedString(thumbnailTimestampPct)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    uploadExpiry: ").append(toIndentedString(uploadExpiry)).append("\n");
    sb.append("    uploaded: ").append(toIndentedString(uploaded)).append("\n");
    sb.append("    watermark: ").append(toIndentedString(watermark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
