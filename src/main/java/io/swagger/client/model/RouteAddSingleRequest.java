/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Scope;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RouteAddSingleRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class RouteAddSingleRequest {
  @SerializedName("description")
  private String description = null;

  @SerializedName("nexthop")
  private String nexthop = null;

  @SerializedName("prefix")
  private String prefix = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("scope")
  private Scope scope = null;

  @SerializedName("weight")
  private Integer weight = null;

  public RouteAddSingleRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RouteAddSingleRequest nexthop(String nexthop) {
    this.nexthop = nexthop;
    return this;
  }

   /**
   * Get nexthop
   * @return nexthop
  **/
  @Schema(required = true, description = "")
  public String getNexthop() {
    return nexthop;
  }

  public void setNexthop(String nexthop) {
    this.nexthop = nexthop;
  }

  public RouteAddSingleRequest prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @Schema(required = true, description = "")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  public RouteAddSingleRequest priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(required = true, description = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public RouteAddSingleRequest scope(Scope scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public Scope getScope() {
    return scope;
  }

  public void setScope(Scope scope) {
    this.scope = scope;
  }

  public RouteAddSingleRequest weight(Integer weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @Schema(description = "")
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteAddSingleRequest routeAddSingleRequest = (RouteAddSingleRequest) o;
    return Objects.equals(this.description, routeAddSingleRequest.description) &&
        Objects.equals(this.nexthop, routeAddSingleRequest.nexthop) &&
        Objects.equals(this.prefix, routeAddSingleRequest.prefix) &&
        Objects.equals(this.priority, routeAddSingleRequest.priority) &&
        Objects.equals(this.scope, routeAddSingleRequest.scope) &&
        Objects.equals(this.weight, routeAddSingleRequest.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, nexthop, prefix, priority, scope, weight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteAddSingleRequest {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    nexthop: ").append(toIndentedString(nexthop)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
