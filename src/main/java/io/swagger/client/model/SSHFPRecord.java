/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Base;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.CloudflareClientAPISSHFPRecordData;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * SSHFPRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class SSHFPRecord extends Base {
  @SerializedName("content")
  private String ssHFPRecordContent = null;

  @SerializedName("data")
  private CloudflareClientAPISSHFPRecordData ssHFPRecordData = null;

  @SerializedName("name")
  private String ssHFPRecordName = null;

  @SerializedName("type")
  private String ssHFPRecordType = null;

   /**
   * Formatted SSHFP content. See &#x27;data&#x27; to set SSHFP properties.
   * @return ssHFPRecordContent
  **/
  @Schema(description = "Formatted SSHFP content. See 'data' to set SSHFP properties.")
  public String getSsHFPRecordContent() {
    return ssHFPRecordContent;
  }

  public SSHFPRecord ssHFPRecordData(CloudflareClientAPISSHFPRecordData ssHFPRecordData) {
    this.ssHFPRecordData = ssHFPRecordData;
    return this;
  }

   /**
   * Get ssHFPRecordData
   * @return ssHFPRecordData
  **/
  @Schema(required = true, description = "")
  public CloudflareClientAPISSHFPRecordData getSsHFPRecordData() {
    return ssHFPRecordData;
  }

  public void setSsHFPRecordData(CloudflareClientAPISSHFPRecordData ssHFPRecordData) {
    this.ssHFPRecordData = ssHFPRecordData;
  }

  public SSHFPRecord ssHFPRecordName(String ssHFPRecordName) {
    this.ssHFPRecordName = ssHFPRecordName;
    return this;
  }

   /**
   * Get ssHFPRecordName
   * @return ssHFPRecordName
  **/
  @Schema(required = true, description = "")
  public String getSsHFPRecordName() {
    return ssHFPRecordName;
  }

  public void setSsHFPRecordName(String ssHFPRecordName) {
    this.ssHFPRecordName = ssHFPRecordName;
  }

  public SSHFPRecord ssHFPRecordType(String ssHFPRecordType) {
    this.ssHFPRecordType = ssHFPRecordType;
    return this;
  }

   /**
   * Record type.
   * @return ssHFPRecordType
  **/
  @Schema(example = "SSHFP", required = true, description = "Record type.")
  public String getSsHFPRecordType() {
    return ssHFPRecordType;
  }

  public void setSsHFPRecordType(String ssHFPRecordType) {
    this.ssHFPRecordType = ssHFPRecordType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SSHFPRecord ssHFPRecord = (SSHFPRecord) o;
    return Objects.equals(this.ssHFPRecordContent, ssHFPRecord.ssHFPRecordContent) &&
        Objects.equals(this.ssHFPRecordData, ssHFPRecord.ssHFPRecordData) &&
        Objects.equals(this.ssHFPRecordName, ssHFPRecord.ssHFPRecordName) &&
        Objects.equals(this.ssHFPRecordType, ssHFPRecord.ssHFPRecordType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ssHFPRecordContent, ssHFPRecordData, ssHFPRecordName, ssHFPRecordType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SSHFPRecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    ssHFPRecordContent: ").append(toIndentedString(ssHFPRecordContent)).append("\n");
    sb.append("    ssHFPRecordData: ").append(toIndentedString(ssHFPRecordData)).append("\n");
    sb.append("    ssHFPRecordName: ").append(toIndentedString(ssHFPRecordName)).append("\n");
    sb.append("    ssHFPRecordType: ").append(toIndentedString(ssHFPRecordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
