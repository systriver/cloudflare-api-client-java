/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CloudflareClientAPISchemasIdentifier;
import io.swagger.client.model.Gre;
import io.swagger.client.model.SchemasHealthCheck;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Interconnect
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Interconnect {
  @SerializedName("colo_name")
  private String coloName = null;

  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("gre")
  private Gre gre = null;

  @SerializedName("health_check")
  private SchemasHealthCheck healthCheck = null;

  @SerializedName("id")
  private CloudflareClientAPISchemasIdentifier id = null;

  @SerializedName("interface_address")
  private String interfaceAddress = null;

  @SerializedName("modified_on")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("mtu")
  private Integer mtu = null;

  @SerializedName("name")
  private String name = null;

  public Interconnect coloName(String coloName) {
    this.coloName = coloName;
    return this;
  }

   /**
   * Get coloName
   * @return coloName
  **/
  @Schema(description = "")
  public String getColoName() {
    return coloName;
  }

  public void setColoName(String coloName) {
    this.coloName = coloName;
  }

  public Interconnect createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public Interconnect description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Interconnect gre(Gre gre) {
    this.gre = gre;
    return this;
  }

   /**
   * Get gre
   * @return gre
  **/
  @Schema(description = "")
  public Gre getGre() {
    return gre;
  }

  public void setGre(Gre gre) {
    this.gre = gre;
  }

  public Interconnect healthCheck(SchemasHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
    return this;
  }

   /**
   * Get healthCheck
   * @return healthCheck
  **/
  @Schema(description = "")
  public SchemasHealthCheck getHealthCheck() {
    return healthCheck;
  }

  public void setHealthCheck(SchemasHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
  }

  public Interconnect id(CloudflareClientAPISchemasIdentifier id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public CloudflareClientAPISchemasIdentifier getId() {
    return id;
  }

  public void setId(CloudflareClientAPISchemasIdentifier id) {
    this.id = id;
  }

  public Interconnect interfaceAddress(String interfaceAddress) {
    this.interfaceAddress = interfaceAddress;
    return this;
  }

   /**
   * Get interfaceAddress
   * @return interfaceAddress
  **/
  @Schema(description = "")
  public String getInterfaceAddress() {
    return interfaceAddress;
  }

  public void setInterfaceAddress(String interfaceAddress) {
    this.interfaceAddress = interfaceAddress;
  }

  public Interconnect modifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public Interconnect mtu(Integer mtu) {
    this.mtu = mtu;
    return this;
  }

   /**
   * Get mtu
   * @return mtu
  **/
  @Schema(description = "")
  public Integer getMtu() {
    return mtu;
  }

  public void setMtu(Integer mtu) {
    this.mtu = mtu;
  }

  public Interconnect name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Interconnect interconnect = (Interconnect) o;
    return Objects.equals(this.coloName, interconnect.coloName) &&
        Objects.equals(this.createdOn, interconnect.createdOn) &&
        Objects.equals(this.description, interconnect.description) &&
        Objects.equals(this.gre, interconnect.gre) &&
        Objects.equals(this.healthCheck, interconnect.healthCheck) &&
        Objects.equals(this.id, interconnect.id) &&
        Objects.equals(this.interfaceAddress, interconnect.interfaceAddress) &&
        Objects.equals(this.modifiedOn, interconnect.modifiedOn) &&
        Objects.equals(this.mtu, interconnect.mtu) &&
        Objects.equals(this.name, interconnect.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coloName, createdOn, description, gre, healthCheck, id, interfaceAddress, modifiedOn, mtu, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Interconnect {\n");
    
    sb.append("    coloName: ").append(toIndentedString(coloName)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gre: ").append(toIndentedString(gre)).append("\n");
    sb.append("    healthCheck: ").append(toIndentedString(healthCheck)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    interfaceAddress: ").append(toIndentedString(interfaceAddress)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    mtu: ").append(toIndentedString(mtu)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
