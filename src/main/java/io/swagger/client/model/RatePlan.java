/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The rate plan applied to the subscription.
 */
@Schema(description = "The rate plan applied to the subscription.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class RatePlan {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("externally_managed")
  private Boolean externallyManaged = null;

  @SerializedName("id")
  private Object id = null;

  @SerializedName("is_contract")
  private Boolean isContract = null;

  @SerializedName("public_name")
  private String publicName = null;

  @SerializedName("scope")
  private String scope = null;

  @SerializedName("sets")
  private List<String> sets = null;

  public RatePlan currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The currency applied to the rate plan subscription.
   * @return currency
  **/
  @Schema(example = "USD", description = "The currency applied to the rate plan subscription.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public RatePlan externallyManaged(Boolean externallyManaged) {
    this.externallyManaged = externallyManaged;
    return this;
  }

   /**
   * Whether this rate plan is managed externally from Cloudflare.
   * @return externallyManaged
  **/
  @Schema(example = "false", description = "Whether this rate plan is managed externally from Cloudflare.")
  public Boolean isExternallyManaged() {
    return externallyManaged;
  }

  public void setExternallyManaged(Boolean externallyManaged) {
    this.externallyManaged = externallyManaged;
  }

  public RatePlan id(Object id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the rate plan.
   * @return id
  **/
  @Schema(example = "free", description = "The ID of the rate plan.")
  public Object getId() {
    return id;
  }

  public void setId(Object id) {
    this.id = id;
  }

  public RatePlan isContract(Boolean isContract) {
    this.isContract = isContract;
    return this;
  }

   /**
   * Whether a rate plan is enterprise-based (or newly adopted term contract).
   * @return isContract
  **/
  @Schema(example = "false", description = "Whether a rate plan is enterprise-based (or newly adopted term contract).")
  public Boolean isIsContract() {
    return isContract;
  }

  public void setIsContract(Boolean isContract) {
    this.isContract = isContract;
  }

  public RatePlan publicName(String publicName) {
    this.publicName = publicName;
    return this;
  }

   /**
   * The full name of the rate plan.
   * @return publicName
  **/
  @Schema(example = "Business Plan", description = "The full name of the rate plan.")
  public String getPublicName() {
    return publicName;
  }

  public void setPublicName(String publicName) {
    this.publicName = publicName;
  }

  public RatePlan scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * The scope that this rate plan applies to.
   * @return scope
  **/
  @Schema(example = "zone", description = "The scope that this rate plan applies to.")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public RatePlan sets(List<String> sets) {
    this.sets = sets;
    return this;
  }

  public RatePlan addSetsItem(String setsItem) {
    if (this.sets == null) {
      this.sets = new ArrayList<String>();
    }
    this.sets.add(setsItem);
    return this;
  }

   /**
   * The list of sets this rate plan applies to.
   * @return sets
  **/
  @Schema(description = "The list of sets this rate plan applies to.")
  public List<String> getSets() {
    return sets;
  }

  public void setSets(List<String> sets) {
    this.sets = sets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RatePlan ratePlan = (RatePlan) o;
    return Objects.equals(this.currency, ratePlan.currency) &&
        Objects.equals(this.externallyManaged, ratePlan.externallyManaged) &&
        Objects.equals(this.id, ratePlan.id) &&
        Objects.equals(this.isContract, ratePlan.isContract) &&
        Objects.equals(this.publicName, ratePlan.publicName) &&
        Objects.equals(this.scope, ratePlan.scope) &&
        Objects.equals(this.sets, ratePlan.sets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, externallyManaged, id, isContract, publicName, scope, sets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RatePlan {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    externallyManaged: ").append(toIndentedString(externallyManaged)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isContract: ").append(toIndentedString(isContract)).append("\n");
    sb.append("    publicName: ").append(toIndentedString(publicName)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    sets: ").append(toIndentedString(sets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
