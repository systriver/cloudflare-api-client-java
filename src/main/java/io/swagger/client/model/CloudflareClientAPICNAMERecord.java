/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.DnsRecordComponentsSchemasBase;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * CloudflareClientAPICNAMERecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class CloudflareClientAPICNAMERecord extends DnsRecordComponentsSchemasBase implements DnsRecord {
  @SerializedName("content")
  private Object cloudflareClientAPICNAMERecordContent = null;

  @SerializedName("name")
  private String cloudflareClientAPICNAMERecordName = null;

  @SerializedName("type")
  private String cloudflareClientAPICNAMERecordType = null;

  public CloudflareClientAPICNAMERecord cloudflareClientAPICNAMERecordContent(Object cloudflareClientAPICNAMERecordContent) {
    this.cloudflareClientAPICNAMERecordContent = cloudflareClientAPICNAMERecordContent;
    return this;
  }

   /**
   * A valid hostname.
   * @return cloudflareClientAPICNAMERecordContent
  **/
  @Schema(required = true, description = "A valid hostname.")
  public Object getCloudflareClientAPICNAMERecordContent() {
    return cloudflareClientAPICNAMERecordContent;
  }

  public void setCloudflareClientAPICNAMERecordContent(Object cloudflareClientAPICNAMERecordContent) {
    this.cloudflareClientAPICNAMERecordContent = cloudflareClientAPICNAMERecordContent;
  }

  public CloudflareClientAPICNAMERecord cloudflareClientAPICNAMERecordName(String cloudflareClientAPICNAMERecordName) {
    this.cloudflareClientAPICNAMERecordName = cloudflareClientAPICNAMERecordName;
    return this;
  }

   /**
   * Get cloudflareClientAPICNAMERecordName
   * @return cloudflareClientAPICNAMERecordName
  **/
  @Schema(required = true, description = "")
  public String getCloudflareClientAPICNAMERecordName() {
    return cloudflareClientAPICNAMERecordName;
  }

  public void setCloudflareClientAPICNAMERecordName(String cloudflareClientAPICNAMERecordName) {
    this.cloudflareClientAPICNAMERecordName = cloudflareClientAPICNAMERecordName;
  }

  public CloudflareClientAPICNAMERecord cloudflareClientAPICNAMERecordType(String cloudflareClientAPICNAMERecordType) {
    this.cloudflareClientAPICNAMERecordType = cloudflareClientAPICNAMERecordType;
    return this;
  }

   /**
   * Record type.
   * @return cloudflareClientAPICNAMERecordType
  **/
  @Schema(example = "CNAME", required = true, description = "Record type.")
  public String getCloudflareClientAPICNAMERecordType() {
    return cloudflareClientAPICNAMERecordType;
  }

  public void setCloudflareClientAPICNAMERecordType(String cloudflareClientAPICNAMERecordType) {
    this.cloudflareClientAPICNAMERecordType = cloudflareClientAPICNAMERecordType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudflareClientAPICNAMERecord cloudflareClientAPICNAMERecord = (CloudflareClientAPICNAMERecord) o;
    return Objects.equals(this.cloudflareClientAPICNAMERecordContent, cloudflareClientAPICNAMERecord.cloudflareClientAPICNAMERecordContent) &&
        Objects.equals(this.cloudflareClientAPICNAMERecordName, cloudflareClientAPICNAMERecord.cloudflareClientAPICNAMERecordName) &&
        Objects.equals(this.cloudflareClientAPICNAMERecordType, cloudflareClientAPICNAMERecord.cloudflareClientAPICNAMERecordType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudflareClientAPICNAMERecordContent, cloudflareClientAPICNAMERecordName, cloudflareClientAPICNAMERecordType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudflareClientAPICNAMERecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    cloudflareClientAPICNAMERecordContent: ").append(toIndentedString(cloudflareClientAPICNAMERecordContent)).append("\n");
    sb.append("    cloudflareClientAPICNAMERecordName: ").append(toIndentedString(cloudflareClientAPICNAMERecordName)).append("\n");
    sb.append("    cloudflareClientAPICNAMERecordType: ").append(toIndentedString(cloudflareClientAPICNAMERecordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
