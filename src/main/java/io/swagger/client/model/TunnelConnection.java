/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Connections;
import io.swagger.client.model.SchemasFeatures;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * A connection between cloudflared and a Cloudflare data center.
 */
@Schema(description = "A connection between cloudflared and a Cloudflare data center.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class TunnelConnection {
  @SerializedName("arch")
  private String arch = null;

  @SerializedName("config_version")
  private Integer configVersion = null;

  @SerializedName("conns")
  private Connections conns = null;

  @SerializedName("features")
  private SchemasFeatures features = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("run_at")
  private OffsetDateTime runAt = null;

  @SerializedName("version")
  private String version = null;

  public TunnelConnection arch(String arch) {
    this.arch = arch;
    return this;
  }

   /**
   * Get arch
   * @return arch
  **/
  @Schema(description = "")
  public String getArch() {
    return arch;
  }

  public void setArch(String arch) {
    this.arch = arch;
  }

  public TunnelConnection configVersion(Integer configVersion) {
    this.configVersion = configVersion;
    return this;
  }

   /**
   * Get configVersion
   * @return configVersion
  **/
  @Schema(description = "")
  public Integer getConfigVersion() {
    return configVersion;
  }

  public void setConfigVersion(Integer configVersion) {
    this.configVersion = configVersion;
  }

  public TunnelConnection conns(Connections conns) {
    this.conns = conns;
    return this;
  }

   /**
   * Get conns
   * @return conns
  **/
  @Schema(description = "")
  public Connections getConns() {
    return conns;
  }

  public void setConns(Connections conns) {
    this.conns = conns;
  }

  public TunnelConnection features(SchemasFeatures features) {
    this.features = features;
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @Schema(description = "")
  public SchemasFeatures getFeatures() {
    return features;
  }

  public void setFeatures(SchemasFeatures features) {
    this.features = features;
  }

  public TunnelConnection id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TunnelConnection runAt(OffsetDateTime runAt) {
    this.runAt = runAt;
    return this;
  }

   /**
   * Get runAt
   * @return runAt
  **/
  @Schema(description = "")
  public OffsetDateTime getRunAt() {
    return runAt;
  }

  public void setRunAt(OffsetDateTime runAt) {
    this.runAt = runAt;
  }

  public TunnelConnection version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TunnelConnection tunnelConnection = (TunnelConnection) o;
    return Objects.equals(this.arch, tunnelConnection.arch) &&
        Objects.equals(this.configVersion, tunnelConnection.configVersion) &&
        Objects.equals(this.conns, tunnelConnection.conns) &&
        Objects.equals(this.features, tunnelConnection.features) &&
        Objects.equals(this.id, tunnelConnection.id) &&
        Objects.equals(this.runAt, tunnelConnection.runAt) &&
        Objects.equals(this.version, tunnelConnection.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arch, configVersion, conns, features, id, runAt, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TunnelConnection {\n");
    
    sb.append("    arch: ").append(toIndentedString(arch)).append("\n");
    sb.append("    configVersion: ").append(toIndentedString(configVersion)).append("\n");
    sb.append("    conns: ").append(toIndentedString(conns)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    runAt: ").append(toIndentedString(runAt)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
