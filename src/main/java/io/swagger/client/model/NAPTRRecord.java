/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Base;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.CloudflareClientAPINAPTRRecordData;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * NAPTRRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class NAPTRRecord extends Base {
  @SerializedName("content")
  private String naPTRRecordContent = null;

  @SerializedName("data")
  private CloudflareClientAPINAPTRRecordData naPTRRecordData = null;

  @SerializedName("name")
  private String naPTRRecordName = null;

  @SerializedName("type")
  private String naPTRRecordType = null;

   /**
   * Formatted NAPTR content. See &#x27;data&#x27; to set NAPTR properties.
   * @return naPTRRecordContent
  **/
  @Schema(description = "Formatted NAPTR content. See 'data' to set NAPTR properties.")
  public String getNaPTRRecordContent() {
    return naPTRRecordContent;
  }

  public NAPTRRecord naPTRRecordData(CloudflareClientAPINAPTRRecordData naPTRRecordData) {
    this.naPTRRecordData = naPTRRecordData;
    return this;
  }

   /**
   * Get naPTRRecordData
   * @return naPTRRecordData
  **/
  @Schema(required = true, description = "")
  public CloudflareClientAPINAPTRRecordData getNaPTRRecordData() {
    return naPTRRecordData;
  }

  public void setNaPTRRecordData(CloudflareClientAPINAPTRRecordData naPTRRecordData) {
    this.naPTRRecordData = naPTRRecordData;
  }

  public NAPTRRecord naPTRRecordName(String naPTRRecordName) {
    this.naPTRRecordName = naPTRRecordName;
    return this;
  }

   /**
   * Get naPTRRecordName
   * @return naPTRRecordName
  **/
  @Schema(required = true, description = "")
  public String getNaPTRRecordName() {
    return naPTRRecordName;
  }

  public void setNaPTRRecordName(String naPTRRecordName) {
    this.naPTRRecordName = naPTRRecordName;
  }

  public NAPTRRecord naPTRRecordType(String naPTRRecordType) {
    this.naPTRRecordType = naPTRRecordType;
    return this;
  }

   /**
   * Record type.
   * @return naPTRRecordType
  **/
  @Schema(example = "NAPTR", required = true, description = "Record type.")
  public String getNaPTRRecordType() {
    return naPTRRecordType;
  }

  public void setNaPTRRecordType(String naPTRRecordType) {
    this.naPTRRecordType = naPTRRecordType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NAPTRRecord naPTRRecord = (NAPTRRecord) o;
    return Objects.equals(this.naPTRRecordContent, naPTRRecord.naPTRRecordContent) &&
        Objects.equals(this.naPTRRecordData, naPTRRecord.naPTRRecordData) &&
        Objects.equals(this.naPTRRecordName, naPTRRecord.naPTRRecordName) &&
        Objects.equals(this.naPTRRecordType, naPTRRecord.naPTRRecordType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(naPTRRecordContent, naPTRRecordData, naPTRRecordName, naPTRRecordType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NAPTRRecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    naPTRRecordContent: ").append(toIndentedString(naPTRRecordContent)).append("\n");
    sb.append("    naPTRRecordData: ").append(toIndentedString(naPTRRecordData)).append("\n");
    sb.append("    naPTRRecordName: ").append(toIndentedString(naPTRRecordName)).append("\n");
    sb.append("    naPTRRecordType: ").append(toIndentedString(naPTRRecordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
