/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CloudflareClientAPIFrequency;
import io.swagger.client.model.ComponentValues;
import io.swagger.client.model.RatePlan;
import io.swagger.client.model.State;
import io.swagger.client.model.Subscriptionv2App;
import io.swagger.client.model.Zone;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * SubscriptionV2
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class SubscriptionV2 {
  @SerializedName("app")
  private Subscriptionv2App app = null;

  @SerializedName("component_values")
  private ComponentValues componentValues = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("current_period_end")
  private OffsetDateTime currentPeriodEnd = null;

  @SerializedName("current_period_start")
  private OffsetDateTime currentPeriodStart = null;

  @SerializedName("frequency")
  private CloudflareClientAPIFrequency frequency = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("rate_plan")
  private RatePlan ratePlan = null;

  @SerializedName("state")
  private State state = null;

  @SerializedName("zone")
  private Zone zone = null;

  public SubscriptionV2 app(Subscriptionv2App app) {
    this.app = app;
    return this;
  }

   /**
   * Get app
   * @return app
  **/
  @Schema(description = "")
  public Subscriptionv2App getApp() {
    return app;
  }

  public void setApp(Subscriptionv2App app) {
    this.app = app;
  }

  public SubscriptionV2 componentValues(ComponentValues componentValues) {
    this.componentValues = componentValues;
    return this;
  }

   /**
   * Get componentValues
   * @return componentValues
  **/
  @Schema(description = "")
  public ComponentValues getComponentValues() {
    return componentValues;
  }

  public void setComponentValues(ComponentValues componentValues) {
    this.componentValues = componentValues;
  }

  public SubscriptionV2 currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public SubscriptionV2 currentPeriodEnd(OffsetDateTime currentPeriodEnd) {
    this.currentPeriodEnd = currentPeriodEnd;
    return this;
  }

   /**
   * Get currentPeriodEnd
   * @return currentPeriodEnd
  **/
  @Schema(description = "")
  public OffsetDateTime getCurrentPeriodEnd() {
    return currentPeriodEnd;
  }

  public void setCurrentPeriodEnd(OffsetDateTime currentPeriodEnd) {
    this.currentPeriodEnd = currentPeriodEnd;
  }

  public SubscriptionV2 currentPeriodStart(OffsetDateTime currentPeriodStart) {
    this.currentPeriodStart = currentPeriodStart;
    return this;
  }

   /**
   * Get currentPeriodStart
   * @return currentPeriodStart
  **/
  @Schema(description = "")
  public OffsetDateTime getCurrentPeriodStart() {
    return currentPeriodStart;
  }

  public void setCurrentPeriodStart(OffsetDateTime currentPeriodStart) {
    this.currentPeriodStart = currentPeriodStart;
  }

  public SubscriptionV2 frequency(CloudflareClientAPIFrequency frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @Schema(description = "")
  public CloudflareClientAPIFrequency getFrequency() {
    return frequency;
  }

  public void setFrequency(CloudflareClientAPIFrequency frequency) {
    this.frequency = frequency;
  }

  public SubscriptionV2 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SubscriptionV2 price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public SubscriptionV2 ratePlan(RatePlan ratePlan) {
    this.ratePlan = ratePlan;
    return this;
  }

   /**
   * Get ratePlan
   * @return ratePlan
  **/
  @Schema(description = "")
  public RatePlan getRatePlan() {
    return ratePlan;
  }

  public void setRatePlan(RatePlan ratePlan) {
    this.ratePlan = ratePlan;
  }

  public SubscriptionV2 state(State state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public State getState() {
    return state;
  }

  public void setState(State state) {
    this.state = state;
  }

  public SubscriptionV2 zone(Zone zone) {
    this.zone = zone;
    return this;
  }

   /**
   * Get zone
   * @return zone
  **/
  @Schema(description = "")
  public Zone getZone() {
    return zone;
  }

  public void setZone(Zone zone) {
    this.zone = zone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionV2 subscriptionV2 = (SubscriptionV2) o;
    return Objects.equals(this.app, subscriptionV2.app) &&
        Objects.equals(this.componentValues, subscriptionV2.componentValues) &&
        Objects.equals(this.currency, subscriptionV2.currency) &&
        Objects.equals(this.currentPeriodEnd, subscriptionV2.currentPeriodEnd) &&
        Objects.equals(this.currentPeriodStart, subscriptionV2.currentPeriodStart) &&
        Objects.equals(this.frequency, subscriptionV2.frequency) &&
        Objects.equals(this.id, subscriptionV2.id) &&
        Objects.equals(this.price, subscriptionV2.price) &&
        Objects.equals(this.ratePlan, subscriptionV2.ratePlan) &&
        Objects.equals(this.state, subscriptionV2.state) &&
        Objects.equals(this.zone, subscriptionV2.zone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(app, componentValues, currency, currentPeriodEnd, currentPeriodStart, frequency, id, price, ratePlan, state, zone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionV2 {\n");
    
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    componentValues: ").append(toIndentedString(componentValues)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currentPeriodEnd: ").append(toIndentedString(currentPeriodEnd)).append("\n");
    sb.append("    currentPeriodStart: ").append(toIndentedString(currentPeriodStart)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    ratePlan: ").append(toIndentedString(ratePlan)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
