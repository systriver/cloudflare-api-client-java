/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Hostnames;
import io.swagger.client.model.RequestType;
import io.swagger.client.model.RequestedValidity;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CertificatesBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class CertificatesBody {
  @SerializedName("csr")
  private String csr = null;

  @SerializedName("hostnames")
  private Hostnames hostnames = null;

  @SerializedName("request_type")
  private RequestType requestType = null;

  @SerializedName("requested_validity")
  private RequestedValidity requestedValidity = null;

  public CertificatesBody csr(String csr) {
    this.csr = csr;
    return this;
  }

   /**
   * Get csr
   * @return csr
  **/
  @Schema(description = "")
  public String getCsr() {
    return csr;
  }

  public void setCsr(String csr) {
    this.csr = csr;
  }

  public CertificatesBody hostnames(Hostnames hostnames) {
    this.hostnames = hostnames;
    return this;
  }

   /**
   * Get hostnames
   * @return hostnames
  **/
  @Schema(description = "")
  public Hostnames getHostnames() {
    return hostnames;
  }

  public void setHostnames(Hostnames hostnames) {
    this.hostnames = hostnames;
  }

  public CertificatesBody requestType(RequestType requestType) {
    this.requestType = requestType;
    return this;
  }

   /**
   * Get requestType
   * @return requestType
  **/
  @Schema(description = "")
  public RequestType getRequestType() {
    return requestType;
  }

  public void setRequestType(RequestType requestType) {
    this.requestType = requestType;
  }

  public CertificatesBody requestedValidity(RequestedValidity requestedValidity) {
    this.requestedValidity = requestedValidity;
    return this;
  }

   /**
   * Get requestedValidity
   * @return requestedValidity
  **/
  @Schema(description = "")
  public RequestedValidity getRequestedValidity() {
    return requestedValidity;
  }

  public void setRequestedValidity(RequestedValidity requestedValidity) {
    this.requestedValidity = requestedValidity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificatesBody certificatesBody = (CertificatesBody) o;
    return Objects.equals(this.csr, certificatesBody.csr) &&
        Objects.equals(this.hostnames, certificatesBody.hostnames) &&
        Objects.equals(this.requestType, certificatesBody.requestType) &&
        Objects.equals(this.requestedValidity, certificatesBody.requestedValidity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(csr, hostnames, requestType, requestedValidity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificatesBody {\n");
    
    sb.append("    csr: ").append(toIndentedString(csr)).append("\n");
    sb.append("    hostnames: ").append(toIndentedString(hostnames)).append("\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    requestedValidity: ").append(toIndentedString(requestedValidity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
