/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AdvancedType;
import io.swagger.client.model.CertificateAuthority;
import io.swagger.client.model.CertificatePacksComponentsSchemasStatus;
import io.swagger.client.model.SchemasHosts;
import io.swagger.client.model.ValidationMethod;
import io.swagger.client.model.ValidityDays;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AdvancedCertificatePackResponseSingleResult
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class AdvancedCertificatePackResponseSingleResult {
  @SerializedName("certificate_authority")
  private CertificateAuthority certificateAuthority = null;

  @SerializedName("cloudflare_branding")
  private Boolean cloudflareBranding = null;

  @SerializedName("hosts")
  private SchemasHosts hosts = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("status")
  private CertificatePacksComponentsSchemasStatus status = null;

  @SerializedName("type")
  private AdvancedType type = null;

  @SerializedName("validation_method")
  private ValidationMethod validationMethod = null;

  @SerializedName("validity_days")
  private ValidityDays validityDays = null;

  public AdvancedCertificatePackResponseSingleResult certificateAuthority(CertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
    return this;
  }

   /**
   * Get certificateAuthority
   * @return certificateAuthority
  **/
  @Schema(description = "")
  public CertificateAuthority getCertificateAuthority() {
    return certificateAuthority;
  }

  public void setCertificateAuthority(CertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
  }

  public AdvancedCertificatePackResponseSingleResult cloudflareBranding(Boolean cloudflareBranding) {
    this.cloudflareBranding = cloudflareBranding;
    return this;
  }

   /**
   * Get cloudflareBranding
   * @return cloudflareBranding
  **/
  @Schema(description = "")
  public Boolean getCloudflareBranding() {
    return cloudflareBranding;
  }

  public void setCloudflareBranding(Boolean cloudflareBranding) {
    this.cloudflareBranding = cloudflareBranding;
  }

  public AdvancedCertificatePackResponseSingleResult hosts(SchemasHosts hosts) {
    this.hosts = hosts;
    return this;
  }

   /**
   * Get hosts
   * @return hosts
  **/
  @Schema(description = "")
  public SchemasHosts getHosts() {
    return hosts;
  }

  public void setHosts(SchemasHosts hosts) {
    this.hosts = hosts;
  }

  public AdvancedCertificatePackResponseSingleResult id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AdvancedCertificatePackResponseSingleResult status(CertificatePacksComponentsSchemasStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public CertificatePacksComponentsSchemasStatus getStatus() {
    return status;
  }

  public void setStatus(CertificatePacksComponentsSchemasStatus status) {
    this.status = status;
  }

  public AdvancedCertificatePackResponseSingleResult type(AdvancedType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public AdvancedType getType() {
    return type;
  }

  public void setType(AdvancedType type) {
    this.type = type;
  }

  public AdvancedCertificatePackResponseSingleResult validationMethod(ValidationMethod validationMethod) {
    this.validationMethod = validationMethod;
    return this;
  }

   /**
   * Get validationMethod
   * @return validationMethod
  **/
  @Schema(description = "")
  public ValidationMethod getValidationMethod() {
    return validationMethod;
  }

  public void setValidationMethod(ValidationMethod validationMethod) {
    this.validationMethod = validationMethod;
  }

  public AdvancedCertificatePackResponseSingleResult validityDays(ValidityDays validityDays) {
    this.validityDays = validityDays;
    return this;
  }

   /**
   * Get validityDays
   * @return validityDays
  **/
  @Schema(description = "")
  public ValidityDays getValidityDays() {
    return validityDays;
  }

  public void setValidityDays(ValidityDays validityDays) {
    this.validityDays = validityDays;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvancedCertificatePackResponseSingleResult advancedCertificatePackResponseSingleResult = (AdvancedCertificatePackResponseSingleResult) o;
    return Objects.equals(this.certificateAuthority, advancedCertificatePackResponseSingleResult.certificateAuthority) &&
        Objects.equals(this.cloudflareBranding, advancedCertificatePackResponseSingleResult.cloudflareBranding) &&
        Objects.equals(this.hosts, advancedCertificatePackResponseSingleResult.hosts) &&
        Objects.equals(this.id, advancedCertificatePackResponseSingleResult.id) &&
        Objects.equals(this.status, advancedCertificatePackResponseSingleResult.status) &&
        Objects.equals(this.type, advancedCertificatePackResponseSingleResult.type) &&
        Objects.equals(this.validationMethod, advancedCertificatePackResponseSingleResult.validationMethod) &&
        Objects.equals(this.validityDays, advancedCertificatePackResponseSingleResult.validityDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateAuthority, cloudflareBranding, hosts, id, status, type, validationMethod, validityDays);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvancedCertificatePackResponseSingleResult {\n");
    
    sb.append("    certificateAuthority: ").append(toIndentedString(certificateAuthority)).append("\n");
    sb.append("    cloudflareBranding: ").append(toIndentedString(cloudflareBranding)).append("\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validationMethod: ").append(toIndentedString(validationMethod)).append("\n");
    sb.append("    validityDays: ").append(toIndentedString(validityDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
