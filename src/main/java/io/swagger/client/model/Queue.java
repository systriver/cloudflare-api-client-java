/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Queue
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Queue {
  @SerializedName("consumers")
  private Object consumers = null;

  @SerializedName("consumers_total_count")
  private Object consumersTotalCount = null;

  @SerializedName("created_on")
  private Object createdOn = null;

  @SerializedName("modified_on")
  private Object modifiedOn = null;

  @SerializedName("producers")
  private Object producers = null;

  @SerializedName("producers_total_count")
  private Object producersTotalCount = null;

  @SerializedName("queue_id")
  private Object queueId = null;

  @SerializedName("queue_name")
  private String queueName = null;

   /**
   * Get consumers
   * @return consumers
  **/
  @Schema(description = "")
  public Object getConsumers() {
    return consumers;
  }

   /**
   * Get consumersTotalCount
   * @return consumersTotalCount
  **/
  @Schema(description = "")
  public Object getConsumersTotalCount() {
    return consumersTotalCount;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public Object getCreatedOn() {
    return createdOn;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(description = "")
  public Object getModifiedOn() {
    return modifiedOn;
  }

   /**
   * Get producers
   * @return producers
  **/
  @Schema(description = "")
  public Object getProducers() {
    return producers;
  }

   /**
   * Get producersTotalCount
   * @return producersTotalCount
  **/
  @Schema(description = "")
  public Object getProducersTotalCount() {
    return producersTotalCount;
  }

   /**
   * Get queueId
   * @return queueId
  **/
  @Schema(description = "")
  public Object getQueueId() {
    return queueId;
  }

  public Queue queueName(String queueName) {
    this.queueName = queueName;
    return this;
  }

   /**
   * Get queueName
   * @return queueName
  **/
  @Schema(description = "")
  public String getQueueName() {
    return queueName;
  }

  public void setQueueName(String queueName) {
    this.queueName = queueName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Queue queue = (Queue) o;
    return Objects.equals(this.consumers, queue.consumers) &&
        Objects.equals(this.consumersTotalCount, queue.consumersTotalCount) &&
        Objects.equals(this.createdOn, queue.createdOn) &&
        Objects.equals(this.modifiedOn, queue.modifiedOn) &&
        Objects.equals(this.producers, queue.producers) &&
        Objects.equals(this.producersTotalCount, queue.producersTotalCount) &&
        Objects.equals(this.queueId, queue.queueId) &&
        Objects.equals(this.queueName, queue.queueName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumers, consumersTotalCount, createdOn, modifiedOn, producers, producersTotalCount, queueId, queueName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Queue {\n");
    
    sb.append("    consumers: ").append(toIndentedString(consumers)).append("\n");
    sb.append("    consumersTotalCount: ").append(toIndentedString(consumersTotalCount)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    producers: ").append(toIndentedString(producers)).append("\n");
    sb.append("    producersTotalCount: ").append(toIndentedString(producersTotalCount)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    queueName: ").append(toIndentedString(queueName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
