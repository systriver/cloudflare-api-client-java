/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * Watermarks
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Watermarks {
  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("downloadedFrom")
  private String downloadedFrom = null;

  @SerializedName("height")
  private Integer height = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("opacity")
  private BigDecimal opacity = null;

  @SerializedName("padding")
  private BigDecimal padding = null;

  @SerializedName("position")
  private String position = null;

  @SerializedName("scale")
  private BigDecimal scale = null;

  @SerializedName("size")
  private BigDecimal size = null;

  @SerializedName("uid")
  private String uid = null;

  @SerializedName("width")
  private Integer width = null;

  public Watermarks created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Watermarks downloadedFrom(String downloadedFrom) {
    this.downloadedFrom = downloadedFrom;
    return this;
  }

   /**
   * Get downloadedFrom
   * @return downloadedFrom
  **/
  @Schema(description = "")
  public String getDownloadedFrom() {
    return downloadedFrom;
  }

  public void setDownloadedFrom(String downloadedFrom) {
    this.downloadedFrom = downloadedFrom;
  }

  public Watermarks height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @Schema(description = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public Watermarks name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Watermarks opacity(BigDecimal opacity) {
    this.opacity = opacity;
    return this;
  }

   /**
   * Get opacity
   * @return opacity
  **/
  @Schema(description = "")
  public BigDecimal getOpacity() {
    return opacity;
  }

  public void setOpacity(BigDecimal opacity) {
    this.opacity = opacity;
  }

  public Watermarks padding(BigDecimal padding) {
    this.padding = padding;
    return this;
  }

   /**
   * Get padding
   * @return padding
  **/
  @Schema(description = "")
  public BigDecimal getPadding() {
    return padding;
  }

  public void setPadding(BigDecimal padding) {
    this.padding = padding;
  }

  public Watermarks position(String position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @Schema(description = "")
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }

  public Watermarks scale(BigDecimal scale) {
    this.scale = scale;
    return this;
  }

   /**
   * Get scale
   * @return scale
  **/
  @Schema(description = "")
  public BigDecimal getScale() {
    return scale;
  }

  public void setScale(BigDecimal scale) {
    this.scale = scale;
  }

  public Watermarks size(BigDecimal size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public BigDecimal getSize() {
    return size;
  }

  public void setSize(BigDecimal size) {
    this.size = size;
  }

  public Watermarks uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public Watermarks width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @Schema(description = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Watermarks watermarks = (Watermarks) o;
    return Objects.equals(this.created, watermarks.created) &&
        Objects.equals(this.downloadedFrom, watermarks.downloadedFrom) &&
        Objects.equals(this.height, watermarks.height) &&
        Objects.equals(this.name, watermarks.name) &&
        Objects.equals(this.opacity, watermarks.opacity) &&
        Objects.equals(this.padding, watermarks.padding) &&
        Objects.equals(this.position, watermarks.position) &&
        Objects.equals(this.scale, watermarks.scale) &&
        Objects.equals(this.size, watermarks.size) &&
        Objects.equals(this.uid, watermarks.uid) &&
        Objects.equals(this.width, watermarks.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, downloadedFrom, height, name, opacity, padding, position, scale, size, uid, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Watermarks {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    downloadedFrom: ").append(toIndentedString(downloadedFrom)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    opacity: ").append(toIndentedString(opacity)).append("\n");
    sb.append("    padding: ").append(toIndentedString(padding)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
