/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CatchallActions;
import io.swagger.client.model.CatchallMatchers;
import io.swagger.client.model.RulesComponentsSchemasEnabled;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CatchAllRuleResponseSingle
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class CatchAllRuleResponseSingle {
  @SerializedName("actions")
  private CatchallActions actions = null;

  @SerializedName("enabled")
  private RulesComponentsSchemasEnabled enabled = null;

  @SerializedName("matchers")
  private CatchallMatchers matchers = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("tag")
  private String tag = null;

  public CatchAllRuleResponseSingle actions(CatchallActions actions) {
    this.actions = actions;
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @Schema(description = "")
  public CatchallActions getActions() {
    return actions;
  }

  public void setActions(CatchallActions actions) {
    this.actions = actions;
  }

  public CatchAllRuleResponseSingle enabled(RulesComponentsSchemasEnabled enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public RulesComponentsSchemasEnabled getEnabled() {
    return enabled;
  }

  public void setEnabled(RulesComponentsSchemasEnabled enabled) {
    this.enabled = enabled;
  }

  public CatchAllRuleResponseSingle matchers(CatchallMatchers matchers) {
    this.matchers = matchers;
    return this;
  }

   /**
   * Get matchers
   * @return matchers
  **/
  @Schema(description = "")
  public CatchallMatchers getMatchers() {
    return matchers;
  }

  public void setMatchers(CatchallMatchers matchers) {
    this.matchers = matchers;
  }

  public CatchAllRuleResponseSingle name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CatchAllRuleResponseSingle tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatchAllRuleResponseSingle catchAllRuleResponseSingle = (CatchAllRuleResponseSingle) o;
    return Objects.equals(this.actions, catchAllRuleResponseSingle.actions) &&
        Objects.equals(this.enabled, catchAllRuleResponseSingle.enabled) &&
        Objects.equals(this.matchers, catchAllRuleResponseSingle.matchers) &&
        Objects.equals(this.name, catchAllRuleResponseSingle.name) &&
        Objects.equals(this.tag, catchAllRuleResponseSingle.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actions, enabled, matchers, name, tag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatchAllRuleResponseSingle {\n");
    
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    matchers: ").append(toIndentedString(matchers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
