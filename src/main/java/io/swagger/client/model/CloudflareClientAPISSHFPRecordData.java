/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Components of a SSHFP record.
 */
@Schema(description = "Components of a SSHFP record.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class CloudflareClientAPISSHFPRecordData {
  @SerializedName("algorithm")
  private BigDecimal algorithm = null;

  @SerializedName("fingerprint")
  private String fingerprint = null;

  @SerializedName("type")
  private BigDecimal type = null;

  public CloudflareClientAPISSHFPRecordData algorithm(BigDecimal algorithm) {
    this.algorithm = algorithm;
    return this;
  }

   /**
   * algorithm.
   * minimum: 0
   * maximum: 255
   * @return algorithm
  **/
  @Schema(example = "2", description = "algorithm.")
  public BigDecimal getAlgorithm() {
    return algorithm;
  }

  public void setAlgorithm(BigDecimal algorithm) {
    this.algorithm = algorithm;
  }

  public CloudflareClientAPISSHFPRecordData fingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

   /**
   * fingerprint.
   * @return fingerprint
  **/
  @Schema(description = "fingerprint.")
  public String getFingerprint() {
    return fingerprint;
  }

  public void setFingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
  }

  public CloudflareClientAPISSHFPRecordData type(BigDecimal type) {
    this.type = type;
    return this;
  }

   /**
   * type.
   * minimum: 0
   * maximum: 255
   * @return type
  **/
  @Schema(example = "1", description = "type.")
  public BigDecimal getType() {
    return type;
  }

  public void setType(BigDecimal type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudflareClientAPISSHFPRecordData cloudflareClientAPISSHFPRecordData = (CloudflareClientAPISSHFPRecordData) o;
    return Objects.equals(this.algorithm, cloudflareClientAPISSHFPRecordData.algorithm) &&
        Objects.equals(this.fingerprint, cloudflareClientAPISSHFPRecordData.fingerprint) &&
        Objects.equals(this.type, cloudflareClientAPISSHFPRecordData.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(algorithm, fingerprint, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudflareClientAPISSHFPRecordData {\n");
    
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    fingerprint: ").append(toIndentedString(fingerprint)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
