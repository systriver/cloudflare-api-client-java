/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Analytics
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Analytics {
  @SerializedName("id")
  private Integer id = 1;

  @SerializedName("origins")
  private List<Object> origins = null;

  @SerializedName("pool")
  private Object pool = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  public Analytics id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Analytics origins(List<Object> origins) {
    this.origins = origins;
    return this;
  }

  public Analytics addOriginsItem(Object originsItem) {
    if (this.origins == null) {
      this.origins = new ArrayList<Object>();
    }
    this.origins.add(originsItem);
    return this;
  }

   /**
   * Get origins
   * @return origins
  **/
  @Schema(example = "[{\"address\":\"198.51.100.4\",\"changed\":true,\"enabled\":true,\"failure_reason\":\"No failures\",\"healthy\":true,\"ip\":\"198.51.100.4\",\"name\":\"some-origin\"}]", description = "")
  public List<Object> getOrigins() {
    return origins;
  }

  public void setOrigins(List<Object> origins) {
    this.origins = origins;
  }

  public Analytics pool(Object pool) {
    this.pool = pool;
    return this;
  }

   /**
   * Get pool
   * @return pool
  **/
  @Schema(example = "{\"changed\":true,\"healthy\":true,\"id\":\"74bc6a8b9b0dda3d651707a2928bad0c\",\"minimum_origins\":1,\"name\":\"some-pool\"}", description = "")
  public Object getPool() {
    return pool;
  }

  public void setPool(Object pool) {
    this.pool = pool;
  }

  public Analytics timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(example = "2014-01-01T05:20:00.123450Z", description = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Analytics analytics = (Analytics) o;
    return Objects.equals(this.id, analytics.id) &&
        Objects.equals(this.origins, analytics.origins) &&
        Objects.equals(this.pool, analytics.pool) &&
        Objects.equals(this.timestamp, analytics.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, origins, pool, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Analytics {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    origins: ").append(toIndentedString(origins)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
