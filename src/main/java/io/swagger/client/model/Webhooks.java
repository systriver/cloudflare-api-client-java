/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.WebhooksComponentsSchemasType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Webhooks
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Webhooks {
  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("last_failure")
  private OffsetDateTime lastFailure = null;

  @SerializedName("last_success")
  private OffsetDateTime lastSuccess = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("secret")
  private String secret = null;

  @SerializedName("type")
  private WebhooksComponentsSchemasType type = null;

  @SerializedName("url")
  private String url = null;

  public Webhooks createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Webhooks id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Webhooks lastFailure(OffsetDateTime lastFailure) {
    this.lastFailure = lastFailure;
    return this;
  }

   /**
   * Get lastFailure
   * @return lastFailure
  **/
  @Schema(description = "")
  public OffsetDateTime getLastFailure() {
    return lastFailure;
  }

  public void setLastFailure(OffsetDateTime lastFailure) {
    this.lastFailure = lastFailure;
  }

  public Webhooks lastSuccess(OffsetDateTime lastSuccess) {
    this.lastSuccess = lastSuccess;
    return this;
  }

   /**
   * Get lastSuccess
   * @return lastSuccess
  **/
  @Schema(description = "")
  public OffsetDateTime getLastSuccess() {
    return lastSuccess;
  }

  public void setLastSuccess(OffsetDateTime lastSuccess) {
    this.lastSuccess = lastSuccess;
  }

  public Webhooks name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Webhooks secret(String secret) {
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @Schema(description = "")
  public String getSecret() {
    return secret;
  }

  public void setSecret(String secret) {
    this.secret = secret;
  }

  public Webhooks type(WebhooksComponentsSchemasType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public WebhooksComponentsSchemasType getType() {
    return type;
  }

  public void setType(WebhooksComponentsSchemasType type) {
    this.type = type;
  }

  public Webhooks url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Webhooks webhooks = (Webhooks) o;
    return Objects.equals(this.createdAt, webhooks.createdAt) &&
        Objects.equals(this.id, webhooks.id) &&
        Objects.equals(this.lastFailure, webhooks.lastFailure) &&
        Objects.equals(this.lastSuccess, webhooks.lastSuccess) &&
        Objects.equals(this.name, webhooks.name) &&
        Objects.equals(this.secret, webhooks.secret) &&
        Objects.equals(this.type, webhooks.type) &&
        Objects.equals(this.url, webhooks.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, id, lastFailure, lastSuccess, name, secret, type, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Webhooks {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastFailure: ").append(toIndentedString(lastFailure)).append("\n");
    sb.append("    lastSuccess: ").append(toIndentedString(lastSuccess)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
