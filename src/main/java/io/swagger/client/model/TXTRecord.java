/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Base;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * TXTRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class TXTRecord extends Base {
  @SerializedName("content")
  private String txTRecordContent = null;

  @SerializedName("name")
  private String txTRecordName = null;

  @SerializedName("type")
  private String txTRecordType = null;

  public TXTRecord txTRecordContent(String txTRecordContent) {
    this.txTRecordContent = txTRecordContent;
    return this;
  }

   /**
   * Text content for the record.
   * @return txTRecordContent
  **/
  @Schema(example = "example text content", required = true, description = "Text content for the record.")
  public String getTxTRecordContent() {
    return txTRecordContent;
  }

  public void setTxTRecordContent(String txTRecordContent) {
    this.txTRecordContent = txTRecordContent;
  }

  public TXTRecord txTRecordName(String txTRecordName) {
    this.txTRecordName = txTRecordName;
    return this;
  }

   /**
   * Get txTRecordName
   * @return txTRecordName
  **/
  @Schema(required = true, description = "")
  public String getTxTRecordName() {
    return txTRecordName;
  }

  public void setTxTRecordName(String txTRecordName) {
    this.txTRecordName = txTRecordName;
  }

  public TXTRecord txTRecordType(String txTRecordType) {
    this.txTRecordType = txTRecordType;
    return this;
  }

   /**
   * Record type.
   * @return txTRecordType
  **/
  @Schema(example = "TXT", required = true, description = "Record type.")
  public String getTxTRecordType() {
    return txTRecordType;
  }

  public void setTxTRecordType(String txTRecordType) {
    this.txTRecordType = txTRecordType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TXTRecord txTRecord = (TXTRecord) o;
    return Objects.equals(this.txTRecordContent, txTRecord.txTRecordContent) &&
        Objects.equals(this.txTRecordName, txTRecord.txTRecordName) &&
        Objects.equals(this.txTRecordType, txTRecord.txTRecordType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(txTRecordContent, txTRecordName, txTRecordType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TXTRecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    txTRecordContent: ").append(toIndentedString(txTRecordContent)).append("\n");
    sb.append("    txTRecordName: ").append(toIndentedString(txTRecordName)).append("\n");
    sb.append("    txTRecordType: ").append(toIndentedString(txTRecordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
