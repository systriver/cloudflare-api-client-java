/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ComponentsSchemasTarget;
import io.swagger.client.model.Web3HostnameComponentsSchemasStatus;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Web3Hostname
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Web3Hostname {
  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dnslink")
  private String dnslink = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("modified_on")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private Web3HostnameComponentsSchemasStatus status = null;

  @SerializedName("target")
  private ComponentsSchemasTarget target = null;

  public Web3Hostname createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public Web3Hostname description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Web3Hostname dnslink(String dnslink) {
    this.dnslink = dnslink;
    return this;
  }

   /**
   * Get dnslink
   * @return dnslink
  **/
  @Schema(description = "")
  public String getDnslink() {
    return dnslink;
  }

  public void setDnslink(String dnslink) {
    this.dnslink = dnslink;
  }

  public Web3Hostname id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Web3Hostname modifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public Web3Hostname name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Web3Hostname status(Web3HostnameComponentsSchemasStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Web3HostnameComponentsSchemasStatus getStatus() {
    return status;
  }

  public void setStatus(Web3HostnameComponentsSchemasStatus status) {
    this.status = status;
  }

  public Web3Hostname target(ComponentsSchemasTarget target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @Schema(description = "")
  public ComponentsSchemasTarget getTarget() {
    return target;
  }

  public void setTarget(ComponentsSchemasTarget target) {
    this.target = target;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Web3Hostname web3Hostname = (Web3Hostname) o;
    return Objects.equals(this.createdOn, web3Hostname.createdOn) &&
        Objects.equals(this.description, web3Hostname.description) &&
        Objects.equals(this.dnslink, web3Hostname.dnslink) &&
        Objects.equals(this.id, web3Hostname.id) &&
        Objects.equals(this.modifiedOn, web3Hostname.modifiedOn) &&
        Objects.equals(this.name, web3Hostname.name) &&
        Objects.equals(this.status, web3Hostname.status) &&
        Objects.equals(this.target, web3Hostname.target);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdOn, description, dnslink, id, modifiedOn, name, status, target);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Web3Hostname {\n");
    
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dnslink: ").append(toIndentedString(dnslink)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
