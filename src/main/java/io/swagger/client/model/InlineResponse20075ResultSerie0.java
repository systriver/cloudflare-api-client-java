/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse20075ResultSerie0
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T13:40:27.702461541+09:00[Asia/Tokyo]")
public class InlineResponse20075ResultSerie0 {
  @SerializedName("http")
  private List<String> http = new ArrayList<String>();

  @SerializedName("https")
  private List<String> https = new ArrayList<String>();

  @SerializedName("timestamps")
  private List<String> timestamps = new ArrayList<String>();

  public InlineResponse20075ResultSerie0 http(List<String> http) {
    this.http = http;
    return this;
  }

  public InlineResponse20075ResultSerie0 addHttpItem(String httpItem) {
    this.http.add(httpItem);
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @Schema(required = true, description = "")
  public List<String> getHttp() {
    return http;
  }

  public void setHttp(List<String> http) {
    this.http = http;
  }

  public InlineResponse20075ResultSerie0 https(List<String> https) {
    this.https = https;
    return this;
  }

  public InlineResponse20075ResultSerie0 addHttpsItem(String httpsItem) {
    this.https.add(httpsItem);
    return this;
  }

   /**
   * Get https
   * @return https
  **/
  @Schema(required = true, description = "")
  public List<String> getHttps() {
    return https;
  }

  public void setHttps(List<String> https) {
    this.https = https;
  }

  public InlineResponse20075ResultSerie0 timestamps(List<String> timestamps) {
    this.timestamps = timestamps;
    return this;
  }

  public InlineResponse20075ResultSerie0 addTimestampsItem(String timestampsItem) {
    this.timestamps.add(timestampsItem);
    return this;
  }

   /**
   * Get timestamps
   * @return timestamps
  **/
  @Schema(required = true, description = "")
  public List<String> getTimestamps() {
    return timestamps;
  }

  public void setTimestamps(List<String> timestamps) {
    this.timestamps = timestamps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20075ResultSerie0 inlineResponse20075ResultSerie0 = (InlineResponse20075ResultSerie0) o;
    return Objects.equals(this.http, inlineResponse20075ResultSerie0.http) &&
        Objects.equals(this.https, inlineResponse20075ResultSerie0.https) &&
        Objects.equals(this.timestamps, inlineResponse20075ResultSerie0.timestamps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(http, https, timestamps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20075ResultSerie0 {\n");
    
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    https: ").append(toIndentedString(https)).append("\n");
    sb.append("    timestamps: ").append(toIndentedString(timestamps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
