/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Dns;
import io.swagger.client.model.EdgeIps;
import io.swagger.client.model.OriginDns;
import io.swagger.client.model.OriginPort;
import io.swagger.client.model.ProxyProtocol;
import io.swagger.client.model.Tls;
import io.swagger.client.model.TrafficType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * ResponseSingleOriginDnsResult
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class ResponseSingleOriginDnsResult {
  @SerializedName("argo_smart_routing")
  private Boolean argoSmartRouting = null;

  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("dns")
  private Dns dns = null;

  @SerializedName("edge_ips")
  private EdgeIps edgeIps = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("ip_firewall")
  private Boolean ipFirewall = null;

  @SerializedName("modified_on")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("origin_dns")
  private OriginDns originDns = null;

  @SerializedName("origin_port")
  private OriginPort originPort = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("proxy_protocol")
  private ProxyProtocol proxyProtocol = null;

  @SerializedName("tls")
  private Tls tls = null;

  @SerializedName("traffic_type")
  private TrafficType trafficType = null;

  public ResponseSingleOriginDnsResult argoSmartRouting(Boolean argoSmartRouting) {
    this.argoSmartRouting = argoSmartRouting;
    return this;
  }

   /**
   * Get argoSmartRouting
   * @return argoSmartRouting
  **/
  @Schema(description = "")
  public Boolean getArgoSmartRouting() {
    return argoSmartRouting;
  }

  public void setArgoSmartRouting(Boolean argoSmartRouting) {
    this.argoSmartRouting = argoSmartRouting;
  }

  public ResponseSingleOriginDnsResult createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public ResponseSingleOriginDnsResult dns(Dns dns) {
    this.dns = dns;
    return this;
  }

   /**
   * Get dns
   * @return dns
  **/
  @Schema(description = "")
  public Dns getDns() {
    return dns;
  }

  public void setDns(Dns dns) {
    this.dns = dns;
  }

  public ResponseSingleOriginDnsResult edgeIps(EdgeIps edgeIps) {
    this.edgeIps = edgeIps;
    return this;
  }

   /**
   * Get edgeIps
   * @return edgeIps
  **/
  @Schema(description = "")
  public EdgeIps getEdgeIps() {
    return edgeIps;
  }

  public void setEdgeIps(EdgeIps edgeIps) {
    this.edgeIps = edgeIps;
  }

  public ResponseSingleOriginDnsResult id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ResponseSingleOriginDnsResult ipFirewall(Boolean ipFirewall) {
    this.ipFirewall = ipFirewall;
    return this;
  }

   /**
   * Get ipFirewall
   * @return ipFirewall
  **/
  @Schema(description = "")
  public Boolean getIpFirewall() {
    return ipFirewall;
  }

  public void setIpFirewall(Boolean ipFirewall) {
    this.ipFirewall = ipFirewall;
  }

  public ResponseSingleOriginDnsResult modifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public ResponseSingleOriginDnsResult originDns(OriginDns originDns) {
    this.originDns = originDns;
    return this;
  }

   /**
   * Get originDns
   * @return originDns
  **/
  @Schema(description = "")
  public OriginDns getOriginDns() {
    return originDns;
  }

  public void setOriginDns(OriginDns originDns) {
    this.originDns = originDns;
  }

  public ResponseSingleOriginDnsResult originPort(OriginPort originPort) {
    this.originPort = originPort;
    return this;
  }

   /**
   * Get originPort
   * @return originPort
  **/
  @Schema(description = "")
  public OriginPort getOriginPort() {
    return originPort;
  }

  public void setOriginPort(OriginPort originPort) {
    this.originPort = originPort;
  }

  public ResponseSingleOriginDnsResult protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public ResponseSingleOriginDnsResult proxyProtocol(ProxyProtocol proxyProtocol) {
    this.proxyProtocol = proxyProtocol;
    return this;
  }

   /**
   * Get proxyProtocol
   * @return proxyProtocol
  **/
  @Schema(description = "")
  public ProxyProtocol getProxyProtocol() {
    return proxyProtocol;
  }

  public void setProxyProtocol(ProxyProtocol proxyProtocol) {
    this.proxyProtocol = proxyProtocol;
  }

  public ResponseSingleOriginDnsResult tls(Tls tls) {
    this.tls = tls;
    return this;
  }

   /**
   * Get tls
   * @return tls
  **/
  @Schema(description = "")
  public Tls getTls() {
    return tls;
  }

  public void setTls(Tls tls) {
    this.tls = tls;
  }

  public ResponseSingleOriginDnsResult trafficType(TrafficType trafficType) {
    this.trafficType = trafficType;
    return this;
  }

   /**
   * Get trafficType
   * @return trafficType
  **/
  @Schema(description = "")
  public TrafficType getTrafficType() {
    return trafficType;
  }

  public void setTrafficType(TrafficType trafficType) {
    this.trafficType = trafficType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseSingleOriginDnsResult responseSingleOriginDnsResult = (ResponseSingleOriginDnsResult) o;
    return Objects.equals(this.argoSmartRouting, responseSingleOriginDnsResult.argoSmartRouting) &&
        Objects.equals(this.createdOn, responseSingleOriginDnsResult.createdOn) &&
        Objects.equals(this.dns, responseSingleOriginDnsResult.dns) &&
        Objects.equals(this.edgeIps, responseSingleOriginDnsResult.edgeIps) &&
        Objects.equals(this.id, responseSingleOriginDnsResult.id) &&
        Objects.equals(this.ipFirewall, responseSingleOriginDnsResult.ipFirewall) &&
        Objects.equals(this.modifiedOn, responseSingleOriginDnsResult.modifiedOn) &&
        Objects.equals(this.originDns, responseSingleOriginDnsResult.originDns) &&
        Objects.equals(this.originPort, responseSingleOriginDnsResult.originPort) &&
        Objects.equals(this.protocol, responseSingleOriginDnsResult.protocol) &&
        Objects.equals(this.proxyProtocol, responseSingleOriginDnsResult.proxyProtocol) &&
        Objects.equals(this.tls, responseSingleOriginDnsResult.tls) &&
        Objects.equals(this.trafficType, responseSingleOriginDnsResult.trafficType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(argoSmartRouting, createdOn, dns, edgeIps, id, ipFirewall, modifiedOn, originDns, originPort, protocol, proxyProtocol, tls, trafficType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseSingleOriginDnsResult {\n");
    
    sb.append("    argoSmartRouting: ").append(toIndentedString(argoSmartRouting)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    dns: ").append(toIndentedString(dns)).append("\n");
    sb.append("    edgeIps: ").append(toIndentedString(edgeIps)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipFirewall: ").append(toIndentedString(ipFirewall)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    originDns: ").append(toIndentedString(originDns)).append("\n");
    sb.append("    originPort: ").append(toIndentedString(originPort)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    proxyProtocol: ").append(toIndentedString(proxyProtocol)).append("\n");
    sb.append("    tls: ").append(toIndentedString(tls)).append("\n");
    sb.append("    trafficType: ").append(toIndentedString(trafficType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
