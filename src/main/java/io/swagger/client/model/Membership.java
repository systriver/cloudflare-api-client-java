/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Roles;
import io.swagger.client.model.SchemasAccount;
import io.swagger.client.model.SchemasStatus;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Membership
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Membership {
  @SerializedName("account")
  private SchemasAccount account = null;

  @SerializedName("api_access_enabled")
  private Boolean apiAccessEnabled = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("permissions")
  private AllOfmembershipPermissions permissions = null;

  @SerializedName("roles")
  private Roles roles = null;

  @SerializedName("status")
  private SchemasStatus status = null;

  public Membership account(SchemasAccount account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @Schema(description = "")
  public SchemasAccount getAccount() {
    return account;
  }

  public void setAccount(SchemasAccount account) {
    this.account = account;
  }

  public Membership apiAccessEnabled(Boolean apiAccessEnabled) {
    this.apiAccessEnabled = apiAccessEnabled;
    return this;
  }

   /**
   * Get apiAccessEnabled
   * @return apiAccessEnabled
  **/
  @Schema(description = "")
  public Boolean getApiAccessEnabled() {
    return apiAccessEnabled;
  }

  public void setApiAccessEnabled(Boolean apiAccessEnabled) {
    this.apiAccessEnabled = apiAccessEnabled;
  }

  public Membership code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Membership id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * All access permissions for the user at the account.
   * @return permissions
  **/
  @Schema(description = "All access permissions for the user at the account.")
  public AllOfmembershipPermissions getPermissions() {
    return permissions;
  }

  public Membership roles(Roles roles) {
    this.roles = roles;
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @Schema(description = "")
  public Roles getRoles() {
    return roles;
  }

  public void setRoles(Roles roles) {
    this.roles = roles;
  }

  public Membership status(SchemasStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public SchemasStatus getStatus() {
    return status;
  }

  public void setStatus(SchemasStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Membership membership = (Membership) o;
    return Objects.equals(this.account, membership.account) &&
        Objects.equals(this.apiAccessEnabled, membership.apiAccessEnabled) &&
        Objects.equals(this.code, membership.code) &&
        Objects.equals(this.id, membership.id) &&
        Objects.equals(this.permissions, membership.permissions) &&
        Objects.equals(this.roles, membership.roles) &&
        Objects.equals(this.status, membership.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, apiAccessEnabled, code, id, permissions, roles, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Membership {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    apiAccessEnabled: ").append(toIndentedString(apiAccessEnabled)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
