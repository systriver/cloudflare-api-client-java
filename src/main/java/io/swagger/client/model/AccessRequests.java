/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AppUid;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * AccessRequests
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class AccessRequests {
  @SerializedName("action")
  private String action = null;

  @SerializedName("allowed")
  private Boolean allowed = null;

  @SerializedName("app_domain")
  private String appDomain = null;

  @SerializedName("app_uid")
  private AppUid appUid = null;

  @SerializedName("connection")
  private String connection = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("ip_address")
  private String ipAddress = null;

  @SerializedName("ray_id")
  private String rayId = null;

  @SerializedName("user_email")
  private String userEmail = null;

  public AccessRequests action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public AccessRequests allowed(Boolean allowed) {
    this.allowed = allowed;
    return this;
  }

   /**
   * Get allowed
   * @return allowed
  **/
  @Schema(description = "")
  public Boolean getAllowed() {
    return allowed;
  }

  public void setAllowed(Boolean allowed) {
    this.allowed = allowed;
  }

  public AccessRequests appDomain(String appDomain) {
    this.appDomain = appDomain;
    return this;
  }

   /**
   * Get appDomain
   * @return appDomain
  **/
  @Schema(description = "")
  public String getAppDomain() {
    return appDomain;
  }

  public void setAppDomain(String appDomain) {
    this.appDomain = appDomain;
  }

  public AccessRequests appUid(AppUid appUid) {
    this.appUid = appUid;
    return this;
  }

   /**
   * Get appUid
   * @return appUid
  **/
  @Schema(description = "")
  public AppUid getAppUid() {
    return appUid;
  }

  public void setAppUid(AppUid appUid) {
    this.appUid = appUid;
  }

  public AccessRequests connection(String connection) {
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @Schema(description = "")
  public String getConnection() {
    return connection;
  }

  public void setConnection(String connection) {
    this.connection = connection;
  }

  public AccessRequests createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public AccessRequests ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @Schema(description = "")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public AccessRequests rayId(String rayId) {
    this.rayId = rayId;
    return this;
  }

   /**
   * Get rayId
   * @return rayId
  **/
  @Schema(description = "")
  public String getRayId() {
    return rayId;
  }

  public void setRayId(String rayId) {
    this.rayId = rayId;
  }

  public AccessRequests userEmail(String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

   /**
   * Get userEmail
   * @return userEmail
  **/
  @Schema(description = "")
  public String getUserEmail() {
    return userEmail;
  }

  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessRequests accessRequests = (AccessRequests) o;
    return Objects.equals(this.action, accessRequests.action) &&
        Objects.equals(this.allowed, accessRequests.allowed) &&
        Objects.equals(this.appDomain, accessRequests.appDomain) &&
        Objects.equals(this.appUid, accessRequests.appUid) &&
        Objects.equals(this.connection, accessRequests.connection) &&
        Objects.equals(this.createdAt, accessRequests.createdAt) &&
        Objects.equals(this.ipAddress, accessRequests.ipAddress) &&
        Objects.equals(this.rayId, accessRequests.rayId) &&
        Objects.equals(this.userEmail, accessRequests.userEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, allowed, appDomain, appUid, connection, createdAt, ipAddress, rayId, userEmail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessRequests {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    allowed: ").append(toIndentedString(allowed)).append("\n");
    sb.append("    appDomain: ").append(toIndentedString(appDomain)).append("\n");
    sb.append("    appUid: ").append(toIndentedString(appUid)).append("\n");
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    rayId: ").append(toIndentedString(rayId)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
