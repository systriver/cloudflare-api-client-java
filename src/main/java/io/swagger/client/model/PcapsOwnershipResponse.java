/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PcapsOwnershipResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class PcapsOwnershipResponse {
  @SerializedName("destination_conf")
  private String destinationConf = null;

  @SerializedName("filename")
  private String filename = null;

  @SerializedName("id")
  private String id = null;

  /**
   * The status of the ownership challenge. Can be pending, success or failed.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("pending"),
    SUCCESS("success"),
    FAILED("failed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("submitted")
  private String submitted = null;

  @SerializedName("validated")
  private String validated = null;

  public PcapsOwnershipResponse destinationConf(String destinationConf) {
    this.destinationConf = destinationConf;
    return this;
  }

   /**
   * Get destinationConf
   * @return destinationConf
  **/
  @Schema(required = true, description = "")
  public String getDestinationConf() {
    return destinationConf;
  }

  public void setDestinationConf(String destinationConf) {
    this.destinationConf = destinationConf;
  }

  public PcapsOwnershipResponse filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * Get filename
   * @return filename
  **/
  @Schema(required = true, description = "")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public PcapsOwnershipResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The bucket ID associated with the packet captures API.
   * @return id
  **/
  @Schema(example = "9883874ecac311ec8475433579a6bf5f", required = true, description = "The bucket ID associated with the packet captures API.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PcapsOwnershipResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the ownership challenge. Can be pending, success or failed.
   * @return status
  **/
  @Schema(example = "success", required = true, description = "The status of the ownership challenge. Can be pending, success or failed.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PcapsOwnershipResponse submitted(String submitted) {
    this.submitted = submitted;
    return this;
  }

   /**
   * The RFC 3339 timestamp when the bucket was added to packet captures API.
   * @return submitted
  **/
  @Schema(example = "2020-01-01T08:00:00Z", required = true, description = "The RFC 3339 timestamp when the bucket was added to packet captures API.")
  public String getSubmitted() {
    return submitted;
  }

  public void setSubmitted(String submitted) {
    this.submitted = submitted;
  }

  public PcapsOwnershipResponse validated(String validated) {
    this.validated = validated;
    return this;
  }

   /**
   * The RFC 3339 timestamp when the bucket was validated.
   * @return validated
  **/
  @Schema(example = "2020-01-01T08:00:00Z", description = "The RFC 3339 timestamp when the bucket was validated.")
  public String getValidated() {
    return validated;
  }

  public void setValidated(String validated) {
    this.validated = validated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PcapsOwnershipResponse pcapsOwnershipResponse = (PcapsOwnershipResponse) o;
    return Objects.equals(this.destinationConf, pcapsOwnershipResponse.destinationConf) &&
        Objects.equals(this.filename, pcapsOwnershipResponse.filename) &&
        Objects.equals(this.id, pcapsOwnershipResponse.id) &&
        Objects.equals(this.status, pcapsOwnershipResponse.status) &&
        Objects.equals(this.submitted, pcapsOwnershipResponse.submitted) &&
        Objects.equals(this.validated, pcapsOwnershipResponse.validated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationConf, filename, id, status, submitted, validated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PcapsOwnershipResponse {\n");
    
    sb.append("    destinationConf: ").append(toIndentedString(destinationConf)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    submitted: ").append(toIndentedString(submitted)).append("\n");
    sb.append("    validated: ").append(toIndentedString(validated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
