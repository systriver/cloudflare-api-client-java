/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Base;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.CloudflareClientAPIURIRecordData;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * URIRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class URIRecord extends Base {
  @SerializedName("content")
  private String urIRecordContent = null;

  @SerializedName("data")
  private CloudflareClientAPIURIRecordData urIRecordData = null;

  @SerializedName("name")
  private String urIRecordName = null;

  @SerializedName("priority")
  private BigDecimal priority = null;

  @SerializedName("type")
  private String urIRecordType = null;

   /**
   * Formatted URI content. See &#x27;data&#x27; to set URI properties.
   * @return urIRecordContent
  **/
  @Schema(description = "Formatted URI content. See 'data' to set URI properties.")
  public String getUrIRecordContent() {
    return urIRecordContent;
  }

  public URIRecord urIRecordData(CloudflareClientAPIURIRecordData urIRecordData) {
    this.urIRecordData = urIRecordData;
    return this;
  }

   /**
   * Get urIRecordData
   * @return urIRecordData
  **/
  @Schema(required = true, description = "")
  public CloudflareClientAPIURIRecordData getUrIRecordData() {
    return urIRecordData;
  }

  public void setUrIRecordData(CloudflareClientAPIURIRecordData urIRecordData) {
    this.urIRecordData = urIRecordData;
  }

  public URIRecord urIRecordName(String urIRecordName) {
    this.urIRecordName = urIRecordName;
    return this;
  }

   /**
   * Get urIRecordName
   * @return urIRecordName
  **/
  @Schema(required = true, description = "")
  public String getUrIRecordName() {
    return urIRecordName;
  }

  public void setUrIRecordName(String urIRecordName) {
    this.urIRecordName = urIRecordName;
  }

  public URIRecord priority(BigDecimal priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(required = true, description = "")
  public BigDecimal getPriority() {
    return priority;
  }

  public void setPriority(BigDecimal priority) {
    this.priority = priority;
  }

  public URIRecord urIRecordType(String urIRecordType) {
    this.urIRecordType = urIRecordType;
    return this;
  }

   /**
   * Record type.
   * @return urIRecordType
  **/
  @Schema(example = "URI", required = true, description = "Record type.")
  public String getUrIRecordType() {
    return urIRecordType;
  }

  public void setUrIRecordType(String urIRecordType) {
    this.urIRecordType = urIRecordType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    URIRecord urIRecord = (URIRecord) o;
    return Objects.equals(this.urIRecordContent, urIRecord.urIRecordContent) &&
        Objects.equals(this.urIRecordData, urIRecord.urIRecordData) &&
        Objects.equals(this.urIRecordName, urIRecord.urIRecordName) &&
        Objects.equals(this.priority, urIRecord.priority) &&
        Objects.equals(this.urIRecordType, urIRecord.urIRecordType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(urIRecordContent, urIRecordData, urIRecordName, priority, urIRecordType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class URIRecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    urIRecordContent: ").append(toIndentedString(urIRecordContent)).append("\n");
    sb.append("    urIRecordData: ").append(toIndentedString(urIRecordData)).append("\n");
    sb.append("    urIRecordName: ").append(toIndentedString(urIRecordName)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    urIRecordType: ").append(toIndentedString(urIRecordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
