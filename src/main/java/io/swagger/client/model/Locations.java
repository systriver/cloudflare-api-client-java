/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LocationsComponentsSchemasUuid;
import io.swagger.client.model.Network;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Locations
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Locations {
  @SerializedName("client_default")
  private Boolean clientDefault = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("doh_subdomain")
  private String dohSubdomain = null;

  @SerializedName("ecs_support")
  private Boolean ecsSupport = null;

  @SerializedName("id")
  private LocationsComponentsSchemasUuid id = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("networks")
  private Network networks = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  public Locations clientDefault(Boolean clientDefault) {
    this.clientDefault = clientDefault;
    return this;
  }

   /**
   * Get clientDefault
   * @return clientDefault
  **/
  @Schema(description = "")
  public Boolean getClientDefault() {
    return clientDefault;
  }

  public void setClientDefault(Boolean clientDefault) {
    this.clientDefault = clientDefault;
  }

  public Locations createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Locations dohSubdomain(String dohSubdomain) {
    this.dohSubdomain = dohSubdomain;
    return this;
  }

   /**
   * Get dohSubdomain
   * @return dohSubdomain
  **/
  @Schema(description = "")
  public String getDohSubdomain() {
    return dohSubdomain;
  }

  public void setDohSubdomain(String dohSubdomain) {
    this.dohSubdomain = dohSubdomain;
  }

  public Locations ecsSupport(Boolean ecsSupport) {
    this.ecsSupport = ecsSupport;
    return this;
  }

   /**
   * Get ecsSupport
   * @return ecsSupport
  **/
  @Schema(description = "")
  public Boolean getEcsSupport() {
    return ecsSupport;
  }

  public void setEcsSupport(Boolean ecsSupport) {
    this.ecsSupport = ecsSupport;
  }

  public Locations id(LocationsComponentsSchemasUuid id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public LocationsComponentsSchemasUuid getId() {
    return id;
  }

  public void setId(LocationsComponentsSchemasUuid id) {
    this.id = id;
  }

  public Locations ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public Locations name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Locations networks(Network networks) {
    this.networks = networks;
    return this;
  }

   /**
   * Get networks
   * @return networks
  **/
  @Schema(description = "")
  public Network getNetworks() {
    return networks;
  }

  public void setNetworks(Network networks) {
    this.networks = networks;
  }

  public Locations updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Locations locations = (Locations) o;
    return Objects.equals(this.clientDefault, locations.clientDefault) &&
        Objects.equals(this.createdAt, locations.createdAt) &&
        Objects.equals(this.dohSubdomain, locations.dohSubdomain) &&
        Objects.equals(this.ecsSupport, locations.ecsSupport) &&
        Objects.equals(this.id, locations.id) &&
        Objects.equals(this.ip, locations.ip) &&
        Objects.equals(this.name, locations.name) &&
        Objects.equals(this.networks, locations.networks) &&
        Objects.equals(this.updatedAt, locations.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientDefault, createdAt, dohSubdomain, ecsSupport, id, ip, name, networks, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Locations {\n");
    
    sb.append("    clientDefault: ").append(toIndentedString(clientDefault)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    dohSubdomain: ").append(toIndentedString(dohSubdomain)).append("\n");
    sb.append("    ecsSupport: ").append(toIndentedString(ecsSupport)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
