/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CustomEntry;
import io.swagger.client.model.ProfileId;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * CustomProfile
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class CustomProfile implements Profiles {
  @SerializedName("allowed_match_count")
  private BigDecimal allowedMatchCount = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("entries")
  private List<CustomEntry> entries = null;

  @SerializedName("id")
  private ProfileId id = null;

  @SerializedName("name")
  private String name = null;

  /**
   * The type of the profile.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CUSTOM("custom");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  public CustomProfile allowedMatchCount(BigDecimal allowedMatchCount) {
    this.allowedMatchCount = allowedMatchCount;
    return this;
  }

   /**
   * Get allowedMatchCount
   * @return allowedMatchCount
  **/
  @Schema(description = "")
  public BigDecimal getAllowedMatchCount() {
    return allowedMatchCount;
  }

  public void setAllowedMatchCount(BigDecimal allowedMatchCount) {
    this.allowedMatchCount = allowedMatchCount;
  }

  public CustomProfile createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CustomProfile description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the profile.
   * @return description
  **/
  @Schema(example = "A standard CVV card number", description = "The description of the profile.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CustomProfile entries(List<CustomEntry> entries) {
    this.entries = entries;
    return this;
  }

  public CustomProfile addEntriesItem(CustomEntry entriesItem) {
    if (this.entries == null) {
      this.entries = new ArrayList<CustomEntry>();
    }
    this.entries.add(entriesItem);
    return this;
  }

   /**
   * The entries for this profile.
   * @return entries
  **/
  @Schema(description = "The entries for this profile.")
  public List<CustomEntry> getEntries() {
    return entries;
  }

  public void setEntries(List<CustomEntry> entries) {
    this.entries = entries;
  }

  public CustomProfile id(ProfileId id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public ProfileId getId() {
    return id;
  }

  public void setId(ProfileId id) {
    this.id = id;
  }

  public CustomProfile name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the profile.
   * @return name
  **/
  @Schema(example = "Generic CVV Card Number", description = "The name of the profile.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CustomProfile type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the profile.
   * @return type
  **/
  @Schema(example = "custom", description = "The type of the profile.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CustomProfile updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomProfile customProfile = (CustomProfile) o;
    return Objects.equals(this.allowedMatchCount, customProfile.allowedMatchCount) &&
        Objects.equals(this.createdAt, customProfile.createdAt) &&
        Objects.equals(this.description, customProfile.description) &&
        Objects.equals(this.entries, customProfile.entries) &&
        Objects.equals(this.id, customProfile.id) &&
        Objects.equals(this.name, customProfile.name) &&
        Objects.equals(this.type, customProfile.type) &&
        Objects.equals(this.updatedAt, customProfile.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedMatchCount, createdAt, description, entries, id, name, type, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomProfile {\n");
    
    sb.append("    allowedMatchCount: ").append(toIndentedString(allowedMatchCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
