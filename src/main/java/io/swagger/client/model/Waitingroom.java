/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CookieAttributes;
import io.swagger.client.model.DefaultTemplateLanguage;
import io.swagger.client.model.QueueingMethod;
import io.swagger.client.model.WaitingRoomId;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Waitingroom
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Waitingroom {
  @SerializedName("cookie_attributes")
  private CookieAttributes cookieAttributes = null;

  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("custom_page_html")
  private String customPageHtml = null;

  @SerializedName("default_template_language")
  private DefaultTemplateLanguage defaultTemplateLanguage = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("disable_session_renewal")
  private Boolean disableSessionRenewal = null;

  @SerializedName("host")
  private String host = null;

  @SerializedName("id")
  private WaitingRoomId id = null;

  @SerializedName("json_response_enabled")
  private Boolean jsonResponseEnabled = null;

  @SerializedName("modified_on")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("new_users_per_minute")
  private Integer newUsersPerMinute = null;

  @SerializedName("next_event_prequeue_start_time")
  private String nextEventPrequeueStartTime = null;

  @SerializedName("next_event_start_time")
  private String nextEventStartTime = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("queue_all")
  private Boolean queueAll = null;

  @SerializedName("queueing_method")
  private QueueingMethod queueingMethod = null;

  @SerializedName("session_duration")
  private Integer sessionDuration = null;

  @SerializedName("suspended")
  private Boolean suspended = null;

  @SerializedName("total_active_users")
  private Integer totalActiveUsers = null;

  public Waitingroom cookieAttributes(CookieAttributes cookieAttributes) {
    this.cookieAttributes = cookieAttributes;
    return this;
  }

   /**
   * Get cookieAttributes
   * @return cookieAttributes
  **/
  @Schema(description = "")
  public CookieAttributes getCookieAttributes() {
    return cookieAttributes;
  }

  public void setCookieAttributes(CookieAttributes cookieAttributes) {
    this.cookieAttributes = cookieAttributes;
  }

  public Waitingroom createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public Waitingroom customPageHtml(String customPageHtml) {
    this.customPageHtml = customPageHtml;
    return this;
  }

   /**
   * Get customPageHtml
   * @return customPageHtml
  **/
  @Schema(description = "")
  public String getCustomPageHtml() {
    return customPageHtml;
  }

  public void setCustomPageHtml(String customPageHtml) {
    this.customPageHtml = customPageHtml;
  }

  public Waitingroom defaultTemplateLanguage(DefaultTemplateLanguage defaultTemplateLanguage) {
    this.defaultTemplateLanguage = defaultTemplateLanguage;
    return this;
  }

   /**
   * Get defaultTemplateLanguage
   * @return defaultTemplateLanguage
  **/
  @Schema(description = "")
  public DefaultTemplateLanguage getDefaultTemplateLanguage() {
    return defaultTemplateLanguage;
  }

  public void setDefaultTemplateLanguage(DefaultTemplateLanguage defaultTemplateLanguage) {
    this.defaultTemplateLanguage = defaultTemplateLanguage;
  }

  public Waitingroom description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Waitingroom disableSessionRenewal(Boolean disableSessionRenewal) {
    this.disableSessionRenewal = disableSessionRenewal;
    return this;
  }

   /**
   * Get disableSessionRenewal
   * @return disableSessionRenewal
  **/
  @Schema(description = "")
  public Boolean getDisableSessionRenewal() {
    return disableSessionRenewal;
  }

  public void setDisableSessionRenewal(Boolean disableSessionRenewal) {
    this.disableSessionRenewal = disableSessionRenewal;
  }

  public Waitingroom host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public Waitingroom id(WaitingRoomId id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public WaitingRoomId getId() {
    return id;
  }

  public void setId(WaitingRoomId id) {
    this.id = id;
  }

  public Waitingroom jsonResponseEnabled(Boolean jsonResponseEnabled) {
    this.jsonResponseEnabled = jsonResponseEnabled;
    return this;
  }

   /**
   * Get jsonResponseEnabled
   * @return jsonResponseEnabled
  **/
  @Schema(description = "")
  public Boolean getJsonResponseEnabled() {
    return jsonResponseEnabled;
  }

  public void setJsonResponseEnabled(Boolean jsonResponseEnabled) {
    this.jsonResponseEnabled = jsonResponseEnabled;
  }

  public Waitingroom modifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public Waitingroom name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Waitingroom newUsersPerMinute(Integer newUsersPerMinute) {
    this.newUsersPerMinute = newUsersPerMinute;
    return this;
  }

   /**
   * Get newUsersPerMinute
   * @return newUsersPerMinute
  **/
  @Schema(description = "")
  public Integer getNewUsersPerMinute() {
    return newUsersPerMinute;
  }

  public void setNewUsersPerMinute(Integer newUsersPerMinute) {
    this.newUsersPerMinute = newUsersPerMinute;
  }

  public Waitingroom nextEventPrequeueStartTime(String nextEventPrequeueStartTime) {
    this.nextEventPrequeueStartTime = nextEventPrequeueStartTime;
    return this;
  }

   /**
   * Get nextEventPrequeueStartTime
   * @return nextEventPrequeueStartTime
  **/
  @Schema(description = "")
  public String getNextEventPrequeueStartTime() {
    return nextEventPrequeueStartTime;
  }

  public void setNextEventPrequeueStartTime(String nextEventPrequeueStartTime) {
    this.nextEventPrequeueStartTime = nextEventPrequeueStartTime;
  }

  public Waitingroom nextEventStartTime(String nextEventStartTime) {
    this.nextEventStartTime = nextEventStartTime;
    return this;
  }

   /**
   * Get nextEventStartTime
   * @return nextEventStartTime
  **/
  @Schema(description = "")
  public String getNextEventStartTime() {
    return nextEventStartTime;
  }

  public void setNextEventStartTime(String nextEventStartTime) {
    this.nextEventStartTime = nextEventStartTime;
  }

  public Waitingroom path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public Waitingroom queueAll(Boolean queueAll) {
    this.queueAll = queueAll;
    return this;
  }

   /**
   * Get queueAll
   * @return queueAll
  **/
  @Schema(description = "")
  public Boolean getQueueAll() {
    return queueAll;
  }

  public void setQueueAll(Boolean queueAll) {
    this.queueAll = queueAll;
  }

  public Waitingroom queueingMethod(QueueingMethod queueingMethod) {
    this.queueingMethod = queueingMethod;
    return this;
  }

   /**
   * Get queueingMethod
   * @return queueingMethod
  **/
  @Schema(description = "")
  public QueueingMethod getQueueingMethod() {
    return queueingMethod;
  }

  public void setQueueingMethod(QueueingMethod queueingMethod) {
    this.queueingMethod = queueingMethod;
  }

  public Waitingroom sessionDuration(Integer sessionDuration) {
    this.sessionDuration = sessionDuration;
    return this;
  }

   /**
   * Get sessionDuration
   * @return sessionDuration
  **/
  @Schema(description = "")
  public Integer getSessionDuration() {
    return sessionDuration;
  }

  public void setSessionDuration(Integer sessionDuration) {
    this.sessionDuration = sessionDuration;
  }

  public Waitingroom suspended(Boolean suspended) {
    this.suspended = suspended;
    return this;
  }

   /**
   * Get suspended
   * @return suspended
  **/
  @Schema(description = "")
  public Boolean getSuspended() {
    return suspended;
  }

  public void setSuspended(Boolean suspended) {
    this.suspended = suspended;
  }

  public Waitingroom totalActiveUsers(Integer totalActiveUsers) {
    this.totalActiveUsers = totalActiveUsers;
    return this;
  }

   /**
   * Get totalActiveUsers
   * @return totalActiveUsers
  **/
  @Schema(description = "")
  public Integer getTotalActiveUsers() {
    return totalActiveUsers;
  }

  public void setTotalActiveUsers(Integer totalActiveUsers) {
    this.totalActiveUsers = totalActiveUsers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Waitingroom waitingroom = (Waitingroom) o;
    return Objects.equals(this.cookieAttributes, waitingroom.cookieAttributes) &&
        Objects.equals(this.createdOn, waitingroom.createdOn) &&
        Objects.equals(this.customPageHtml, waitingroom.customPageHtml) &&
        Objects.equals(this.defaultTemplateLanguage, waitingroom.defaultTemplateLanguage) &&
        Objects.equals(this.description, waitingroom.description) &&
        Objects.equals(this.disableSessionRenewal, waitingroom.disableSessionRenewal) &&
        Objects.equals(this.host, waitingroom.host) &&
        Objects.equals(this.id, waitingroom.id) &&
        Objects.equals(this.jsonResponseEnabled, waitingroom.jsonResponseEnabled) &&
        Objects.equals(this.modifiedOn, waitingroom.modifiedOn) &&
        Objects.equals(this.name, waitingroom.name) &&
        Objects.equals(this.newUsersPerMinute, waitingroom.newUsersPerMinute) &&
        Objects.equals(this.nextEventPrequeueStartTime, waitingroom.nextEventPrequeueStartTime) &&
        Objects.equals(this.nextEventStartTime, waitingroom.nextEventStartTime) &&
        Objects.equals(this.path, waitingroom.path) &&
        Objects.equals(this.queueAll, waitingroom.queueAll) &&
        Objects.equals(this.queueingMethod, waitingroom.queueingMethod) &&
        Objects.equals(this.sessionDuration, waitingroom.sessionDuration) &&
        Objects.equals(this.suspended, waitingroom.suspended) &&
        Objects.equals(this.totalActiveUsers, waitingroom.totalActiveUsers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cookieAttributes, createdOn, customPageHtml, defaultTemplateLanguage, description, disableSessionRenewal, host, id, jsonResponseEnabled, modifiedOn, name, newUsersPerMinute, nextEventPrequeueStartTime, nextEventStartTime, path, queueAll, queueingMethod, sessionDuration, suspended, totalActiveUsers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Waitingroom {\n");
    
    sb.append("    cookieAttributes: ").append(toIndentedString(cookieAttributes)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    customPageHtml: ").append(toIndentedString(customPageHtml)).append("\n");
    sb.append("    defaultTemplateLanguage: ").append(toIndentedString(defaultTemplateLanguage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disableSessionRenewal: ").append(toIndentedString(disableSessionRenewal)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    jsonResponseEnabled: ").append(toIndentedString(jsonResponseEnabled)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newUsersPerMinute: ").append(toIndentedString(newUsersPerMinute)).append("\n");
    sb.append("    nextEventPrequeueStartTime: ").append(toIndentedString(nextEventPrequeueStartTime)).append("\n");
    sb.append("    nextEventStartTime: ").append(toIndentedString(nextEventStartTime)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    queueAll: ").append(toIndentedString(queueAll)).append("\n");
    sb.append("    queueingMethod: ").append(toIndentedString(queueingMethod)).append("\n");
    sb.append("    sessionDuration: ").append(toIndentedString(sessionDuration)).append("\n");
    sb.append("    suspended: ").append(toIndentedString(suspended)).append("\n");
    sb.append("    totalActiveUsers: ").append(toIndentedString(totalActiveUsers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
