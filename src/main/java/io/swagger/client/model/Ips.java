/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Ips
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Ips {
  @SerializedName("etag")
  private String etag = null;

  @SerializedName("ipv4_cidrs")
  private List<String> ipv4Cidrs = null;

  @SerializedName("ipv6_cidrs")
  private List<String> ipv6Cidrs = null;

  public Ips etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A digest of the IP data. Useful for determining if the data has changed.
   * @return etag
  **/
  @Schema(example = "a8e453d9d129a3769407127936edfdb0", description = "A digest of the IP data. Useful for determining if the data has changed.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }

  public Ips ipv4Cidrs(List<String> ipv4Cidrs) {
    this.ipv4Cidrs = ipv4Cidrs;
    return this;
  }

  public Ips addIpv4CidrsItem(String ipv4CidrsItem) {
    if (this.ipv4Cidrs == null) {
      this.ipv4Cidrs = new ArrayList<String>();
    }
    this.ipv4Cidrs.add(ipv4CidrsItem);
    return this;
  }

   /**
   * List of Cloudflare IPv4 CIDR addresses.
   * @return ipv4Cidrs
  **/
  @Schema(description = "List of Cloudflare IPv4 CIDR addresses.")
  public List<String> getIpv4Cidrs() {
    return ipv4Cidrs;
  }

  public void setIpv4Cidrs(List<String> ipv4Cidrs) {
    this.ipv4Cidrs = ipv4Cidrs;
  }

  public Ips ipv6Cidrs(List<String> ipv6Cidrs) {
    this.ipv6Cidrs = ipv6Cidrs;
    return this;
  }

  public Ips addIpv6CidrsItem(String ipv6CidrsItem) {
    if (this.ipv6Cidrs == null) {
      this.ipv6Cidrs = new ArrayList<String>();
    }
    this.ipv6Cidrs.add(ipv6CidrsItem);
    return this;
  }

   /**
   * List of Cloudflare IPv6 CIDR addresses.
   * @return ipv6Cidrs
  **/
  @Schema(description = "List of Cloudflare IPv6 CIDR addresses.")
  public List<String> getIpv6Cidrs() {
    return ipv6Cidrs;
  }

  public void setIpv6Cidrs(List<String> ipv6Cidrs) {
    this.ipv6Cidrs = ipv6Cidrs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ips ips = (Ips) o;
    return Objects.equals(this.etag, ips.etag) &&
        Objects.equals(this.ipv4Cidrs, ips.ipv4Cidrs) &&
        Objects.equals(this.ipv6Cidrs, ips.ipv6Cidrs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(etag, ipv4Cidrs, ipv6Cidrs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ips {\n");
    
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    ipv4Cidrs: ").append(toIndentedString(ipv4Cidrs)).append("\n");
    sb.append("    ipv6Cidrs: ").append(toIndentedString(ipv6Cidrs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
