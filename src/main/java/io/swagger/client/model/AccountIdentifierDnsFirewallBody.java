/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AttackMitigation;
import io.swagger.client.model.OriginIps;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * AccountIdentifierDnsFirewallBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class AccountIdentifierDnsFirewallBody {
  @SerializedName("attack_mitigation")
  private AttackMitigation attackMitigation = null;

  @SerializedName("deprecate_any_requests")
  private Boolean deprecateAnyRequests = null;

  @SerializedName("ecs_fallback")
  private Boolean ecsFallback = null;

  @SerializedName("maximum_cache_ttl")
  private BigDecimal maximumCacheTtl = null;

  @SerializedName("minimum_cache_ttl")
  private BigDecimal minimumCacheTtl = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("negative_cache_ttl")
  private BigDecimal negativeCacheTtl = null;

  @SerializedName("origin_ips")
  private OriginIps originIps = null;

  @SerializedName("ratelimit")
  private BigDecimal ratelimit = null;

  @SerializedName("retries")
  private BigDecimal retries = null;

  public AccountIdentifierDnsFirewallBody attackMitigation(AttackMitigation attackMitigation) {
    this.attackMitigation = attackMitigation;
    return this;
  }

   /**
   * Get attackMitigation
   * @return attackMitigation
  **/
  @Schema(description = "")
  public AttackMitigation getAttackMitigation() {
    return attackMitigation;
  }

  public void setAttackMitigation(AttackMitigation attackMitigation) {
    this.attackMitigation = attackMitigation;
  }

  public AccountIdentifierDnsFirewallBody deprecateAnyRequests(Boolean deprecateAnyRequests) {
    this.deprecateAnyRequests = deprecateAnyRequests;
    return this;
  }

   /**
   * Get deprecateAnyRequests
   * @return deprecateAnyRequests
  **/
  @Schema(description = "")
  public Boolean getDeprecateAnyRequests() {
    return deprecateAnyRequests;
  }

  public void setDeprecateAnyRequests(Boolean deprecateAnyRequests) {
    this.deprecateAnyRequests = deprecateAnyRequests;
  }

  public AccountIdentifierDnsFirewallBody ecsFallback(Boolean ecsFallback) {
    this.ecsFallback = ecsFallback;
    return this;
  }

   /**
   * Get ecsFallback
   * @return ecsFallback
  **/
  @Schema(description = "")
  public Boolean getEcsFallback() {
    return ecsFallback;
  }

  public void setEcsFallback(Boolean ecsFallback) {
    this.ecsFallback = ecsFallback;
  }

  public AccountIdentifierDnsFirewallBody maximumCacheTtl(BigDecimal maximumCacheTtl) {
    this.maximumCacheTtl = maximumCacheTtl;
    return this;
  }

   /**
   * Get maximumCacheTtl
   * @return maximumCacheTtl
  **/
  @Schema(description = "")
  public BigDecimal getMaximumCacheTtl() {
    return maximumCacheTtl;
  }

  public void setMaximumCacheTtl(BigDecimal maximumCacheTtl) {
    this.maximumCacheTtl = maximumCacheTtl;
  }

  public AccountIdentifierDnsFirewallBody minimumCacheTtl(BigDecimal minimumCacheTtl) {
    this.minimumCacheTtl = minimumCacheTtl;
    return this;
  }

   /**
   * Get minimumCacheTtl
   * @return minimumCacheTtl
  **/
  @Schema(description = "")
  public BigDecimal getMinimumCacheTtl() {
    return minimumCacheTtl;
  }

  public void setMinimumCacheTtl(BigDecimal minimumCacheTtl) {
    this.minimumCacheTtl = minimumCacheTtl;
  }

  public AccountIdentifierDnsFirewallBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AccountIdentifierDnsFirewallBody negativeCacheTtl(BigDecimal negativeCacheTtl) {
    this.negativeCacheTtl = negativeCacheTtl;
    return this;
  }

   /**
   * Get negativeCacheTtl
   * @return negativeCacheTtl
  **/
  @Schema(description = "")
  public BigDecimal getNegativeCacheTtl() {
    return negativeCacheTtl;
  }

  public void setNegativeCacheTtl(BigDecimal negativeCacheTtl) {
    this.negativeCacheTtl = negativeCacheTtl;
  }

  public AccountIdentifierDnsFirewallBody originIps(OriginIps originIps) {
    this.originIps = originIps;
    return this;
  }

   /**
   * Get originIps
   * @return originIps
  **/
  @Schema(required = true, description = "")
  public OriginIps getOriginIps() {
    return originIps;
  }

  public void setOriginIps(OriginIps originIps) {
    this.originIps = originIps;
  }

  public AccountIdentifierDnsFirewallBody ratelimit(BigDecimal ratelimit) {
    this.ratelimit = ratelimit;
    return this;
  }

   /**
   * Get ratelimit
   * @return ratelimit
  **/
  @Schema(description = "")
  public BigDecimal getRatelimit() {
    return ratelimit;
  }

  public void setRatelimit(BigDecimal ratelimit) {
    this.ratelimit = ratelimit;
  }

  public AccountIdentifierDnsFirewallBody retries(BigDecimal retries) {
    this.retries = retries;
    return this;
  }

   /**
   * Get retries
   * @return retries
  **/
  @Schema(description = "")
  public BigDecimal getRetries() {
    return retries;
  }

  public void setRetries(BigDecimal retries) {
    this.retries = retries;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountIdentifierDnsFirewallBody accountIdentifierDnsFirewallBody = (AccountIdentifierDnsFirewallBody) o;
    return Objects.equals(this.attackMitigation, accountIdentifierDnsFirewallBody.attackMitigation) &&
        Objects.equals(this.deprecateAnyRequests, accountIdentifierDnsFirewallBody.deprecateAnyRequests) &&
        Objects.equals(this.ecsFallback, accountIdentifierDnsFirewallBody.ecsFallback) &&
        Objects.equals(this.maximumCacheTtl, accountIdentifierDnsFirewallBody.maximumCacheTtl) &&
        Objects.equals(this.minimumCacheTtl, accountIdentifierDnsFirewallBody.minimumCacheTtl) &&
        Objects.equals(this.name, accountIdentifierDnsFirewallBody.name) &&
        Objects.equals(this.negativeCacheTtl, accountIdentifierDnsFirewallBody.negativeCacheTtl) &&
        Objects.equals(this.originIps, accountIdentifierDnsFirewallBody.originIps) &&
        Objects.equals(this.ratelimit, accountIdentifierDnsFirewallBody.ratelimit) &&
        Objects.equals(this.retries, accountIdentifierDnsFirewallBody.retries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attackMitigation, deprecateAnyRequests, ecsFallback, maximumCacheTtl, minimumCacheTtl, name, negativeCacheTtl, originIps, ratelimit, retries);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountIdentifierDnsFirewallBody {\n");
    
    sb.append("    attackMitigation: ").append(toIndentedString(attackMitigation)).append("\n");
    sb.append("    deprecateAnyRequests: ").append(toIndentedString(deprecateAnyRequests)).append("\n");
    sb.append("    ecsFallback: ").append(toIndentedString(ecsFallback)).append("\n");
    sb.append("    maximumCacheTtl: ").append(toIndentedString(maximumCacheTtl)).append("\n");
    sb.append("    minimumCacheTtl: ").append(toIndentedString(minimumCacheTtl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    negativeCacheTtl: ").append(toIndentedString(negativeCacheTtl)).append("\n");
    sb.append("    originIps: ").append(toIndentedString(originIps)).append("\n");
    sb.append("    ratelimit: ").append(toIndentedString(ratelimit)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
