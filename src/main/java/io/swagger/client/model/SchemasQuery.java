/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Query;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * SchemasQuery
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class SchemasQuery extends Query {
  @SerializedName("dimensions")
  private List<String> schemasQueryDimensions = null;

  @SerializedName("filters")
  private Object schemasQueryFilters = null;

  @SerializedName("metrics")
  private List<String> schemasQueryMetrics = null;

  @SerializedName("sort")
  private Object schemasQuerySort = null;

  public SchemasQuery schemasQueryDimensions(List<String> schemasQueryDimensions) {
    this.schemasQueryDimensions = schemasQueryDimensions;
    return this;
  }

  public SchemasQuery addSchemasQueryDimensionsItem(String schemasQueryDimensionsItem) {
    if (this.schemasQueryDimensions == null) {
      this.schemasQueryDimensions = new ArrayList<String>();
    }
    this.schemasQueryDimensions.add(schemasQueryDimensionsItem);
    return this;
  }

   /**
   * Get schemasQueryDimensions
   * @return schemasQueryDimensions
  **/
  @Schema(example = "[\"accountId\",\"responseCode\"]", description = "")
  public List<String> getSchemasQueryDimensions() {
    return schemasQueryDimensions;
  }

  public void setSchemasQueryDimensions(List<String> schemasQueryDimensions) {
    this.schemasQueryDimensions = schemasQueryDimensions;
  }

  public SchemasQuery schemasQueryFilters(Object schemasQueryFilters) {
    this.schemasQueryFilters = schemasQueryFilters;
    return this;
  }

   /**
   * Get schemasQueryFilters
   * @return schemasQueryFilters
  **/
  @Schema(example = "requestType==read AND responseCode!=200", description = "")
  public Object getSchemasQueryFilters() {
    return schemasQueryFilters;
  }

  public void setSchemasQueryFilters(Object schemasQueryFilters) {
    this.schemasQueryFilters = schemasQueryFilters;
  }

  public SchemasQuery schemasQueryMetrics(List<String> schemasQueryMetrics) {
    this.schemasQueryMetrics = schemasQueryMetrics;
    return this;
  }

  public SchemasQuery addSchemasQueryMetricsItem(String schemasQueryMetricsItem) {
    if (this.schemasQueryMetrics == null) {
      this.schemasQueryMetrics = new ArrayList<String>();
    }
    this.schemasQueryMetrics.add(schemasQueryMetricsItem);
    return this;
  }

   /**
   * Get schemasQueryMetrics
   * @return schemasQueryMetrics
  **/
  @Schema(example = "[\"requests\",\"readKiB\"]", description = "")
  public List<String> getSchemasQueryMetrics() {
    return schemasQueryMetrics;
  }

  public void setSchemasQueryMetrics(List<String> schemasQueryMetrics) {
    this.schemasQueryMetrics = schemasQueryMetrics;
  }

  public SchemasQuery schemasQuerySort(Object schemasQuerySort) {
    this.schemasQuerySort = schemasQuerySort;
    return this;
  }

   /**
   * Get schemasQuerySort
   * @return schemasQuerySort
  **/
  @Schema(example = "[\"+requests\",\"-responseCode\"]", description = "")
  public Object getSchemasQuerySort() {
    return schemasQuerySort;
  }

  public void setSchemasQuerySort(Object schemasQuerySort) {
    this.schemasQuerySort = schemasQuerySort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchemasQuery schemasQuery = (SchemasQuery) o;
    return Objects.equals(this.schemasQueryDimensions, schemasQuery.schemasQueryDimensions) &&
        Objects.equals(this.schemasQueryFilters, schemasQuery.schemasQueryFilters) &&
        Objects.equals(this.schemasQueryMetrics, schemasQuery.schemasQueryMetrics) &&
        Objects.equals(this.schemasQuerySort, schemasQuery.schemasQuerySort) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemasQueryDimensions, schemasQueryFilters, schemasQueryMetrics, schemasQuerySort, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchemasQuery {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    schemasQueryDimensions: ").append(toIndentedString(schemasQueryDimensions)).append("\n");
    sb.append("    schemasQueryFilters: ").append(toIndentedString(schemasQueryFilters)).append("\n");
    sb.append("    schemasQueryMetrics: ").append(toIndentedString(schemasQueryMetrics)).append("\n");
    sb.append("    schemasQuerySort: ").append(toIndentedString(schemasQuerySort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
