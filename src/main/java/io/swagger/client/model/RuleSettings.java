/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RulesettingsBisoAdminControls;
import io.swagger.client.model.RulesettingsCheckSession;
import io.swagger.client.model.RulesettingsEgress;
import io.swagger.client.model.RulesettingsL4override;
import io.swagger.client.model.RulesettingsPayloadLog;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Additional settings that modify the rule&#x27;s action.
 */
@Schema(description = "Additional settings that modify the rule's action.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class RuleSettings {
  @SerializedName("add_headers")
  private Object addHeaders = null;

  @SerializedName("biso_admin_controls")
  private RulesettingsBisoAdminControls bisoAdminControls = null;

  @SerializedName("block_page_enabled")
  private Boolean blockPageEnabled = null;

  @SerializedName("block_reason")
  private String blockReason = null;

  @SerializedName("check_session")
  private RulesettingsCheckSession checkSession = null;

  @SerializedName("egress")
  private RulesettingsEgress egress = null;

  @SerializedName("insecure_disable_dnssec_validation")
  private Boolean insecureDisableDnssecValidation = null;

  @SerializedName("ip_categories")
  private Boolean ipCategories = null;

  @SerializedName("l4override")
  private RulesettingsL4override l4override = null;

  @SerializedName("override_host")
  private String overrideHost = null;

  @SerializedName("override_ips")
  private List<String> overrideIps = null;

  @SerializedName("payload_log")
  private RulesettingsPayloadLog payloadLog = null;

  public RuleSettings addHeaders(Object addHeaders) {
    this.addHeaders = addHeaders;
    return this;
  }

   /**
   * Add custom headers to allowed requests, in the form of key-value pairs. Keys are header names, pointing to an array with its header value(s).
   * @return addHeaders
  **/
  @Schema(example = "{\"My-Next-Header\":[\"foo\",\"bar\"],\"X-Custom-Header-Name\":[\"somecustomvalue\"]}", description = "Add custom headers to allowed requests, in the form of key-value pairs. Keys are header names, pointing to an array with its header value(s).")
  public Object getAddHeaders() {
    return addHeaders;
  }

  public void setAddHeaders(Object addHeaders) {
    this.addHeaders = addHeaders;
  }

  public RuleSettings bisoAdminControls(RulesettingsBisoAdminControls bisoAdminControls) {
    this.bisoAdminControls = bisoAdminControls;
    return this;
  }

   /**
   * Get bisoAdminControls
   * @return bisoAdminControls
  **/
  @Schema(description = "")
  public RulesettingsBisoAdminControls getBisoAdminControls() {
    return bisoAdminControls;
  }

  public void setBisoAdminControls(RulesettingsBisoAdminControls bisoAdminControls) {
    this.bisoAdminControls = bisoAdminControls;
  }

  public RuleSettings blockPageEnabled(Boolean blockPageEnabled) {
    this.blockPageEnabled = blockPageEnabled;
    return this;
  }

   /**
   * Enable the custom block page.
   * @return blockPageEnabled
  **/
  @Schema(example = "true", description = "Enable the custom block page.")
  public Boolean isBlockPageEnabled() {
    return blockPageEnabled;
  }

  public void setBlockPageEnabled(Boolean blockPageEnabled) {
    this.blockPageEnabled = blockPageEnabled;
  }

  public RuleSettings blockReason(String blockReason) {
    this.blockReason = blockReason;
    return this;
  }

   /**
   * The text describing why this block occurred that will be displayed on the custom block page (if enabled).
   * @return blockReason
  **/
  @Schema(example = "This website is a security risk", description = "The text describing why this block occurred that will be displayed on the custom block page (if enabled).")
  public String getBlockReason() {
    return blockReason;
  }

  public void setBlockReason(String blockReason) {
    this.blockReason = blockReason;
  }

  public RuleSettings checkSession(RulesettingsCheckSession checkSession) {
    this.checkSession = checkSession;
    return this;
  }

   /**
   * Get checkSession
   * @return checkSession
  **/
  @Schema(description = "")
  public RulesettingsCheckSession getCheckSession() {
    return checkSession;
  }

  public void setCheckSession(RulesettingsCheckSession checkSession) {
    this.checkSession = checkSession;
  }

  public RuleSettings egress(RulesettingsEgress egress) {
    this.egress = egress;
    return this;
  }

   /**
   * Get egress
   * @return egress
  **/
  @Schema(description = "")
  public RulesettingsEgress getEgress() {
    return egress;
  }

  public void setEgress(RulesettingsEgress egress) {
    this.egress = egress;
  }

  public RuleSettings insecureDisableDnssecValidation(Boolean insecureDisableDnssecValidation) {
    this.insecureDisableDnssecValidation = insecureDisableDnssecValidation;
    return this;
  }

   /**
   * INSECURE - disable DNSSEC validation (for allow actions).
   * @return insecureDisableDnssecValidation
  **/
  @Schema(example = "false", description = "INSECURE - disable DNSSEC validation (for allow actions).")
  public Boolean isInsecureDisableDnssecValidation() {
    return insecureDisableDnssecValidation;
  }

  public void setInsecureDisableDnssecValidation(Boolean insecureDisableDnssecValidation) {
    this.insecureDisableDnssecValidation = insecureDisableDnssecValidation;
  }

  public RuleSettings ipCategories(Boolean ipCategories) {
    this.ipCategories = ipCategories;
    return this;
  }

   /**
   * Include IPs in DNS resolver category blocks. By default categories only block on domain names.
   * @return ipCategories
  **/
  @Schema(example = "true", description = "Include IPs in DNS resolver category blocks. By default categories only block on domain names.")
  public Boolean isIpCategories() {
    return ipCategories;
  }

  public void setIpCategories(Boolean ipCategories) {
    this.ipCategories = ipCategories;
  }

  public RuleSettings l4override(RulesettingsL4override l4override) {
    this.l4override = l4override;
    return this;
  }

   /**
   * Get l4override
   * @return l4override
  **/
  @Schema(description = "")
  public RulesettingsL4override getL4override() {
    return l4override;
  }

  public void setL4override(RulesettingsL4override l4override) {
    this.l4override = l4override;
  }

  public RuleSettings overrideHost(String overrideHost) {
    this.overrideHost = overrideHost;
    return this;
  }

   /**
   * Override matching DNS queries with this.
   * @return overrideHost
  **/
  @Schema(example = "example.com", description = "Override matching DNS queries with this.")
  public String getOverrideHost() {
    return overrideHost;
  }

  public void setOverrideHost(String overrideHost) {
    this.overrideHost = overrideHost;
  }

  public RuleSettings overrideIps(List<String> overrideIps) {
    this.overrideIps = overrideIps;
    return this;
  }

  public RuleSettings addOverrideIpsItem(String overrideIpsItem) {
    if (this.overrideIps == null) {
      this.overrideIps = new ArrayList<String>();
    }
    this.overrideIps.add(overrideIpsItem);
    return this;
  }

   /**
   * Override matching DNS queries with this.
   * @return overrideIps
  **/
  @Schema(example = "[\"1.1.1.1\",\"2.2.2.2\"]", description = "Override matching DNS queries with this.")
  public List<String> getOverrideIps() {
    return overrideIps;
  }

  public void setOverrideIps(List<String> overrideIps) {
    this.overrideIps = overrideIps;
  }

  public RuleSettings payloadLog(RulesettingsPayloadLog payloadLog) {
    this.payloadLog = payloadLog;
    return this;
  }

   /**
   * Get payloadLog
   * @return payloadLog
  **/
  @Schema(description = "")
  public RulesettingsPayloadLog getPayloadLog() {
    return payloadLog;
  }

  public void setPayloadLog(RulesettingsPayloadLog payloadLog) {
    this.payloadLog = payloadLog;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuleSettings ruleSettings = (RuleSettings) o;
    return Objects.equals(this.addHeaders, ruleSettings.addHeaders) &&
        Objects.equals(this.bisoAdminControls, ruleSettings.bisoAdminControls) &&
        Objects.equals(this.blockPageEnabled, ruleSettings.blockPageEnabled) &&
        Objects.equals(this.blockReason, ruleSettings.blockReason) &&
        Objects.equals(this.checkSession, ruleSettings.checkSession) &&
        Objects.equals(this.egress, ruleSettings.egress) &&
        Objects.equals(this.insecureDisableDnssecValidation, ruleSettings.insecureDisableDnssecValidation) &&
        Objects.equals(this.ipCategories, ruleSettings.ipCategories) &&
        Objects.equals(this.l4override, ruleSettings.l4override) &&
        Objects.equals(this.overrideHost, ruleSettings.overrideHost) &&
        Objects.equals(this.overrideIps, ruleSettings.overrideIps) &&
        Objects.equals(this.payloadLog, ruleSettings.payloadLog);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addHeaders, bisoAdminControls, blockPageEnabled, blockReason, checkSession, egress, insecureDisableDnssecValidation, ipCategories, l4override, overrideHost, overrideIps, payloadLog);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuleSettings {\n");
    
    sb.append("    addHeaders: ").append(toIndentedString(addHeaders)).append("\n");
    sb.append("    bisoAdminControls: ").append(toIndentedString(bisoAdminControls)).append("\n");
    sb.append("    blockPageEnabled: ").append(toIndentedString(blockPageEnabled)).append("\n");
    sb.append("    blockReason: ").append(toIndentedString(blockReason)).append("\n");
    sb.append("    checkSession: ").append(toIndentedString(checkSession)).append("\n");
    sb.append("    egress: ").append(toIndentedString(egress)).append("\n");
    sb.append("    insecureDisableDnssecValidation: ").append(toIndentedString(insecureDisableDnssecValidation)).append("\n");
    sb.append("    ipCategories: ").append(toIndentedString(ipCategories)).append("\n");
    sb.append("    l4override: ").append(toIndentedString(l4override)).append("\n");
    sb.append("    overrideHost: ").append(toIndentedString(overrideHost)).append("\n");
    sb.append("    overrideIps: ").append(toIndentedString(overrideIps)).append("\n");
    sb.append("    payloadLog: ").append(toIndentedString(payloadLog)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
