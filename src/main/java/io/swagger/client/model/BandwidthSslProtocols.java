/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A breakdown of requests by their SSL protocol.
 */
@Schema(description = "A breakdown of requests by their SSL protocol.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class BandwidthSslProtocols {
  @SerializedName("TLSv1")
  private Integer tlSv1 = null;

  @SerializedName("TLSv1.1")
  private Integer tlSv11 = null;

  @SerializedName("TLSv1.2")
  private Integer tlSv12 = null;

  @SerializedName("TLSv1.3")
  private Integer tlSv13 = null;

  @SerializedName("none")
  private Integer none = null;

  public BandwidthSslProtocols tlSv1(Integer tlSv1) {
    this.tlSv1 = tlSv1;
    return this;
  }

   /**
   * The number of requests served over TLS v1.0.
   * @return tlSv1
  **/
  @Schema(description = "The number of requests served over TLS v1.0.")
  public Integer getTlSv1() {
    return tlSv1;
  }

  public void setTlSv1(Integer tlSv1) {
    this.tlSv1 = tlSv1;
  }

  public BandwidthSslProtocols tlSv11(Integer tlSv11) {
    this.tlSv11 = tlSv11;
    return this;
  }

   /**
   * The number of requests served over TLS v1.1.
   * @return tlSv11
  **/
  @Schema(description = "The number of requests served over TLS v1.1.")
  public Integer getTlSv11() {
    return tlSv11;
  }

  public void setTlSv11(Integer tlSv11) {
    this.tlSv11 = tlSv11;
  }

  public BandwidthSslProtocols tlSv12(Integer tlSv12) {
    this.tlSv12 = tlSv12;
    return this;
  }

   /**
   * The number of requests served over TLS v1.2.
   * @return tlSv12
  **/
  @Schema(description = "The number of requests served over TLS v1.2.")
  public Integer getTlSv12() {
    return tlSv12;
  }

  public void setTlSv12(Integer tlSv12) {
    this.tlSv12 = tlSv12;
  }

  public BandwidthSslProtocols tlSv13(Integer tlSv13) {
    this.tlSv13 = tlSv13;
    return this;
  }

   /**
   * The number of requests served over TLS v1.3.
   * @return tlSv13
  **/
  @Schema(description = "The number of requests served over TLS v1.3.")
  public Integer getTlSv13() {
    return tlSv13;
  }

  public void setTlSv13(Integer tlSv13) {
    this.tlSv13 = tlSv13;
  }

  public BandwidthSslProtocols none(Integer none) {
    this.none = none;
    return this;
  }

   /**
   * The number of requests served over HTTP.
   * @return none
  **/
  @Schema(description = "The number of requests served over HTTP.")
  public Integer getNone() {
    return none;
  }

  public void setNone(Integer none) {
    this.none = none;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BandwidthSslProtocols bandwidthSslProtocols = (BandwidthSslProtocols) o;
    return Objects.equals(this.tlSv1, bandwidthSslProtocols.tlSv1) &&
        Objects.equals(this.tlSv11, bandwidthSslProtocols.tlSv11) &&
        Objects.equals(this.tlSv12, bandwidthSslProtocols.tlSv12) &&
        Objects.equals(this.tlSv13, bandwidthSslProtocols.tlSv13) &&
        Objects.equals(this.none, bandwidthSslProtocols.none);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tlSv1, tlSv11, tlSv12, tlSv13, none);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BandwidthSslProtocols {\n");
    
    sb.append("    tlSv1: ").append(toIndentedString(tlSv1)).append("\n");
    sb.append("    tlSv11: ").append(toIndentedString(tlSv11)).append("\n");
    sb.append("    tlSv12: ").append(toIndentedString(tlSv12)).append("\n");
    sb.append("    tlSv13: ").append(toIndentedString(tlSv13)).append("\n");
    sb.append("    none: ").append(toIndentedString(none)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
