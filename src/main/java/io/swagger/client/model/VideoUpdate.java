/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AllowedOrigins;
import io.swagger.client.model.MediaMetadata;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * VideoUpdate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class VideoUpdate {
  @SerializedName("allowedOrigins")
  private AllowedOrigins allowedOrigins = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("maxDurationSeconds")
  private Integer maxDurationSeconds = null;

  @SerializedName("meta")
  private MediaMetadata meta = null;

  @SerializedName("requireSignedURLs")
  private Boolean requireSignedURLs = null;

  @SerializedName("thumbnailTimestampPct")
  private BigDecimal thumbnailTimestampPct = null;

  @SerializedName("uploadExpiry")
  private OffsetDateTime uploadExpiry = null;

  public VideoUpdate allowedOrigins(AllowedOrigins allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
    return this;
  }

   /**
   * Get allowedOrigins
   * @return allowedOrigins
  **/
  @Schema(description = "")
  public AllowedOrigins getAllowedOrigins() {
    return allowedOrigins;
  }

  public void setAllowedOrigins(AllowedOrigins allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
  }

  public VideoUpdate creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @Schema(description = "")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public VideoUpdate maxDurationSeconds(Integer maxDurationSeconds) {
    this.maxDurationSeconds = maxDurationSeconds;
    return this;
  }

   /**
   * Get maxDurationSeconds
   * @return maxDurationSeconds
  **/
  @Schema(description = "")
  public Integer getMaxDurationSeconds() {
    return maxDurationSeconds;
  }

  public void setMaxDurationSeconds(Integer maxDurationSeconds) {
    this.maxDurationSeconds = maxDurationSeconds;
  }

  public VideoUpdate meta(MediaMetadata meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @Schema(description = "")
  public MediaMetadata getMeta() {
    return meta;
  }

  public void setMeta(MediaMetadata meta) {
    this.meta = meta;
  }

  public VideoUpdate requireSignedURLs(Boolean requireSignedURLs) {
    this.requireSignedURLs = requireSignedURLs;
    return this;
  }

   /**
   * Get requireSignedURLs
   * @return requireSignedURLs
  **/
  @Schema(description = "")
  public Boolean getRequireSignedURLs() {
    return requireSignedURLs;
  }

  public void setRequireSignedURLs(Boolean requireSignedURLs) {
    this.requireSignedURLs = requireSignedURLs;
  }

  public VideoUpdate thumbnailTimestampPct(BigDecimal thumbnailTimestampPct) {
    this.thumbnailTimestampPct = thumbnailTimestampPct;
    return this;
  }

   /**
   * Get thumbnailTimestampPct
   * @return thumbnailTimestampPct
  **/
  @Schema(description = "")
  public BigDecimal getThumbnailTimestampPct() {
    return thumbnailTimestampPct;
  }

  public void setThumbnailTimestampPct(BigDecimal thumbnailTimestampPct) {
    this.thumbnailTimestampPct = thumbnailTimestampPct;
  }

  public VideoUpdate uploadExpiry(OffsetDateTime uploadExpiry) {
    this.uploadExpiry = uploadExpiry;
    return this;
  }

   /**
   * Get uploadExpiry
   * @return uploadExpiry
  **/
  @Schema(description = "")
  public OffsetDateTime getUploadExpiry() {
    return uploadExpiry;
  }

  public void setUploadExpiry(OffsetDateTime uploadExpiry) {
    this.uploadExpiry = uploadExpiry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoUpdate videoUpdate = (VideoUpdate) o;
    return Objects.equals(this.allowedOrigins, videoUpdate.allowedOrigins) &&
        Objects.equals(this.creator, videoUpdate.creator) &&
        Objects.equals(this.maxDurationSeconds, videoUpdate.maxDurationSeconds) &&
        Objects.equals(this.meta, videoUpdate.meta) &&
        Objects.equals(this.requireSignedURLs, videoUpdate.requireSignedURLs) &&
        Objects.equals(this.thumbnailTimestampPct, videoUpdate.thumbnailTimestampPct) &&
        Objects.equals(this.uploadExpiry, videoUpdate.uploadExpiry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedOrigins, creator, maxDurationSeconds, meta, requireSignedURLs, thumbnailTimestampPct, uploadExpiry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoUpdate {\n");
    
    sb.append("    allowedOrigins: ").append(toIndentedString(allowedOrigins)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    maxDurationSeconds: ").append(toIndentedString(maxDurationSeconds)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    requireSignedURLs: ").append(toIndentedString(requireSignedURLs)).append("\n");
    sb.append("    thumbnailTimestampPct: ").append(toIndentedString(thumbnailTimestampPct)).append("\n");
    sb.append("    uploadExpiry: ").append(toIndentedString(uploadExpiry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
