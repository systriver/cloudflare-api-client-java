/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DnsRecordComponentsSchemasType;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ZoneIdentifierDnsRecordsBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class ZoneIdentifierDnsRecordsBody {
  @SerializedName("comment")
  private String comment = null;

  @SerializedName("content")
  private String content = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("priority")
  private java.math.BigDecimal priority = null;

  @SerializedName("proxied")
  private Boolean proxied = null;

  @SerializedName("tags")
  private Tags tags = null;

  @SerializedName("ttl")
  private BigDecimal ttl = null;

  @SerializedName("type")
  private DnsRecordComponentsSchemasType type = null;

  public ZoneIdentifierDnsRecordsBody comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(description = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public ZoneIdentifierDnsRecordsBody content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @Schema(required = true, description = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public ZoneIdentifierDnsRecordsBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ZoneIdentifierDnsRecordsBody priority(java.math.BigDecimal priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public java.math.BigDecimal getPriority() {
    return priority;
  }

  public void setPriority(java.math.BigDecimal priority) {
    this.priority = priority;
  }

  public ZoneIdentifierDnsRecordsBody proxied(Boolean proxied) {
    this.proxied = proxied;
    return this;
  }

   /**
   * Get proxied
   * @return proxied
  **/
  @Schema(description = "")
  public Boolean getProxied() {
    return proxied;
  }

  public void setProxied(Boolean proxied) {
    this.proxied = proxied;
  }

  public ZoneIdentifierDnsRecordsBody tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }

  public ZoneIdentifierDnsRecordsBody ttl(BigDecimal ttl) {
    this.ttl = ttl;
    return this;
  }

   /**
   * Get ttl
   * @return ttl
  **/
  @Schema(required = true, description = "")
  public BigDecimal getTtl() {
    return ttl;
  }

  public void setTtl(BigDecimal ttl) {
    this.ttl = ttl;
  }

  public ZoneIdentifierDnsRecordsBody type(DnsRecordComponentsSchemasType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public DnsRecordComponentsSchemasType getType() {
    return type;
  }

  public void setType(DnsRecordComponentsSchemasType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZoneIdentifierDnsRecordsBody zoneIdentifierDnsRecordsBody = (ZoneIdentifierDnsRecordsBody) o;
    return Objects.equals(this.comment, zoneIdentifierDnsRecordsBody.comment) &&
        Objects.equals(this.content, zoneIdentifierDnsRecordsBody.content) &&
        Objects.equals(this.name, zoneIdentifierDnsRecordsBody.name) &&
        Objects.equals(this.priority, zoneIdentifierDnsRecordsBody.priority) &&
        Objects.equals(this.proxied, zoneIdentifierDnsRecordsBody.proxied) &&
        Objects.equals(this.tags, zoneIdentifierDnsRecordsBody.tags) &&
        Objects.equals(this.ttl, zoneIdentifierDnsRecordsBody.ttl) &&
        Objects.equals(this.type, zoneIdentifierDnsRecordsBody.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comment, content, name, priority, proxied, tags, ttl, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZoneIdentifierDnsRecordsBody {\n");
    
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    proxied: ").append(toIndentedString(proxied)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
