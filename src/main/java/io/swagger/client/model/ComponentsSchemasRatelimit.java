/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Bypass;
import io.swagger.client.model.CloudflareClientAPIMatch;
import io.swagger.client.model.ComponentsSchemasAction;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * ComponentsSchemasRatelimit
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class ComponentsSchemasRatelimit {
  @SerializedName("action")
  private ComponentsSchemasAction action = null;

  @SerializedName("bypass")
  private Bypass bypass = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("disabled")
  private Boolean disabled = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("match")
  private CloudflareClientAPIMatch match = null;

  @SerializedName("period")
  private BigDecimal period = null;

  @SerializedName("threshold")
  private BigDecimal threshold = null;

  public ComponentsSchemasRatelimit action(ComponentsSchemasAction action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public ComponentsSchemasAction getAction() {
    return action;
  }

  public void setAction(ComponentsSchemasAction action) {
    this.action = action;
  }

  public ComponentsSchemasRatelimit bypass(Bypass bypass) {
    this.bypass = bypass;
    return this;
  }

   /**
   * Get bypass
   * @return bypass
  **/
  @Schema(description = "")
  public Bypass getBypass() {
    return bypass;
  }

  public void setBypass(Bypass bypass) {
    this.bypass = bypass;
  }

  public ComponentsSchemasRatelimit description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ComponentsSchemasRatelimit disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @Schema(description = "")
  public Boolean getDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  public ComponentsSchemasRatelimit id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ComponentsSchemasRatelimit match(CloudflareClientAPIMatch match) {
    this.match = match;
    return this;
  }

   /**
   * Get match
   * @return match
  **/
  @Schema(description = "")
  public CloudflareClientAPIMatch getMatch() {
    return match;
  }

  public void setMatch(CloudflareClientAPIMatch match) {
    this.match = match;
  }

  public ComponentsSchemasRatelimit period(BigDecimal period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public BigDecimal getPeriod() {
    return period;
  }

  public void setPeriod(BigDecimal period) {
    this.period = period;
  }

  public ComponentsSchemasRatelimit threshold(BigDecimal threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * Get threshold
   * @return threshold
  **/
  @Schema(description = "")
  public BigDecimal getThreshold() {
    return threshold;
  }

  public void setThreshold(BigDecimal threshold) {
    this.threshold = threshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComponentsSchemasRatelimit componentsSchemasRatelimit = (ComponentsSchemasRatelimit) o;
    return Objects.equals(this.action, componentsSchemasRatelimit.action) &&
        Objects.equals(this.bypass, componentsSchemasRatelimit.bypass) &&
        Objects.equals(this.description, componentsSchemasRatelimit.description) &&
        Objects.equals(this.disabled, componentsSchemasRatelimit.disabled) &&
        Objects.equals(this.id, componentsSchemasRatelimit.id) &&
        Objects.equals(this.match, componentsSchemasRatelimit.match) &&
        Objects.equals(this.period, componentsSchemasRatelimit.period) &&
        Objects.equals(this.threshold, componentsSchemasRatelimit.threshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, bypass, description, disabled, id, match, period, threshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComponentsSchemasRatelimit {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    bypass: ").append(toIndentedString(bypass)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
