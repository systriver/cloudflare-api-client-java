/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse20043ResultEvents
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T13:40:27.702461541+09:00[Asia/Tokyo]")
public class InlineResponse20043ResultEvents {
  @SerializedName("detected_ts")
  private String detectedTs = null;

  @SerializedName("finished")
  private Boolean finished = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("leak_asn")
  private Integer leakAsn = null;

  @SerializedName("leak_count")
  private Integer leakCount = null;

  @SerializedName("leak_seg")
  private List<Integer> leakSeg = new ArrayList<Integer>();

  @SerializedName("leak_type")
  private Integer leakType = null;

  @SerializedName("max_ts")
  private String maxTs = null;

  @SerializedName("min_ts")
  private String minTs = null;

  @SerializedName("origin_count")
  private Integer originCount = null;

  @SerializedName("peer_count")
  private Integer peerCount = null;

  @SerializedName("prefix_count")
  private Integer prefixCount = null;

  public InlineResponse20043ResultEvents detectedTs(String detectedTs) {
    this.detectedTs = detectedTs;
    return this;
  }

   /**
   * Get detectedTs
   * @return detectedTs
  **/
  @Schema(required = true, description = "")
  public String getDetectedTs() {
    return detectedTs;
  }

  public void setDetectedTs(String detectedTs) {
    this.detectedTs = detectedTs;
  }

  public InlineResponse20043ResultEvents finished(Boolean finished) {
    this.finished = finished;
    return this;
  }

   /**
   * Get finished
   * @return finished
  **/
  @Schema(required = true, description = "")
  public Boolean isFinished() {
    return finished;
  }

  public void setFinished(Boolean finished) {
    this.finished = finished;
  }

  public InlineResponse20043ResultEvents id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public InlineResponse20043ResultEvents leakAsn(Integer leakAsn) {
    this.leakAsn = leakAsn;
    return this;
  }

   /**
   * Get leakAsn
   * @return leakAsn
  **/
  @Schema(required = true, description = "")
  public Integer getLeakAsn() {
    return leakAsn;
  }

  public void setLeakAsn(Integer leakAsn) {
    this.leakAsn = leakAsn;
  }

  public InlineResponse20043ResultEvents leakCount(Integer leakCount) {
    this.leakCount = leakCount;
    return this;
  }

   /**
   * Get leakCount
   * @return leakCount
  **/
  @Schema(required = true, description = "")
  public Integer getLeakCount() {
    return leakCount;
  }

  public void setLeakCount(Integer leakCount) {
    this.leakCount = leakCount;
  }

  public InlineResponse20043ResultEvents leakSeg(List<Integer> leakSeg) {
    this.leakSeg = leakSeg;
    return this;
  }

  public InlineResponse20043ResultEvents addLeakSegItem(Integer leakSegItem) {
    this.leakSeg.add(leakSegItem);
    return this;
  }

   /**
   * Get leakSeg
   * @return leakSeg
  **/
  @Schema(required = true, description = "")
  public List<Integer> getLeakSeg() {
    return leakSeg;
  }

  public void setLeakSeg(List<Integer> leakSeg) {
    this.leakSeg = leakSeg;
  }

  public InlineResponse20043ResultEvents leakType(Integer leakType) {
    this.leakType = leakType;
    return this;
  }

   /**
   * Get leakType
   * @return leakType
  **/
  @Schema(required = true, description = "")
  public Integer getLeakType() {
    return leakType;
  }

  public void setLeakType(Integer leakType) {
    this.leakType = leakType;
  }

  public InlineResponse20043ResultEvents maxTs(String maxTs) {
    this.maxTs = maxTs;
    return this;
  }

   /**
   * Get maxTs
   * @return maxTs
  **/
  @Schema(required = true, description = "")
  public String getMaxTs() {
    return maxTs;
  }

  public void setMaxTs(String maxTs) {
    this.maxTs = maxTs;
  }

  public InlineResponse20043ResultEvents minTs(String minTs) {
    this.minTs = minTs;
    return this;
  }

   /**
   * Get minTs
   * @return minTs
  **/
  @Schema(required = true, description = "")
  public String getMinTs() {
    return minTs;
  }

  public void setMinTs(String minTs) {
    this.minTs = minTs;
  }

  public InlineResponse20043ResultEvents originCount(Integer originCount) {
    this.originCount = originCount;
    return this;
  }

   /**
   * Get originCount
   * @return originCount
  **/
  @Schema(required = true, description = "")
  public Integer getOriginCount() {
    return originCount;
  }

  public void setOriginCount(Integer originCount) {
    this.originCount = originCount;
  }

  public InlineResponse20043ResultEvents peerCount(Integer peerCount) {
    this.peerCount = peerCount;
    return this;
  }

   /**
   * Get peerCount
   * @return peerCount
  **/
  @Schema(required = true, description = "")
  public Integer getPeerCount() {
    return peerCount;
  }

  public void setPeerCount(Integer peerCount) {
    this.peerCount = peerCount;
  }

  public InlineResponse20043ResultEvents prefixCount(Integer prefixCount) {
    this.prefixCount = prefixCount;
    return this;
  }

   /**
   * Get prefixCount
   * @return prefixCount
  **/
  @Schema(required = true, description = "")
  public Integer getPrefixCount() {
    return prefixCount;
  }

  public void setPrefixCount(Integer prefixCount) {
    this.prefixCount = prefixCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20043ResultEvents inlineResponse20043ResultEvents = (InlineResponse20043ResultEvents) o;
    return Objects.equals(this.detectedTs, inlineResponse20043ResultEvents.detectedTs) &&
        Objects.equals(this.finished, inlineResponse20043ResultEvents.finished) &&
        Objects.equals(this.id, inlineResponse20043ResultEvents.id) &&
        Objects.equals(this.leakAsn, inlineResponse20043ResultEvents.leakAsn) &&
        Objects.equals(this.leakCount, inlineResponse20043ResultEvents.leakCount) &&
        Objects.equals(this.leakSeg, inlineResponse20043ResultEvents.leakSeg) &&
        Objects.equals(this.leakType, inlineResponse20043ResultEvents.leakType) &&
        Objects.equals(this.maxTs, inlineResponse20043ResultEvents.maxTs) &&
        Objects.equals(this.minTs, inlineResponse20043ResultEvents.minTs) &&
        Objects.equals(this.originCount, inlineResponse20043ResultEvents.originCount) &&
        Objects.equals(this.peerCount, inlineResponse20043ResultEvents.peerCount) &&
        Objects.equals(this.prefixCount, inlineResponse20043ResultEvents.prefixCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectedTs, finished, id, leakAsn, leakCount, leakSeg, leakType, maxTs, minTs, originCount, peerCount, prefixCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20043ResultEvents {\n");
    
    sb.append("    detectedTs: ").append(toIndentedString(detectedTs)).append("\n");
    sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    leakAsn: ").append(toIndentedString(leakAsn)).append("\n");
    sb.append("    leakCount: ").append(toIndentedString(leakCount)).append("\n");
    sb.append("    leakSeg: ").append(toIndentedString(leakSeg)).append("\n");
    sb.append("    leakType: ").append(toIndentedString(leakType)).append("\n");
    sb.append("    maxTs: ").append(toIndentedString(maxTs)).append("\n");
    sb.append("    minTs: ").append(toIndentedString(minTs)).append("\n");
    sb.append("    originCount: ").append(toIndentedString(originCount)).append("\n");
    sb.append("    peerCount: ").append(toIndentedString(peerCount)).append("\n");
    sb.append("    prefixCount: ").append(toIndentedString(prefixCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
