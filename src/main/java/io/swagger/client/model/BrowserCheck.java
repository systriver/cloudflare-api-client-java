/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BrowserCheckValue;
import io.swagger.client.model.SchemasBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).
 */
@Schema(description = "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class BrowserCheck extends SchemasBase implements Setting {
  @SerializedName("id")
  private String browserCheckId = null;

  @SerializedName("value")
  private BrowserCheckValue browserCheckValue = null;

  public BrowserCheck browserCheckId(String browserCheckId) {
    this.browserCheckId = browserCheckId;
    return this;
  }

   /**
   * ID of the zone setting.
   * @return browserCheckId
  **/
  @Schema(example = "browser_check", description = "ID of the zone setting.")
  public String getBrowserCheckId() {
    return browserCheckId;
  }

  public void setBrowserCheckId(String browserCheckId) {
    this.browserCheckId = browserCheckId;
  }

  public BrowserCheck browserCheckValue(BrowserCheckValue browserCheckValue) {
    this.browserCheckValue = browserCheckValue;
    return this;
  }

   /**
   * Get browserCheckValue
   * @return browserCheckValue
  **/
  @Schema(description = "")
  public BrowserCheckValue getBrowserCheckValue() {
    return browserCheckValue;
  }

  public void setBrowserCheckValue(BrowserCheckValue browserCheckValue) {
    this.browserCheckValue = browserCheckValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrowserCheck browserCheck = (BrowserCheck) o;
    return Objects.equals(this.browserCheckId, browserCheck.browserCheckId) &&
        Objects.equals(this.browserCheckValue, browserCheck.browserCheckValue) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(browserCheckId, browserCheckValue, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrowserCheck {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    browserCheckId: ").append(toIndentedString(browserCheckId)).append("\n");
    sb.append("    browserCheckValue: ").append(toIndentedString(browserCheckValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
