/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Logging settings by rule type.
 */
@Schema(description = "Logging settings by rule type.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class GatewayaccountloggingsettingsSettingsByRuleType {
  @SerializedName("dns")
  private Object dns = null;

  @SerializedName("http")
  private Object http = null;

  @SerializedName("l4")
  private Object l4 = null;

  public GatewayaccountloggingsettingsSettingsByRuleType dns(Object dns) {
    this.dns = dns;
    return this;
  }

   /**
   * Logging settings for DNS firewall.
   * @return dns
  **/
  @Schema(description = "Logging settings for DNS firewall.")
  public Object getDns() {
    return dns;
  }

  public void setDns(Object dns) {
    this.dns = dns;
  }

  public GatewayaccountloggingsettingsSettingsByRuleType http(Object http) {
    this.http = http;
    return this;
  }

   /**
   * Logging settings for HTTP/HTTPS firewall.
   * @return http
  **/
  @Schema(description = "Logging settings for HTTP/HTTPS firewall.")
  public Object getHttp() {
    return http;
  }

  public void setHttp(Object http) {
    this.http = http;
  }

  public GatewayaccountloggingsettingsSettingsByRuleType l4(Object l4) {
    this.l4 = l4;
    return this;
  }

   /**
   * Logging settings for Network firewall.
   * @return l4
  **/
  @Schema(description = "Logging settings for Network firewall.")
  public Object getL4() {
    return l4;
  }

  public void setL4(Object l4) {
    this.l4 = l4;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayaccountloggingsettingsSettingsByRuleType gatewayaccountloggingsettingsSettingsByRuleType = (GatewayaccountloggingsettingsSettingsByRuleType) o;
    return Objects.equals(this.dns, gatewayaccountloggingsettingsSettingsByRuleType.dns) &&
        Objects.equals(this.http, gatewayaccountloggingsettingsSettingsByRuleType.http) &&
        Objects.equals(this.l4, gatewayaccountloggingsettingsSettingsByRuleType.l4);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dns, http, l4);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayaccountloggingsettingsSettingsByRuleType {\n");
    
    sb.append("    dns: ").append(toIndentedString(dns)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    l4: ").append(toIndentedString(l4)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
