/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Configures origin steering for the pool. Controls how origins are selected for new sessions and traffic without session affinity.
 */
@Schema(description = "Configures origin steering for the pool. Controls how origins are selected for new sessions and traffic without session affinity.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class OriginSteering {
  /**
   * The type of origin steering policy to use, either \&quot;random\&quot; or \&quot;hash\&quot; (based on CF-Connecting-IP).
   */
  @JsonAdapter(PolicyEnum.Adapter.class)
  public enum PolicyEnum {
    RANDOM("random"),
    HASH("hash");

    private String value;

    PolicyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PolicyEnum fromValue(String input) {
      for (PolicyEnum b : PolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PolicyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("policy")
  private PolicyEnum policy = PolicyEnum.RANDOM;

  public OriginSteering policy(PolicyEnum policy) {
    this.policy = policy;
    return this;
  }

   /**
   * The type of origin steering policy to use, either \&quot;random\&quot; or \&quot;hash\&quot; (based on CF-Connecting-IP).
   * @return policy
  **/
  @Schema(description = "The type of origin steering policy to use, either \"random\" or \"hash\" (based on CF-Connecting-IP).")
  public PolicyEnum getPolicy() {
    return policy;
  }

  public void setPolicy(PolicyEnum policy) {
    this.policy = policy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginSteering originSteering = (OriginSteering) o;
    return Objects.equals(this.policy, originSteering.policy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginSteering {\n");
    
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
