/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MechanismType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * History
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class History {
  @SerializedName("alert_body")
  private String alertBody = null;

  @SerializedName("alert_type")
  private String alertType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("mechanism")
  private String mechanism = null;

  @SerializedName("mechanism_type")
  private MechanismType mechanismType = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("sent")
  private OffsetDateTime sent = null;

  public History alertBody(String alertBody) {
    this.alertBody = alertBody;
    return this;
  }

   /**
   * Get alertBody
   * @return alertBody
  **/
  @Schema(description = "")
  public String getAlertBody() {
    return alertBody;
  }

  public void setAlertBody(String alertBody) {
    this.alertBody = alertBody;
  }

  public History alertType(String alertType) {
    this.alertType = alertType;
    return this;
  }

   /**
   * Get alertType
   * @return alertType
  **/
  @Schema(description = "")
  public String getAlertType() {
    return alertType;
  }

  public void setAlertType(String alertType) {
    this.alertType = alertType;
  }

  public History description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public History id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public History mechanism(String mechanism) {
    this.mechanism = mechanism;
    return this;
  }

   /**
   * Get mechanism
   * @return mechanism
  **/
  @Schema(description = "")
  public String getMechanism() {
    return mechanism;
  }

  public void setMechanism(String mechanism) {
    this.mechanism = mechanism;
  }

  public History mechanismType(MechanismType mechanismType) {
    this.mechanismType = mechanismType;
    return this;
  }

   /**
   * Get mechanismType
   * @return mechanismType
  **/
  @Schema(description = "")
  public MechanismType getMechanismType() {
    return mechanismType;
  }

  public void setMechanismType(MechanismType mechanismType) {
    this.mechanismType = mechanismType;
  }

  public History name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public History sent(OffsetDateTime sent) {
    this.sent = sent;
    return this;
  }

   /**
   * Get sent
   * @return sent
  **/
  @Schema(description = "")
  public OffsetDateTime getSent() {
    return sent;
  }

  public void setSent(OffsetDateTime sent) {
    this.sent = sent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    History history = (History) o;
    return Objects.equals(this.alertBody, history.alertBody) &&
        Objects.equals(this.alertType, history.alertType) &&
        Objects.equals(this.description, history.description) &&
        Objects.equals(this.id, history.id) &&
        Objects.equals(this.mechanism, history.mechanism) &&
        Objects.equals(this.mechanismType, history.mechanismType) &&
        Objects.equals(this.name, history.name) &&
        Objects.equals(this.sent, history.sent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertBody, alertType, description, id, mechanism, mechanismType, name, sent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class History {\n");
    
    sb.append("    alertBody: ").append(toIndentedString(alertBody)).append("\n");
    sb.append("    alertType: ").append(toIndentedString(alertType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mechanism: ").append(toIndentedString(mechanism)).append("\n");
    sb.append("    mechanismType: ").append(toIndentedString(mechanismType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
