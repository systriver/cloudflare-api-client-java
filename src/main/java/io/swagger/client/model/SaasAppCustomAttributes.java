/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SaasAppCustomAttributesSource;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SaasAppCustomAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class SaasAppCustomAttributes {
  @SerializedName("name")
  private String name = null;

  /**
   * A globally unique name for an identity or service provider.
   */
  @JsonAdapter(NameFormatEnum.Adapter.class)
  public enum NameFormatEnum {
    UNSPECIFIED("urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"),
    BASIC("urn:oasis:names:tc:SAML:2.0:attrname-format:basic"),
    URI("urn:oasis:names:tc:SAML:2.0:attrname-format:uri");

    private String value;

    NameFormatEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NameFormatEnum fromValue(String input) {
      for (NameFormatEnum b : NameFormatEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NameFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NameFormatEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public NameFormatEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return NameFormatEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("name_format")
  private NameFormatEnum nameFormat = null;

  @SerializedName("source")
  private SaasAppCustomAttributesSource source = null;

  public SaasAppCustomAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the attribute.
   * @return name
  **/
  @Schema(example = "family_name", description = "The name of the attribute.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SaasAppCustomAttributes nameFormat(NameFormatEnum nameFormat) {
    this.nameFormat = nameFormat;
    return this;
  }

   /**
   * A globally unique name for an identity or service provider.
   * @return nameFormat
  **/
  @Schema(example = "urn:oasis:names:tc:SAML:2.0:attrname-format:basic", description = "A globally unique name for an identity or service provider.")
  public NameFormatEnum getNameFormat() {
    return nameFormat;
  }

  public void setNameFormat(NameFormatEnum nameFormat) {
    this.nameFormat = nameFormat;
  }

  public SaasAppCustomAttributes source(SaasAppCustomAttributesSource source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public SaasAppCustomAttributesSource getSource() {
    return source;
  }

  public void setSource(SaasAppCustomAttributesSource source) {
    this.source = source;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaasAppCustomAttributes saasAppCustomAttributes = (SaasAppCustomAttributes) o;
    return Objects.equals(this.name, saasAppCustomAttributes.name) &&
        Objects.equals(this.nameFormat, saasAppCustomAttributes.nameFormat) &&
        Objects.equals(this.source, saasAppCustomAttributes.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, nameFormat, source);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaasAppCustomAttributes {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameFormat: ").append(toIndentedString(nameFormat)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
