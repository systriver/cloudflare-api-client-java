/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Base;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.CloudflareClientAPISMIMEARecordData;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * SMIMEARecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class SMIMEARecord extends Base {
  @SerializedName("content")
  private String smIMEARecordContent = null;

  @SerializedName("data")
  private CloudflareClientAPISMIMEARecordData smIMEARecordData = null;

  @SerializedName("name")
  private String smIMEARecordName = null;

  @SerializedName("type")
  private String smIMEARecordType = null;

   /**
   * Formatted SMIMEA content. See &#x27;data&#x27; to set SMIMEA properties.
   * @return smIMEARecordContent
  **/
  @Schema(description = "Formatted SMIMEA content. See 'data' to set SMIMEA properties.")
  public String getSmIMEARecordContent() {
    return smIMEARecordContent;
  }

  public SMIMEARecord smIMEARecordData(CloudflareClientAPISMIMEARecordData smIMEARecordData) {
    this.smIMEARecordData = smIMEARecordData;
    return this;
  }

   /**
   * Get smIMEARecordData
   * @return smIMEARecordData
  **/
  @Schema(required = true, description = "")
  public CloudflareClientAPISMIMEARecordData getSmIMEARecordData() {
    return smIMEARecordData;
  }

  public void setSmIMEARecordData(CloudflareClientAPISMIMEARecordData smIMEARecordData) {
    this.smIMEARecordData = smIMEARecordData;
  }

  public SMIMEARecord smIMEARecordName(String smIMEARecordName) {
    this.smIMEARecordName = smIMEARecordName;
    return this;
  }

   /**
   * Get smIMEARecordName
   * @return smIMEARecordName
  **/
  @Schema(required = true, description = "")
  public String getSmIMEARecordName() {
    return smIMEARecordName;
  }

  public void setSmIMEARecordName(String smIMEARecordName) {
    this.smIMEARecordName = smIMEARecordName;
  }

  public SMIMEARecord smIMEARecordType(String smIMEARecordType) {
    this.smIMEARecordType = smIMEARecordType;
    return this;
  }

   /**
   * Record type.
   * @return smIMEARecordType
  **/
  @Schema(example = "SMIMEA", required = true, description = "Record type.")
  public String getSmIMEARecordType() {
    return smIMEARecordType;
  }

  public void setSmIMEARecordType(String smIMEARecordType) {
    this.smIMEARecordType = smIMEARecordType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SMIMEARecord smIMEARecord = (SMIMEARecord) o;
    return Objects.equals(this.smIMEARecordContent, smIMEARecord.smIMEARecordContent) &&
        Objects.equals(this.smIMEARecordData, smIMEARecord.smIMEARecordData) &&
        Objects.equals(this.smIMEARecordName, smIMEARecord.smIMEARecordName) &&
        Objects.equals(this.smIMEARecordType, smIMEARecord.smIMEARecordType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(smIMEARecordContent, smIMEARecordData, smIMEARecordName, smIMEARecordType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SMIMEARecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    smIMEARecordContent: ").append(toIndentedString(smIMEARecordContent)).append("\n");
    sb.append("    smIMEARecordData: ").append(toIndentedString(smIMEARecordData)).append("\n");
    sb.append("    smIMEARecordName: ").append(toIndentedString(smIMEARecordName)).append("\n");
    sb.append("    smIMEARecordType: ").append(toIndentedString(smIMEARecordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
