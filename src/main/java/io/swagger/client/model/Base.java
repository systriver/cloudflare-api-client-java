/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * Base
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Base {
  @SerializedName("comment")
  private String comment = null;

  @SerializedName("content")
  private String content = null;

  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("data")
  private Object data = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("locked")
  private Boolean locked = null;

  @SerializedName("meta")
  private BaseMeta meta = null;

  @SerializedName("modified_on")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("proxiable")
  private Boolean proxiable = null;

  @SerializedName("proxied")
  private Boolean proxied = null;

  @SerializedName("tags")
  private Tags tags = null;

  @SerializedName("ttl")
  private BigDecimal ttl = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("zone_id")
  private String zoneId = null;

  @SerializedName("zone_name")
  private String zoneName = null;

  public Base comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(description = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Base content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @Schema(description = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

   /**
   * When the record was created.
   * @return createdOn
  **/
  @Schema(example = "2014-01-01T05:20:00.123450Z", description = "When the record was created.")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public Base data(Object data) {
    this.data = data;
    return this;
  }

   /**
   * Metadata about the record.
   * @return data
  **/
  @Schema(example = "{}", description = "Metadata about the record.")
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }

  public Base id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * Whether this record can be modified/deleted (true means it&#x27;s managed by Cloudflare).
   * @return locked
  **/
  @Schema(example = "false", description = "Whether this record can be modified/deleted (true means it's managed by Cloudflare).")
  public Boolean isLocked() {
    return locked;
  }

  public Base meta(BaseMeta meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @Schema(description = "")
  public BaseMeta getMeta() {
    return meta;
  }

  public void setMeta(BaseMeta meta) {
    this.meta = meta;
  }

   /**
   * When the record was last modified.
   * @return modifiedOn
  **/
  @Schema(example = "2014-01-01T05:20:00.123450Z", description = "When the record was last modified.")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public Base name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Whether the record can be proxied by Cloudflare or not.
   * @return proxiable
  **/
  @Schema(example = "true", description = "Whether the record can be proxied by Cloudflare or not.")
  public Boolean isProxiable() {
    return proxiable;
  }

  public Base proxied(Boolean proxied) {
    this.proxied = proxied;
    return this;
  }

   /**
   * Get proxied
   * @return proxied
  **/
  @Schema(description = "")
  public Boolean getProxied() {
    return proxied;
  }

  public void setProxied(Boolean proxied) {
    this.proxied = proxied;
  }

  public Base tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }

  public Base ttl(BigDecimal ttl) {
    this.ttl = ttl;
    return this;
  }

   /**
   * Get ttl
   * @return ttl
  **/
  @Schema(description = "")
  public BigDecimal getTtl() {
    return ttl;
  }

  public void setTtl(BigDecimal ttl) {
    this.ttl = ttl;
  }

  public Base type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Base zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }

   /**
   * The domain of the record.
   * @return zoneName
  **/
  @Schema(example = "example.com", description = "The domain of the record.")
  public String getZoneName() {
    return zoneName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Base base = (Base) o;
    return Objects.equals(this.comment, base.comment) &&
        Objects.equals(this.content, base.content) &&
        Objects.equals(this.createdOn, base.createdOn) &&
        Objects.equals(this.data, base.data) &&
        Objects.equals(this.id, base.id) &&
        Objects.equals(this.locked, base.locked) &&
        Objects.equals(this.meta, base.meta) &&
        Objects.equals(this.modifiedOn, base.modifiedOn) &&
        Objects.equals(this.name, base.name) &&
        Objects.equals(this.proxiable, base.proxiable) &&
        Objects.equals(this.proxied, base.proxied) &&
        Objects.equals(this.tags, base.tags) &&
        Objects.equals(this.ttl, base.ttl) &&
        Objects.equals(this.type, base.type) &&
        Objects.equals(this.zoneId, base.zoneId) &&
        Objects.equals(this.zoneName, base.zoneName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comment, content, createdOn, data, id, locked, meta, modifiedOn, name, proxiable, proxied, tags, ttl, type, zoneId, zoneName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Base {\n");
    
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    proxiable: ").append(toIndentedString(proxiable)).append("\n");
    sb.append("    proxied: ").append(toIndentedString(proxied)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
