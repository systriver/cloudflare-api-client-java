/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CloudflareTunnelComponentsSchemasMetadata;
import io.swagger.client.model.Connections;
import io.swagger.client.model.TunnelType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * A Cloudflare Tunnel that connects your origin to Cloudflare&#x27;s edge.
 */
@Schema(description = "A Cloudflare Tunnel that connects your origin to Cloudflare's edge.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class Tunnel {
  @SerializedName("account_tag")
  private String accountTag = null;

  @SerializedName("connections")
  private Connections connections = null;

  @SerializedName("conns_active_at")
  private OffsetDateTime connsActiveAt = null;

  @SerializedName("conns_inactive_at")
  private OffsetDateTime connsInactiveAt = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("deleted_at")
  private OffsetDateTime deletedAt = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("metadata")
  private CloudflareTunnelComponentsSchemasMetadata metadata = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("remote_config")
  private Boolean remoteConfig = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("tun_type")
  private TunnelType tunType = null;

  public Tunnel accountTag(String accountTag) {
    this.accountTag = accountTag;
    return this;
  }

   /**
   * Get accountTag
   * @return accountTag
  **/
  @Schema(description = "")
  public String getAccountTag() {
    return accountTag;
  }

  public void setAccountTag(String accountTag) {
    this.accountTag = accountTag;
  }

  public Tunnel connections(Connections connections) {
    this.connections = connections;
    return this;
  }

   /**
   * Get connections
   * @return connections
  **/
  @Schema(description = "")
  public Connections getConnections() {
    return connections;
  }

  public void setConnections(Connections connections) {
    this.connections = connections;
  }

  public Tunnel connsActiveAt(OffsetDateTime connsActiveAt) {
    this.connsActiveAt = connsActiveAt;
    return this;
  }

   /**
   * Get connsActiveAt
   * @return connsActiveAt
  **/
  @Schema(description = "")
  public OffsetDateTime getConnsActiveAt() {
    return connsActiveAt;
  }

  public void setConnsActiveAt(OffsetDateTime connsActiveAt) {
    this.connsActiveAt = connsActiveAt;
  }

  public Tunnel connsInactiveAt(OffsetDateTime connsInactiveAt) {
    this.connsInactiveAt = connsInactiveAt;
    return this;
  }

   /**
   * Get connsInactiveAt
   * @return connsInactiveAt
  **/
  @Schema(description = "")
  public OffsetDateTime getConnsInactiveAt() {
    return connsInactiveAt;
  }

  public void setConnsInactiveAt(OffsetDateTime connsInactiveAt) {
    this.connsInactiveAt = connsInactiveAt;
  }

  public Tunnel createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Tunnel deletedAt(OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }

  public Tunnel id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Tunnel metadata(CloudflareTunnelComponentsSchemasMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public CloudflareTunnelComponentsSchemasMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(CloudflareTunnelComponentsSchemasMetadata metadata) {
    this.metadata = metadata;
  }

  public Tunnel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Tunnel remoteConfig(Boolean remoteConfig) {
    this.remoteConfig = remoteConfig;
    return this;
  }

   /**
   * Get remoteConfig
   * @return remoteConfig
  **/
  @Schema(description = "")
  public Boolean getRemoteConfig() {
    return remoteConfig;
  }

  public void setRemoteConfig(Boolean remoteConfig) {
    this.remoteConfig = remoteConfig;
  }

  public Tunnel status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Tunnel tunType(TunnelType tunType) {
    this.tunType = tunType;
    return this;
  }

   /**
   * Get tunType
   * @return tunType
  **/
  @Schema(description = "")
  public TunnelType getTunType() {
    return tunType;
  }

  public void setTunType(TunnelType tunType) {
    this.tunType = tunType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tunnel tunnel = (Tunnel) o;
    return Objects.equals(this.accountTag, tunnel.accountTag) &&
        Objects.equals(this.connections, tunnel.connections) &&
        Objects.equals(this.connsActiveAt, tunnel.connsActiveAt) &&
        Objects.equals(this.connsInactiveAt, tunnel.connsInactiveAt) &&
        Objects.equals(this.createdAt, tunnel.createdAt) &&
        Objects.equals(this.deletedAt, tunnel.deletedAt) &&
        Objects.equals(this.id, tunnel.id) &&
        Objects.equals(this.metadata, tunnel.metadata) &&
        Objects.equals(this.name, tunnel.name) &&
        Objects.equals(this.remoteConfig, tunnel.remoteConfig) &&
        Objects.equals(this.status, tunnel.status) &&
        Objects.equals(this.tunType, tunnel.tunType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountTag, connections, connsActiveAt, connsInactiveAt, createdAt, deletedAt, id, metadata, name, remoteConfig, status, tunType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tunnel {\n");
    
    sb.append("    accountTag: ").append(toIndentedString(accountTag)).append("\n");
    sb.append("    connections: ").append(toIndentedString(connections)).append("\n");
    sb.append("    connsActiveAt: ").append(toIndentedString(connsActiveAt)).append("\n");
    sb.append("    connsInactiveAt: ").append(toIndentedString(connsInactiveAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    remoteConfig: ").append(toIndentedString(remoteConfig)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tunType: ").append(toIndentedString(tunType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
