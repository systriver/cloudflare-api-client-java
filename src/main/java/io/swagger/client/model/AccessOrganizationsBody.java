/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LoginDesign;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AccessOrganizationsBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class AccessOrganizationsBody {
  @SerializedName("auth_domain")
  private String authDomain = null;

  @SerializedName("is_ui_read_only")
  private Boolean isUiReadOnly = null;

  @SerializedName("login_design")
  private LoginDesign loginDesign = null;

  @SerializedName("name")
  private String name = null;

  public AccessOrganizationsBody authDomain(String authDomain) {
    this.authDomain = authDomain;
    return this;
  }

   /**
   * Get authDomain
   * @return authDomain
  **/
  @Schema(description = "")
  public String getAuthDomain() {
    return authDomain;
  }

  public void setAuthDomain(String authDomain) {
    this.authDomain = authDomain;
  }

  public AccessOrganizationsBody isUiReadOnly(Boolean isUiReadOnly) {
    this.isUiReadOnly = isUiReadOnly;
    return this;
  }

   /**
   * Get isUiReadOnly
   * @return isUiReadOnly
  **/
  @Schema(description = "")
  public Boolean getIsUiReadOnly() {
    return isUiReadOnly;
  }

  public void setIsUiReadOnly(Boolean isUiReadOnly) {
    this.isUiReadOnly = isUiReadOnly;
  }

  public AccessOrganizationsBody loginDesign(LoginDesign loginDesign) {
    this.loginDesign = loginDesign;
    return this;
  }

   /**
   * Get loginDesign
   * @return loginDesign
  **/
  @Schema(description = "")
  public LoginDesign getLoginDesign() {
    return loginDesign;
  }

  public void setLoginDesign(LoginDesign loginDesign) {
    this.loginDesign = loginDesign;
  }

  public AccessOrganizationsBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessOrganizationsBody accessOrganizationsBody = (AccessOrganizationsBody) o;
    return Objects.equals(this.authDomain, accessOrganizationsBody.authDomain) &&
        Objects.equals(this.isUiReadOnly, accessOrganizationsBody.isUiReadOnly) &&
        Objects.equals(this.loginDesign, accessOrganizationsBody.loginDesign) &&
        Objects.equals(this.name, accessOrganizationsBody.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authDomain, isUiReadOnly, loginDesign, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessOrganizationsBody {\n");
    
    sb.append("    authDomain: ").append(toIndentedString(authDomain)).append("\n");
    sb.append("    isUiReadOnly: ").append(toIndentedString(isUiReadOnly)).append("\n");
    sb.append("    loginDesign: ").append(toIndentedString(loginDesign)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
