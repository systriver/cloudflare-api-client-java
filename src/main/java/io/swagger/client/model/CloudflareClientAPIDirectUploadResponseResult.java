/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CloudflareClientAPIWatermarks;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CloudflareClientAPIDirectUploadResponseResult
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T13:40:27.702461541+09:00[Asia/Tokyo]")
public class CloudflareClientAPIDirectUploadResponseResult {
  @SerializedName("uid")
  private String uid = null;

  @SerializedName("uploadURL")
  private String uploadURL = null;

  @SerializedName("watermark")
  private CloudflareClientAPIWatermarks watermark = null;

  public CloudflareClientAPIDirectUploadResponseResult uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public CloudflareClientAPIDirectUploadResponseResult uploadURL(String uploadURL) {
    this.uploadURL = uploadURL;
    return this;
  }

   /**
   * The URL an unauthenticated upload can use for a single &#x60;HTTP POST multipart/form-data&#x60; request.
   * @return uploadURL
  **/
  @Schema(example = "www.example.com/samplepath", description = "The URL an unauthenticated upload can use for a single `HTTP POST multipart/form-data` request.")
  public String getUploadURL() {
    return uploadURL;
  }

  public void setUploadURL(String uploadURL) {
    this.uploadURL = uploadURL;
  }

  public CloudflareClientAPIDirectUploadResponseResult watermark(CloudflareClientAPIWatermarks watermark) {
    this.watermark = watermark;
    return this;
  }

   /**
   * Get watermark
   * @return watermark
  **/
  @Schema(description = "")
  public CloudflareClientAPIWatermarks getWatermark() {
    return watermark;
  }

  public void setWatermark(CloudflareClientAPIWatermarks watermark) {
    this.watermark = watermark;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudflareClientAPIDirectUploadResponseResult cloudflareClientAPIDirectUploadResponseResult = (CloudflareClientAPIDirectUploadResponseResult) o;
    return Objects.equals(this.uid, cloudflareClientAPIDirectUploadResponseResult.uid) &&
        Objects.equals(this.uploadURL, cloudflareClientAPIDirectUploadResponseResult.uploadURL) &&
        Objects.equals(this.watermark, cloudflareClientAPIDirectUploadResponseResult.watermark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, uploadURL, watermark);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudflareClientAPIDirectUploadResponseResult {\n");
    
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    uploadURL: ").append(toIndentedString(uploadURL)).append("\n");
    sb.append("    watermark: ").append(toIndentedString(watermark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
