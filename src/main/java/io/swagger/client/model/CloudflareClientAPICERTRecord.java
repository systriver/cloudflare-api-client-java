/*
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BaseMeta;
import io.swagger.client.model.CERTRecordData;
import io.swagger.client.model.DnsRecordComponentsSchemasBase;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * CloudflareClientAPICERTRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:44:19.166727222+09:00[Asia/Tokyo]")
public class CloudflareClientAPICERTRecord extends DnsRecordComponentsSchemasBase implements DnsRecord {
  @SerializedName("content")
  private String cloudflareClientAPICERTRecordContent = null;

  @SerializedName("data")
  private CERTRecordData cloudflareClientAPICERTRecordData = null;

  @SerializedName("name")
  private String cloudflareClientAPICERTRecordName = null;

  @SerializedName("type")
  private String cloudflareClientAPICERTRecordType = null;

   /**
   * Formatted CERT content. See &#x27;data&#x27; to set CERT properties.
   * @return cloudflareClientAPICERTRecordContent
  **/
  @Schema(description = "Formatted CERT content. See 'data' to set CERT properties.")
  public String getCloudflareClientAPICERTRecordContent() {
    return cloudflareClientAPICERTRecordContent;
  }

  public CloudflareClientAPICERTRecord cloudflareClientAPICERTRecordData(CERTRecordData cloudflareClientAPICERTRecordData) {
    this.cloudflareClientAPICERTRecordData = cloudflareClientAPICERTRecordData;
    return this;
  }

   /**
   * Get cloudflareClientAPICERTRecordData
   * @return cloudflareClientAPICERTRecordData
  **/
  @Schema(required = true, description = "")
  public CERTRecordData getCloudflareClientAPICERTRecordData() {
    return cloudflareClientAPICERTRecordData;
  }

  public void setCloudflareClientAPICERTRecordData(CERTRecordData cloudflareClientAPICERTRecordData) {
    this.cloudflareClientAPICERTRecordData = cloudflareClientAPICERTRecordData;
  }

  public CloudflareClientAPICERTRecord cloudflareClientAPICERTRecordName(String cloudflareClientAPICERTRecordName) {
    this.cloudflareClientAPICERTRecordName = cloudflareClientAPICERTRecordName;
    return this;
  }

   /**
   * Get cloudflareClientAPICERTRecordName
   * @return cloudflareClientAPICERTRecordName
  **/
  @Schema(required = true, description = "")
  public String getCloudflareClientAPICERTRecordName() {
    return cloudflareClientAPICERTRecordName;
  }

  public void setCloudflareClientAPICERTRecordName(String cloudflareClientAPICERTRecordName) {
    this.cloudflareClientAPICERTRecordName = cloudflareClientAPICERTRecordName;
  }

  public CloudflareClientAPICERTRecord cloudflareClientAPICERTRecordType(String cloudflareClientAPICERTRecordType) {
    this.cloudflareClientAPICERTRecordType = cloudflareClientAPICERTRecordType;
    return this;
  }

   /**
   * Record type.
   * @return cloudflareClientAPICERTRecordType
  **/
  @Schema(example = "CERT", required = true, description = "Record type.")
  public String getCloudflareClientAPICERTRecordType() {
    return cloudflareClientAPICERTRecordType;
  }

  public void setCloudflareClientAPICERTRecordType(String cloudflareClientAPICERTRecordType) {
    this.cloudflareClientAPICERTRecordType = cloudflareClientAPICERTRecordType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudflareClientAPICERTRecord cloudflareClientAPICERTRecord = (CloudflareClientAPICERTRecord) o;
    return Objects.equals(this.cloudflareClientAPICERTRecordContent, cloudflareClientAPICERTRecord.cloudflareClientAPICERTRecordContent) &&
        Objects.equals(this.cloudflareClientAPICERTRecordData, cloudflareClientAPICERTRecord.cloudflareClientAPICERTRecordData) &&
        Objects.equals(this.cloudflareClientAPICERTRecordName, cloudflareClientAPICERTRecord.cloudflareClientAPICERTRecordName) &&
        Objects.equals(this.cloudflareClientAPICERTRecordType, cloudflareClientAPICERTRecord.cloudflareClientAPICERTRecordType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudflareClientAPICERTRecordContent, cloudflareClientAPICERTRecordData, cloudflareClientAPICERTRecordName, cloudflareClientAPICERTRecordType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudflareClientAPICERTRecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    cloudflareClientAPICERTRecordContent: ").append(toIndentedString(cloudflareClientAPICERTRecordContent)).append("\n");
    sb.append("    cloudflareClientAPICERTRecordData: ").append(toIndentedString(cloudflareClientAPICERTRecordData)).append("\n");
    sb.append("    cloudflareClientAPICERTRecordName: ").append(toIndentedString(cloudflareClientAPICERTRecordName)).append("\n");
    sb.append("    cloudflareClientAPICERTRecordType: ").append(toIndentedString(cloudflareClientAPICERTRecordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
